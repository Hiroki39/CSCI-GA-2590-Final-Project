{"question": "Each pack of dvds costs c0 dollars. If there is a discount of c1 dollars on each packHow much do you have to pay to buy each pack?", "answer": [51.0], "response": "def calculate_price(c0, c1):\n    #calculate the discounted price\n    discounted_price = c0 - c1\n\n    return discounted_price", "mapping": {"c0": 76.0, "c1": 25.0}}
{"question": "Dan had $ c0 left with him after he bought a candy bar. If he had $ c1 at the startHow much did the candy bar cost?", "answer": [1.0], "response": "def candy_bar_cost(c0, c1):\n    # Dan had c0 left after buying the candy bar\n    # Dan had c1 at the start\n    # The cost of the candy bar can be calculated by subtracting c0 from c1\n    cost = c1 - c0\n    return cost", "mapping": {"c0": 3.0, "c1": 4.0}}
{"question": "Paco had c0 salty cookies and c1 sweet cookies. He ate c2 sweet cookies and c3 salty cookies.How many salty cookies did Paco have left?", "answer": [17.0], "response": "def remaining_salty_cookies(c0, c1, c2, c3):\n    # Paco had c0 salty cookies and ate c3 salty cookies\n    salty_cookies_before = c0\n    salty_cookies_eaten = c3\n\n    # Paco had c1 sweet cookies and ate c2 sweet cookies\n    sweet_cookies_before = c1\n    sweet_cookies_eaten = c2\n\n    # Calculate the remaining salty cookies by subtracting the eaten salty cookies from the original number of salty cookies\n    remaining_salty_cookies = salty_cookies_before - salty_cookies_eaten\n\n    return remaining_salty_cookies", "mapping": {"c0": 26.0, "c1": 17.0, "c2": 14.0, "c3": 9.0}}
{"question": "c0 children were riding on the bus. At the bus stop some children got off the bus. Then there were c1 children left on the bus.How many children got off the bus at the bus stop?", "answer": [22.0], "response": "def children_on_bus(c0, c1):\n    # c0 children were originally on the bus\n    # c1 children were left on the bus after some got off at the bus stop\n    # the number of children who got off the bus can be calculated by subtracting c1 from c0\n    children_off = c0 - c1\n    return children_off", "mapping": {"c0": 43.0, "c1": 21.0}}
{"question": "c0 children were riding on the bus. At the bus stop c1 children got on the bus while some got off the bus. Then there were c2 children altogether on the bus.How many more children got on the bus than those that got off?", "answer": [2.0], "response": "def children_on_bus(c0, c1, c2):\n    #calculate the number of children who got off the bus\n    got_off = c0 - (c2 - c1)\n    \n    #calculate the difference between the number of children who got on and off the bus\n    difference = c1 - got_off\n    \n    return difference", "mapping": {"c0": 28.0, "c1": 82.0, "c2": 30.0}}
{"question": "There were c0 dollars in Olivia's wallet. She collected c1 more dollars from an atm. After she visited a supermarket there were c2 dollars left.How much more money did she collect at the atm than she spent at the supermarket?", "answer": [46.0], "response": "def Problem(c0, c1, c2):\n    #Olivia had c0 dollars in her wallet\n    wallet_before = c0\n\n    #She collected c1 more dollars from an atm\n    collected = c1\n\n    #After visiting the supermarket, she had c2 dollars left\n    wallet_after = c2\n\n    #The amount she spent at the supermarket can be calculated by subtracting the amount of money she had after visiting the supermarket from the amount she had before collecting money from the atm\n    spent = wallet_before - wallet_after - collected\n\n    #The amount she collected at the atm minus the amount she spent at the supermarket is the difference between the two\n    difference = collected - spent\n\n    return difference", "mapping": {"c0": 3.0, "c1": 49.0, "c2": 49.0}}
{"question": "Jerry had some action figures on a shelf in his room. Later he added c0 more action figures to the shelf. If there are a total of c1 action figures on his shelf nowHow many action figures did he have initially on the shelf?", "answer": [3.0], "response": "def initial_figures(c0, c1):\n    #initial number of action figures can be calculated by subtracting the added figures from the total number of figures\n    initial = c1 - c0\n    return initial", "mapping": {"c0": 7.0, "c1": 10.0}}
{"question": "Paco had c0 cookies. He gave c1 cookies to his friend and ate c2 cookies.How many more cookies did he eat than those he gave to his friend?", "answer": [9.0], "response": "def cookie_problem(c0, c1, c2):\n    # Paco had c0 cookies\n    cookies_before = c0\n\n    # He gave c1 cookies to his friend\n    cookies_given = c1\n\n    # He ate c2 cookies\n    cookies_eaten = c2\n\n    # Calculate the difference between the cookies he ate and the cookies he gave to his friend\n    difference = cookies_eaten - cookies_given\n\n    return difference", "mapping": {"c0": 41.0, "c1": 9.0, "c2": 18.0}}
{"question": "Mary is baking a cake. The recipe calls for c0 cups of sugar c1 cups of flour and c2 cups of salt. She already put in c3 cups of flour.How many more cups of flour does she need to add?", "answer": [4.0], "response": "def remaining_flour(c0, c1, c2, c3):\n    #calculate the remaining amount of flour needed by subtracting the amount already added from the total required amount\n    remaining = c1 - c3\n    return remaining", "mapping": {"c0": 3.0, "c1": 10.0, "c2": 15.0, "c3": 6.0}}
{"question": "A waiter had some customers. After c0 customers left he still had c1 customers.How many customers did he have at the start?", "answer": [21.0], "response": "def customers_at_start(c0, c1):\n    # The waiter had c0 customers at the start\n    # After some customers left, he had c1 customers\n    # The number of customers who left can be calculated by subtracting the number of customers after from the number of customers before\n    customers_left = c0 - c1\n\n    # The number of customers at the start can be calculated by adding the number of customers who left to the number of customers after\n    customers_at_start = c1 + customers_left\n\n    return customers_at_start", "mapping": {"c0": 9.0, "c1": 12.0}}
{"question": "c0 birds were sitting on the fence. c1 more storks and c2 more birds came to join them.How many more storks than birds are sitting on the fence?", "answer": [1.0], "response": "def bird_count(c0, c1, c2):\n    #total number of birds on the fence\n    total_birds = c0 + c1 + c2\n\n    #number of storks on the fence\n    storks = c1\n\n    #number of birds on the fence\n    birds = c0 + c2\n\n    #difference between number of storks and birds on the fence\n    diff = storks - birds\n\n    return diff", "mapping": {"c0": 3.0, "c1": 6.0, "c2": 2.0}}
{"question": "They decided to hold the party in their backyard. If they have c0 sets of tables and each set has c1 chairsHow many chairs do they have in the backyard?", "answer": [143.0], "response": "def backyard_chairs(c0, c1):\n    #calculate the total number of chairs by multiplying the number of sets of tables with the number of chairs per set\n    total_chairs = c0 * c1\n    return total_chairs", "mapping": {"c0": 11.0, "c1": 13.0}}
{"question": "In a school there are c0 more girls than boys. If there are c1 girlsHow many pupils are there in that school?", "answer": [926.0], "response": "def school_pupils(c0, c1):\n    #calculate the number of boys by subtracting c0 from c1\n    boys = c1 - c0\n    #total number of pupils is the sum of boys and girls\n    pupils = c1 + boys\n    return pupils", "mapping": {"c0": 458.0, "c1": 692.0}}
{"question": "After resting they decided to go for a swim. The depth of the water is c0 times Dean's height. Dean is c1 feet taller than Ron. If Ron stands at c2 feetHow deep was the water?", "answer": [255.0], "response": "def water_depth(c0, c1, c2):\n    # Ron's height\n    ron_height = c2\n\n    # Dean's height\n    dean_height = ron_height + c1\n\n    # Depth of the water\n    water_depth = c0 * dean_height\n\n    return water_depth", "mapping": {"c0": 15.0, "c1": 4.0, "c2": 13.0}}
{"question": "c0 birds were sitting on the fence. c1 more birds and c2 more storks came to join them.How many birds are sitting on the fence?", "answer": [10.0], "response": "def birdCount(c0, c1, c2):\n    #initially there were c0 birds on the fence\n    birds_on_fence = c0\n\n    #c1 more birds and c2 more storks came to join them\n    birds_on_fence += c1\n    birds_on_fence += c2\n\n    return birds_on_fence", "mapping": {"c0": 6.0, "c1": 4.0, "c2": 8.0}}
{"question": "Marco and his dad went strawberry picking. Together they collected strawberries that weighed c0 pounds. On the way back Marco ' dad lost c1 pounds of strawberries. Marco's strawberries now weighed c2 pounds.How much did his dad's strawberries weigh now?", "answer": [16.0], "response": "def strawberry_weight(c0, c1, c2):\n    #total weight of strawberries collected by Marco and his dad\n    total_weight = c0\n\n    #weight of strawberries lost by Marco's dad\n    lost_weight = c1\n\n    #weight of strawberries collected by Marco\n    marco_weight = c2\n\n    #weight of strawberries collected by Marco's dad\n    dad_weight = total_weight - marco_weight\n\n    #weight of strawberries lost by Marco's dad per pound\n    lost_per_pound = lost_weight / dad_weight\n\n    #weight of strawberries left with Marco's dad\n    dad_weight_left = dad_weight - (lost_per_pound * marco_weight)\n\n    return dad_weight_left", "mapping": {"c0": 36.0, "c1": 8.0, "c2": 12.0}}
{"question": "In a school there are c0 girls and the rest are boys. If there are c1 more girls than boysHow many boys are there in that school?", "answer": [469.0], "response": "def boys_in_school(c0, c1):\n    #total number of students in the school\n    total_students = c0 + c1\n\n    #number of girls in the school\n    girls = c0\n\n    #number of boys in the school\n    boys = total_students - girls\n\n    return boys", "mapping": {"c0": 697.0, "c1": 228.0}}
{"question": "In a school there are c0 girls and c1 boys. c2 more girls and c3 more boys joined the school.How many girls are there in the school now?", "answer": [1414.0], "response": "def num_girls(c0, c1, c2, c3):\n    #total number of girls after new students join\n    total_girls = c0 + c2\n\n    return total_girls", "mapping": {"c0": 732.0, "c1": 761.0, "c2": 682.0, "c3": 8.0}}
{"question": "Danny collects bottle caps and wrappers. He found c0 bottle caps and c1 wrappers at the park. Now he has c2 bottle caps and c3 wrappers in his collection.How many wrappers did danny have at first?", "answer": [27.0], "response": "def initial_wrappers(c0, c1, c2, c3):\n    # Danny found c0 bottle caps and c1 wrappers at the park\n    initial_caps = c0\n    initial_wrappers = c1\n\n    # Now he has c2 bottle caps and c3 wrappers in his collection\n    final_caps = c2\n    final_wrappers = c3\n\n    # Danny gets a wrapper for every bottle cap he collects\n    wrappers_from_caps = final_caps - initial_caps\n\n    # Danny gets an additional wrapper for every 2 wrappers he already has\n    wrappers_from_wrappers = (final_wrappers - initial_wrappers - wrappers_from_caps) // 2\n\n    # The total number of wrappers Danny had at first is the sum of the wrappers he got from bottle caps and the wrappers he got from his initial collection\n    initial_total_wrappers = initial_wrappers + wrappers_from_caps + wrappers_from_wrappers\n\n    return initial_total_wrappers", "mapping": {"c0": 22.0, "c1": 30.0, "c2": 17.0, "c3": 57.0}}
{"question": "Paul got a box of c0 erasers and c1 crayons for his birthday. At the end of the school year he only had c2 crayons left while not having lost a single eraser.How many more crayons than erasers did he have left?", "answer": [66.0], "response": "def crayons_vs_erasers(c0, c1, c2):\n    #Paul got c0 erasers and c1 crayons for his birthday\n    erasers = c0\n    crayons = c1\n\n    #At the end of the school year, he had c2 crayons left\n    crayons_left = c2\n\n    #He didn't lose any erasers, so he still has c0 erasers left\n    erasers_left = c0\n\n    #Calculate the difference between the number of crayons left and erasers left\n    difference = crayons_left - erasers_left\n\n    return difference", "mapping": {"c0": 457.0, "c1": 617.0, "c2": 523.0}}
{"question": "Baker made c0 cakes. He sold c1 of them and bought c2 new cakes.How many cakes does baker still have?", "answer": [186.0], "response": "def cakes_left(c0, c1, c2):\n    # Baker starts with c0 cakes\n    total_cakes = c0\n\n    # Baker sells c1 cakes\n    total_cakes -= c1\n\n    # Baker buys c2 new cakes\n    total_cakes += c2\n\n    return total_cakes", "mapping": {"c0": 121.0, "c1": 105.0, "c2": 170.0}}
{"question": "An industrial machine worked for c0 minutes. It can make c1 shirts a minute.How many shirts did machine make?", "answer": [20.0], "response": "def shirts_made(c0, c1):\n    #the machine worked for c0 minutes\n    minutes_worked = c0\n\n    #the machine can make c1 shirts per minute\n    shirts_per_minute = c1\n\n    #the number of shirts made can be calculated by multiplying the minutes worked by the shirts made per minute\n    shirts_made = minutes_worked * shirts_per_minute\n\n    return shirts_made", "mapping": {"c0": 5.0, "c1": 4.0}}
{"question": "The bananas in Philip's collection are organized into groups of size c0. If there are a total of c1 bananas in Philip's banana collectionHow many groups are there?", "answer": [10.0], "response": "def count_groups(c0, c1):\n    # calculate the number of groups by dividing the total number of bananas by the size of each group\n    groups = c1 // c0\n    return groups", "mapping": {"c0": 18.0, "c1": 180.0}}
{"question": "There were some birds sitting on the fence. c0 more birds came to join them. If there are a total of c1 birds on the fence nowHow many birds had been sitting on the fence at the start?", "answer": [1.0], "response": "def Problem(c0, c1):\n    #c0 more birds came to join the birds on the fence\n    added_birds = c0\n\n    #there are now c1 birds on the fence\n    total_birds = c1\n\n    #the number of birds that were originally on the fence can be calculated by subtracting the added birds from the total birds\n    original_birds = total_birds - added_birds\n\n    return original_birds", "mapping": {"c0": 4.0, "c1": 5.0}}
{"question": "Jerry had c0 action figures on a shelf in his room. Later he added c1 more action figures to the shelf and removed some of the old ones. If there are c2 action figures on his shelf nowHow many action figures did he remove from the shelf?", "answer": [1.0], "response": "def Problem(c0, c1, c2):\n    #Jerry had c0 action figures on the shelf\n    initial_count = c0\n\n    #He added c1 more action figures to the shelf\n    added_count = c1\n\n    #Now there are c2 action figures on the shelf\n    final_count = c2\n\n    #To find out how many action figures he removed, we need to subtract the initial count and added count from the final count\n    removed_count = final_count - initial_count - added_count\n\n    return removed_count", "mapping": {"c0": 3.0, "c1": 4.0, "c2": 6.0}}
{"question": "Danny collects bottle caps and wrappers. He found c0 wrappers and c1 bottle caps at the park. Now he has c2 bottle caps and c3 wrappers in his collection.How many more wrappers than bottle caps did danny find at the park?", "answer": [60.0], "response": "def wrapper_vs_bottle_caps(c0, c1, c2, c3):\n    # Danny found c0 wrappers and c1 bottle caps at the park\n    wrappers_found = c0\n    bottle_caps_found = c1\n\n    # Now he has c2 bottle caps and c3 wrappers in his collection\n    wrappers_in_collection = c3\n    bottle_caps_in_collection = c2\n\n    # Calculate how many more wrappers than bottle caps Danny found at the park\n    wrappers_diff = wrappers_in_collection - wrappers_found\n    bottle_caps_diff = bottle_caps_in_collection - bottle_caps_found\n    diff = wrappers_diff - bottle_caps_diff\n\n    return diff", "mapping": {"c0": 65.0, "c1": 5.0, "c2": 31.0, "c3": 9.0}}
{"question": "Because of the decision Sofia asked the students to suggest specific types of food from a total of c0 choices. If c1 students suggested adding mashed potatoes c2 suggested adding bacon to the menu and the rest did not participateHow many students participated in the suggestion of new food items?", "answer": [488.0], "response": "def food_suggestion_participants(c0, c1, c2):\n    #total number of choices\n    total_choices = c0\n\n    #number of students who suggested mashed potatoes\n    mashed_potatoes_suggesters = c1\n\n    #number of students who suggested bacon\n    bacon_suggesters = c2\n\n    #number of students who did not participate\n    non_participants = total_choices - mashed_potatoes_suggesters - bacon_suggesters\n\n    #number of students who participated\n    participants = mashed_potatoes_suggesters + bacon_suggesters\n\n    return participants", "mapping": {"c0": 66.0, "c1": 450.0, "c2": 38.0}}
{"question": "Matthew gave equal numbers of crackers and cakes to his c0 friends. If he had c1 crackers and c2 cakes initiallyHow many crackers and cakes did each person eat?", "answer": [1.0], "response": "def crackers_and_cakes(c0, c1, c2):\n    # Matthew gave equal numbers of crackers and cakes to his c0 friends\n    num_friends = c0\n\n    # Initially, Matthew had c1 crackers and c2 cakes\n    num_crackers = c1\n    num_cakes = c2\n\n    # Each person ate an equal number of crackers and cakes\n    num_crackers_per_person = num_crackers / num_friends\n    num_cakes_per_person = num_cakes / num_friends\n\n    return num_crackers_per_person, num_cakes_per_person", "mapping": {"c0": 28.0, "c1": 13.0, "c2": 15.0}}
{"question": "A grocery store had c0 bottles of regular soda, c1 bottles of diet soda and c2 bottles of lite soda.How many bottles of regular soda and diet soda did they have altogether?", "answer": [89.0], "response": "def soda_bottles(c0, c1, c2):\n    #calculate the total number of regular and diet soda bottles\n    total_regular_diet = c0 + c1\n    return total_regular_diet", "mapping": {"c0": 49.0, "c1": 40.0, "c2": 6.0}}
{"question": "Dan has $ c0. He bought c1 candy bar for $ c2, each one costing the same amount of money.How much did each candy bar cost?", "answer": [2.0], "response": "def candy_bar_cost(c0, c1, c2):\n    # Dan has c0 dollars\n    money_before = c0\n\n    # Dan bought c1 candy bars for c2 dollars each\n    candy_bars = c1\n    total_cost = c1 * c2\n\n    # The cost of each candy bar can be calculated by dividing the total cost by the number of candy bars\n    cost_per_bar = total_cost / candy_bars\n\n    return cost_per_bar", "mapping": {"c0": 3.0, "c1": 2.0, "c2": 4.0}}
{"question": "Tiffany was collecting cans for recycling. On monday she had c0 bags of cans. The next day she found c1 more bags worth of cans.How many more bags did she find on the next day than she had on monday?", "answer": [5.0], "response": "def cans_found(c0, c1):\n    #c0 bags of cans on Monday\n    #c1 more bags found the next day\n    #calculate the difference between c1 and c0\n    difference = c1 - c0\n    return difference", "mapping": {"c0": 7.0, "c1": 12.0}}
{"question": "There were c0 roses and c1 orchids in the vase. Jessica cut some more roses and orchids from her flower garden. There are now c2 roses and c3 orchids in the vase.How many roses did she cut?", "answer": [2.0], "response": "def cut_roses(c0, c1, c2, c3):\n    #calculate the number of roses and orchids before cutting\n    roses_before = c0\n    orchids_before = c1\n\n    #calculate the number of roses and orchids after cutting\n    roses_after = c2\n    orchids_after = c3\n\n    #calculate the number of roses and orchids cut\n    roses_cut = roses_before - roses_after\n    orchids_cut = orchids_before - orchids_after\n\n    #return the number of roses cut\n    return roses_cut", "mapping": {"c0": 15.0, "c1": 62.0, "c2": 17.0, "c3": 96.0}}
{"question": "There are some baskets of peaches. Each basket has c0 red peaches and c1 green peaches. If there are a total of c2 peaches in all basketsHow many baskets of peaches are there?", "answer": [1.0], "response": "def count_baskets(c0, c1, c2):\n    #total number of peaches in all baskets\n    total_peaches = c0 + c1\n\n    #number of baskets can be calculated by dividing the total number of peaches by the number of peaches in each basket\n    num_baskets = c2 // total_peaches\n\n    return num_baskets", "mapping": {"c0": 4.0, "c1": 3.0, "c2": 7.0}}
{"question": "There were c0 dollars in Olivia's wallet. She spent c1 dollars at a supermarket.How much money does she have left?", "answer": [63.0], "response": "def remaining_money(c0, c1):\n    # Olivia had c0 dollars in her wallet\n    initial_money = c0\n\n    # She spent c1 dollars at the supermarket\n    spent_money = c1\n\n    # The amount of money she has left can be calculated by subtracting the amount she spent from her initial amount\n    remaining_money = initial_money - spent_money\n\n    return remaining_money", "mapping": {"c0": 78.0, "c1": 15.0}}
{"question": "Jack received c0 emails in the morning, c1 emails in the afternoon and some more in the evening. If he received a total of c2 emails in the dayHow many emails did Jack receive in the afternoon?", "answer": [1.0], "response": "def afternoon_emails(c0, c1, c2):\n    #total number of emails received in the day\n    total_emails = c2\n\n    #number of emails received in the morning\n    morning_emails = c0\n\n    #number of emails received in the evening can be calculated by subtracting morning emails from total emails\n    evening_emails = total_emails - morning_emails\n\n    #number of emails received in the afternoon can be calculated by subtracting evening emails from afternoon emails\n    afternoon_emails = c1 - evening_emails\n\n    return afternoon_emails", "mapping": {"c0": 6.0, "c1": 3.0, "c2": 10.0}}
{"question": "Dan has $ c0. He bought a candy bar for $ c1. Then his friend have him $ c2 How much money is left?", "answer": [1.0], "response": "def remaining_money(c0, c1, c2):\n    # Dan starts with c0 dollars\n    starting_money = c0\n\n    # Dan buys a candy bar for c1 dollars\n    candy_bar_cost = c1\n\n    # Dan's friend gives him c2 dollars\n    friend_gave = c2\n\n    # Dan's remaining money can be calculated by subtracting the cost of the candy bar and adding the money his friend gave him\n    remaining = starting_money - candy_bar_cost + friend_gave\n\n    return remaining", "mapping": {"c0": 4.0, "c1": 8.0, "c2": 5.0}}
{"question": "After eating a hearty meal they went to see the Buckingham palace. There, Rachel learned that c0 visitors came to the Buckingham palace on the previous day. If there were c1 visitors on that dayHow many visited the Buckingham palace within c2 days?", "answer": [949.0], "response": "def visitors_within_days(c0, c1, c2):\n    #calculate the average number of visitors per day\n    avg_visitors_per_day = (c1 - c0) / 1 #since we are only considering the previous day\n\n    #calculate the total number of visitors within c2 days\n    total_visitors = c0 + (avg_visitors_per_day * c2)\n\n    return total_visitors", "mapping": {"c0": 703.0, "c1": 246.0, "c2": 25.0}}
{"question": "For Gwen's birthday she received c0 dollars from her dad. Her mom gave her c1 more dollars. If she spent c2 dollars.How much more money did she receive from her mom than she did from her dad?", "answer": [2.0], "response": "def birthday_money(c0, c1, c2):\n    #calculate total money received\n    total_money = c0 + c1\n\n    #calculate how much money is left after spending\n    money_left = total_money - c2\n\n    #calculate the difference between money received from mom and dad\n    difference = c1 - c0\n\n    #if the difference is positive, mom gave more money than dad\n    if difference > 0:\n        return difference - (c2 - c1)\n    #if the difference is negative, dad gave more money than mom\n    else:\n        return difference + (c2 - c1)", "mapping": {"c0": 5.0, "c1": 7.0, "c2": 4.0}}
{"question": "There are c0 bananas and c1 oranges in Philip's collection. If the bananas are organized into c2 groups and oranges are organized into c3 groupsHow big is each group of oranges?", "answer": [2.0], "response": "def group_size(c0, c1, c2, c3):\n    #calculate the number of bananas in each group\n    banana_group_size = c0 // c2\n\n    #calculate the total number of oranges\n    total_oranges = c1\n\n    #calculate the number of groups of oranges\n    num_orange_groups = c3\n\n    #calculate the size of each group of oranges by dividing the total number of oranges by the number of groups\n    orange_group_size = total_oranges // num_orange_groups\n\n    return orange_group_size", "mapping": {"c0": 142.0, "c1": 356.0, "c2": 47.0, "c3": 178.0}}
{"question": "There are c0 different books and c1 different movies in the ' crazy silly school ' series. If you read c2 of the movies and watched c3 of the booksHow many more movies than books have you read?", "answer": [3.0], "response": "def compare_media(c0, c1, c2, c3):\n    #calculate the number of movies and books read\n    movies_read = c2\n    books_read = c3\n\n    #calculate the difference between the number of movies and books read\n    difference = movies_read - books_read\n\n    return difference", "mapping": {"c0": 8.0, "c1": 5.0, "c2": 19.0, "c3": 16.0}}
{"question": "Mary is baking a cake. The recipe calls for c0 cups of flour and c1 cups of sugar. She already put in some cups of flour. If she still needs c2 more cups of flourHow many cups of flour did she put in?", "answer": [10.0], "response": "def cups_of_flour(c0, c1, c2):\n    #calculate how much flour Mary still needs to add\n    needed_flour = c2 - c0\n\n    #calculate how much flour Mary has already added\n    added_flour = c0 - needed_flour\n\n    return added_flour", "mapping": {"c0": 12.0, "c1": 5.0, "c2": 2.0}}
{"question": "Danny collects bottle caps and wrappers. He found c0 wrappers and c1 bottle caps at the park. Now he has c2 bottle caps and c3 wrappers in his collection.How many more bottle caps than wrappers did danny find at the park?", "answer": [4.0], "response": "def bottle_caps_vs_wrappers(c0, c1, c2, c3):\n    #calculate the number of bottle caps and wrappers Danny found at the park\n    found_caps = c1\n    found_wrappers = c0\n\n    #calculate the total number of bottle caps and wrappers Danny has in his collection now\n    total_caps = c2\n    total_wrappers = c3\n\n    #calculate the difference between the number of bottle caps and wrappers Danny found at the park\n    diff = found_caps - found_wrappers\n\n    #calculate the difference between the total number of bottle caps and wrappers Danny has in his collection now\n    diff_total = total_caps - total_wrappers\n\n    #calculate the difference between the two differences to get the answer\n    answer = diff_total - diff\n\n    return answer", "mapping": {"c0": 46.0, "c1": 50.0, "c2": 21.0, "c3": 52.0}}
{"question": "Luke played c0 rounds of a trivia game. If he gained c1 points in each roundHow many points did he score in the game?", "answer": [8142.0], "response": "def trivia_score(c0, c1):\n    # Luke played c0 rounds of the game\n    rounds_played = c0\n\n    # He gained c1 points in each round\n    points_per_round = c1\n\n    # Total points scored in the game can be calculated by multiplying the number of rounds played with the points gained per round\n    total_score = rounds_played * points_per_round\n\n    return total_score", "mapping": {"c0": 177.0, "c1": 46.0}}
{"question": "c0 birds and c1 storks were sitting on the fence. c2 more birds came to join them.How many more birds than storks are sitting on the fence?", "answer": [1.0], "response": "def fence_birds(c0, c1, c2):\n    #total number of birds on the fence\n    birds = c0 + c2\n    #number of storks on the fence\n    storks = c1\n    #difference between number of birds and storks\n    diff = birds - storks\n    return diff", "mapping": {"c0": 3.0, "c1": 4.0, "c2": 2.0}}
{"question": "The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped c0 inches. The mouse jumped c1 inches lesser than the frog who jumped c2 inches farther than the grasshopper.How far did the mouse jump?", "answer": [39.0], "response": "def jumping_contest(c0, c1, c2):\n    #the mouse jumped c1 inches lesser than the frog\n    mouse_jump = c2 - c1\n    return mouse_jump", "mapping": {"c0": 9.0, "c1": 3.0, "c2": 33.0}}
{"question": "Zachary did c0 push-ups and c1 crunches in gym class today. David did c2 more push-ups but c3 less crunches than zachary.How many more push-ups than crunches did Zachary do?", "answer": [32.0], "response": "def gym_class(c0, c1, c2, c3):\n    # Zachary did c0 push-ups and c1 crunches\n    zachary_pushups = c0\n    zachary_crunches = c1\n\n    # David did c2 more push-ups but c3 less crunches than Zachary\n    david_pushups = c0 + c2\n    david_crunches = c1 - c3\n\n    # How many more push-ups than crunches did Zachary do?\n    pushups_diff = zachary_pushups - david_pushups\n    crunches_diff = zachary_crunches - david_crunches\n    result = pushups_diff - crunches_diff\n\n    return result", "mapping": {"c0": 35.0, "c1": 3.0, "c2": 58.0, "c3": 87.0}}
{"question": "Jack received c0 emails in the morning, c1 emails in the afternoon and c2 emails in the evening.How many emails did Jack receive in the afternoon and evening?", "answer": [13.0], "response": "def afternoon_and_evening_emails(c0, c1, c2):\n    # Jack received c1 emails in the afternoon and c2 emails in the evening\n    afternoon_emails = c1\n    evening_emails = c2\n\n    # The total number of emails Jack received in the afternoon and evening can be calculated by adding c1 and c2\n    total_emails = afternoon_emails + evening_emails\n\n    return total_emails", "mapping": {"c0": 4.0, "c1": 5.0, "c2": 8.0}}
{"question": "Jerry had c0 action figures on a shelf in his room. Later he added some more action figures to the shelf and removed c1 of the old ones. If there are c2 action figures on his shelf nowHow many action figures did he add to the shelf?", "answer": [11.0], "response": "def calculate_added_figures(c0, c1, c2):\n    #calculate the number of action figures added by subtracting the original number of action figures from the current number\n    added_figures = c2 - (c0 - c1)\n    return added_figures", "mapping": {"c0": 7.0, "c1": 10.0, "c2": 8.0}}
{"question": "Julia played tag with c0 kids on monday. She played tag with c1 kids on tuesday. She spent a total of c2 hours to play tag on both days.How many kids did she play with altogether?", "answer": [26.0], "response": "def tag_game(c0, c1, c2):\n    #total number of kids Julia played with\n    total_kids = c0 + c1\n\n    #average time spent playing tag per kid\n    avg_time = c2 / total_kids\n\n    #total time spent playing tag with all kids\n    total_time = avg_time * total_kids\n\n    #number of kids Julia played with altogether\n    return total_kids", "mapping": {"c0": 12.0, "c1": 14.0, "c2": 34.0}}
{"question": "Nell collects cards. She had c0 baseball cards and c1 Ace cards. She gave some of her cards to Jeff and now has c2 baseball cards and Ace cards left.How many more baseball cards than Ace cards does Nell have?", "answer": [266.0], "response": "def card_difference(c0, c1, c2):\n    # Nell had c0 baseball cards and c1 Ace cards\n    baseball_before = c0\n    ace_before = c1\n\n    # Nell gave some cards to Jeff and now has c2 baseball cards and Ace cards left\n    baseball_after = c2\n    ace_after = c2 - (baseball_before - baseball_after)\n\n    # Calculate the difference between the number of baseball cards and Ace cards Nell has now\n    difference = baseball_after - ace_after\n\n    return difference", "mapping": {"c0": 309.0, "c1": 356.0, "c2": 415.0}}
{"question": "At the zoo, a cage had c0 snakes and c1 alligators. If c2 alligators were hidingHow many alligators were not hiding?", "answer": [57.0], "response": "def not_hiding(c0, c1, c2):\n    #total number of animals in the cage\n    total_animals = c0 + c1\n\n    #number of alligators not hiding can be calculated by subtracting the number of hiding alligators from the total number of alligators\n    not_hiding_alligators = c1 - c2\n\n    return not_hiding_alligators", "mapping": {"c0": 93.0, "c1": 97.0, "c2": 40.0}}
{"question": "You have read c0 books from the ' crazy silly school ' series. If there are a total of c1 different books in the ' crazy silly school ' seriesHow many more do you still have to read?", "answer": [6.0], "response": "def remaining_books(c0, c1):\n    #calculate the number of books left to read by subtracting the number of books read from the total number of books in the series\n    books_left = c1 - c0\n    return books_left", "mapping": {"c0": 8.0, "c1": 14.0}}
{"question": "Emily is making bead necklaces for her c0 friends. She had c1 beads and she was able to make c2 necklaces.How many beads did each necklace need?", "answer": [4.0], "response": "def necklace_beads(c0, c1, c2):\n    # Emily has c1 beads and makes c2 necklaces\n    # Each necklace needs the same number of beads, so we can divide the total number of beads by the number of necklaces\n    beads_per_necklace = (c1 - c0) / c2\n\n    return beads_per_necklace", "mapping": {"c0": 43.0, "c1": 20.0, "c2": 5.0}}
{"question": "Frank put c0 pieces of candy in each bag. If he had c1 pieces of candyHow many bags would he have?", "answer": [2.0], "response": "def candy_bags(c0, c1):\n    #divide the total number of candies by the number of candies in each bag\n    bags = c1 // c0\n    return bags", "mapping": {"c0": 11.0, "c1": 22.0}}
{"question": "A waiter had c0 customers. After some left he still had c1 customers. Then he got c2 new customersHow many customers does he have now?", "answer": [24.0], "response": "def customers_now(c0, c1, c2):\n    #calculate the number of customers who left\n    left = c0 - c1\n\n    #add the number of new customers\n    now = c1 + c2\n\n    #calculate the total number of customers now\n    total = now + left\n\n    return total", "mapping": {"c0": 12.0, "c1": 14.0, "c2": 10.0}}
{"question": "A farmer had c0 tomatoes in his garden. If he picked c1 of them yesterday and c2 today.How many tomatoes did he pick in all?", "answer": [204.0], "response": "def total_tomatoes_picked(c0, c1, c2):\n    # add the number of tomatoes picked yesterday and today\n    total_picked = c1 + c2\n\n    # add the original number of tomatoes to the total picked to get the final answer\n    final_count = c0 + total_picked\n\n    return final_count", "mapping": {"c0": 90.0, "c1": 154.0, "c2": 50.0}}
{"question": "c0 red peaches, c1 yellow peaches and c2 green peaches are in the basket.How many green and yellow peaches are in the basket?", "answer": [20.0], "response": "def PeachCount(c0, c1, c2):\n    #calculate the number of green peaches\n    green_peaches = c2\n\n    #calculate the number of yellow peaches\n    yellow_peaches = c1\n\n    return green_peaches, yellow_peaches\n\n#example usage\nprint(PeachCount(10, 5, 3)) #output: (3, 5)", "mapping": {"c0": 5.0, "c1": 14.0, "c2": 6.0}}
{"question": "Winter is almost here and most animals are migrating to warmer countries. There were c0 bird families living near the mountain. If c1 bird families flew away for winterHow many more bird families flew away for the winter than those that stayed behind?", "answer": [31.0], "response": "def bird_migration(c0, c1):\n    #calculate the number of bird families that flew away for winter\n    flew_away = c0 - c1\n    \n    #calculate the number of bird families that stayed behind\n    stayed_behind = c1\n    \n    #calculate the difference between the two\n    difference = flew_away - stayed_behind\n    \n    return difference", "mapping": {"c0": 89.0, "c1": 60.0}}
{"question": "There were c0 roses and c1 orchids in the vase. Jessica cut some more roses and orchids from her flower garden. There are now c2 orchids and c3 roses in the vase.How many more orchids than roses are there in the vase now?", "answer": [10.0], "response": "def orchids_vs_roses(c0, c1, c2, c3):\n    #calculate the number of roses and orchids added by Jessica\n    roses_added = c3 - c0\n    orchids_added = c2 - c1\n\n    #calculate the total number of roses and orchids in the vase now\n    total_roses = c3\n    total_orchids = c2\n\n    #calculate the difference between the number of orchids and roses\n    diff = total_orchids - total_roses\n\n    return diff", "mapping": {"c0": 9.0, "c1": 6.0, "c2": 13.0, "c3": 3.0}}
{"question": "After eating a hearty meal they went to see the Buckingham palace. There were c0 paintings in the Buckingham palace. There, Rachel learned that c1 visitors came to the Buckingham palace that day. If there were c2 visitors the previous dayHow many more visitors visited the Buckingham palace on that day than on the previous day?", "answer": [61.0], "response": "def visitors_increase(c0, c1, c2):\n    #calculate the difference in visitors between the two days\n    increase = c1 - c2\n    return increase", "mapping": {"c0": 39.0, "c1": 661.0, "c2": 600.0}}
{"question": "A waiter had c0 customers. While c1 customers left he got c2 new customers.How many customers does he still have?", "answer": [11.0], "response": "def customers_left(c0, c1, c2):\n    #calculate the number of customers who left\n    left = c0 - c1\n\n    #add the number of new customers\n    total = left + c2\n\n    return total", "mapping": {"c0": 12.0, "c1": 15.0, "c2": 14.0}}
{"question": "Emily is making bead necklaces for her c0 friends. She has c1 beads and each necklace takes c2 beads.How many necklaces can Emily make?", "answer": [2.0], "response": "def bead_necklaces(c0, c1, c2):\n    #calculate the total number of beads needed for all the necklaces\n    total_beads = c0 * c2\n\n    #calculate the maximum number of necklaces that can be made with the available beads\n    max_necklaces = c1 // c2\n\n    #return the minimum of the maximum number of necklaces and the number of friends\n    return min(max_necklaces, c0)", "mapping": {"c0": 72.0, "c1": 6.0, "c2": 3.0}}
{"question": "He also had c0 aquariums for saltwater animals. The aquarium had c1 saltwater animals in total and every aquarium had the same number of animals.How many saltwater animals does each aquarium have?", "answer": [2.0], "response": "def saltwater_animals_per_aquarium(c0, c1):\n    # calculate the number of saltwater animals per aquarium by dividing the total number of animals by the number of aquariums\n    animals_per_aquarium = c1 / c0\n    return animals_per_aquarium", "mapping": {"c0": 26.0, "c1": 52.0}}
{"question": "Mary is baking a cake. The recipe calls for c0 cups of flour and c1 cups of sugar. She already put in some cups of flour. If she still needs c2 more cups of flour than sugarHow many cups of flour did she put in?", "answer": [2.0], "response": "Let's think about it step by step:\n\ndef flour_used(c0, c1, c2):\n    # Mary already put in some cups of flour\n    flour_before = c0 - c2\n\n    # She still needs c2 more cups of flour than sugar\n    sugar = c1\n    flour_needed = sugar + c2\n\n    # The number of cups of flour she put in can be calculated by subtracting the amount of flour needed from the amount of flour before\n    flour_used = flour_before - flour_needed\n\n    return flour_used", "mapping": {"c0": 11.0, "c1": 7.0, "c2": 2.0}}
{"question": "Baker made c0 cakes and c1 pastries. If he sold c2 cakes and c3 pastriesHow many cakes would baker still have?", "answer": [139.0], "response": "def cakes_left(c0, c1, c2, c3):\n    #calculate the total number of cakes and pastries made\n    total_cakes = c0\n    total_pastries = c1\n\n    #calculate the total number of cakes and pastries sold\n    sold_cakes = c2\n    sold_pastries = c3\n\n    #calculate the remaining number of cakes\n    remaining_cakes = total_cakes - sold_cakes\n\n    #return the remaining number of cakes\n    return remaining_cakes", "mapping": {"c0": 149.0, "c1": 91.0, "c2": 10.0, "c3": 90.0}}
{"question": "Dave had c0 files and c1 apps on his phone. After deleting some apps and files he had c2 apps and c3 files left.How many files did he delete?", "answer": [3.0], "response": "def deleted_files(c0, c1, c2, c3):\n    # Dave had c0 files and c1 apps on his phone\n    files_before = c0\n\n    # After deleting some apps and files he had c2 apps and c3 files left\n    files_after = c3\n\n    # The number of files he deleted can be calculated by subtracting the number of files afterward from the original number of files\n    deleted = files_before - files_after\n\n    return deleted", "mapping": {"c0": 24.0, "c1": 13.0, "c2": 17.0, "c3": 21.0}}
{"question": "An industrial machine made c0 shirts yesterday and c1 shirts today. It can make c2 shirts a minute.How many minutes did the machine work today?", "answer": [4.0], "response": "def Problem(c0, c1, c2):\n    #calculate the total number of shirts made\n    total_shirts = c1 - c0\n\n    #calculate the number of minutes it took to make the shirts\n    minutes_worked = total_shirts / c2\n\n    return minutes_worked", "mapping": {"c0": 9.0, "c1": 8.0, "c2": 2.0}}
{"question": "Rebecca wants to split a collection of eggs into c0 groups. Rebecca has c1 marbles and c2 eggs.How many eggs will each group have?", "answer": [5.0], "response": "def egg_groups(c0, c1, c2):\n    # calculate the total number of eggs\n    total_eggs = c1 + c2\n    # calculate the number of eggs per group\n    eggs_per_group = total_eggs // c0\n    return eggs_per_group", "mapping": {"c0": 3.0, "c1": 4.0, "c2": 15.0}}
{"question": "Matthew had some crackers. If Matthew gave c0 crackers to each of his c1 friendsHow many crackers did Matthew have?", "answer": [22.0], "response": "def crackers_left(c0, c1):\n    #Matthew gave c0 crackers to each of his c1 friends\n    crackers_given = c0 * c1\n\n    #To find out how many crackers Matthew had originally, we need to add the crackers he gave away to the crackers he has left\n    crackers_total = crackers_given + crackers_left\n\n    return crackers_total", "mapping": {"c0": 2.0, "c1": 11.0}}
{"question": "Olivia spent c0 dollars at a supermarket. If she has c1 dollars left with herHow much money did she have initially?", "answer": [111.0], "response": "def initial_money(c0, c1):\n    # Olivia spent c0 dollars at the supermarket\n    spent = c0\n\n    # Olivia has c1 dollars left with her\n    left = c1\n\n    # Olivia's initial money can be calculated by adding the amount she spent to the amount she has left\n    initial = spent + left\n\n    return initial", "mapping": {"c0": 78.0, "c1": 33.0}}
{"question": "If Lewis earns $ c0 every week during the c1 weeks of a harvest season.How much money will he earn if he works for c2 harvest seasons?", "answer": [22090603.0], "response": "def harvest_earnings(c0, c1, c2):\n    #calculate total earnings for one harvest season\n    season_earnings = c0 * c1\n\n    #calculate total earnings for c2 harvest seasons\n    total_earnings = season_earnings * c2\n\n    return total_earnings", "mapping": {"c0": 1357.0, "c1": 223.0, "c2": 73.0}}
{"question": "Because of the decision Sofia asked c0 students to suggest specific types of food. c1 students suggested adding mashed potatoes while others suggested adding bacon to the menu.How many students suggested bacon?", "answer": [125.0], "response": "def bacon_suggesters(c0, c1):\n    # c0 students were asked to suggest food\n    # c1 students suggested adding mashed potatoes\n    # the remaining students suggested adding bacon\n    bacon_suggesters = c0 - c1\n    return bacon_suggesters", "mapping": {"c0": 310.0, "c1": 185.0}}
{"question": "Jack received c0 emails and c1 letters in the morning. He then received c2 emails and c3 letters in the afternoon.How many emails did jack receive in the day?", "answer": [8.0], "response": "def total_emails(c0, c1, c2, c3):\n    #add up the number of emails received in the morning and afternoon\n    total = c0 + c2\n    #return the total number of emails\n    return total", "mapping": {"c0": 3.0, "c1": 64.0, "c2": 5.0, "c3": 54.0}}
{"question": "Paco had c0 cookies. He ate c1 of them. Then he bought c2 more cookiesHow many cookies did Paco have left?", "answer": [75.0], "response": "def cookies_left(c0, c1, c2):\n    # Paco had c0 cookies\n    cookies_before = c0\n\n    # Paco ate c1 cookies\n    cookies_eaten = c1\n\n    # Paco bought c2 more cookies\n    cookies_bought = c2\n\n    # The number of cookies Paco has left can be calculated by subtracting the cookies eaten and adding the cookies bought from the original number of cookies\n    cookies_left = cookies_before - cookies_eaten + cookies_bought\n\n    return cookies_left", "mapping": {"c0": 40.0, "c1": 2.0, "c2": 37.0}}
{"question": "Because of the decision Sofia asked the students to suggest specific types of food. If c0 students suggested adding mashed potatoes as well as bacon while c1 suggested adding only bacon to the menuHow many students suggested adding bacon?", "answer": [569.0], "response": "def bacon_suggestion(c0, c1):\n    # c0 students suggested mashed potatoes and bacon\n    # c1 students suggested only bacon\n    # we want to find out how many students suggested adding bacon in total\n\n    # number of students who suggested adding bacon in c0\n    bacon_in_c0 = c0\n\n    # number of students who suggested adding bacon in c1\n    bacon_in_c1 = c1\n\n    # total number of students who suggested adding bacon\n    total_bacon_suggestions = bacon_in_c0 + bacon_in_c1\n\n    return total_bacon_suggestions", "mapping": {"c0": 218.0, "c1": 351.0}}
{"question": "If each bag has c0 cookies and you had c1 bags of cookiesHow many cookies would you have?", "answer": [2173.0], "response": "def total_cookies(c0, c1):\n    #calculate the total number of cookies by multiplying the number of bags with the number of cookies in each bag\n    total = c0 * c1\n    return total", "mapping": {"c0": 41.0, "c1": 53.0}}
{"question": "Rachel had to complete c0 pages of reading homework and c1 pages of math homework.How many more pages of math homework than reading homework did she have?", "answer": [2.0], "response": "def homework_diff(c0, c1):\n    #calculate the difference between the number of math homework pages and reading homework pages\n    diff = c1 - c0\n    return diff", "mapping": {"c0": 2.0, "c1": 4.0}}
{"question": "Allan brought c0 balloons and Jake brought c1 balloons to the park. Allan then bought c2 more balloons at the park.How many balloons did Allan bring to the park?", "answer": [8.0], "response": "def balloons_at_park(c0, c1, c2):\n    # Allan brought c0 balloons and Jake brought c1 balloons to the park\n    allan_balloons = c0\n\n    # Allan then bought c2 more balloons at the park\n    allan_balloons += c2\n\n    return allan_balloons", "mapping": {"c0": 5.0, "c1": 4.0, "c2": 3.0}}
{"question": "Julia played tag with c0 kids on monday, c1 kids on tuesday and c2 kids on wednesday.How many more kids did she play with on tuesday than on wednesday?", "answer": [2.0], "response": "def tag_game(c0, c1, c2):\n    #calculate the difference between the number of kids played with on tuesday and wednesday\n    difference = c1 - c2\n    return difference", "mapping": {"c0": 8.0, "c1": 11.0, "c2": 9.0}}
{"question": "The Razorback shop makes $ c0 dollars off each jersey and $ c1 off each t-shirt. During the Arkansas and Texas tech game they sold c2 t-shirts and c3 jerseys.How much money did they make from selling the t-shirts?", "answer": [4300.0], "response": "def tshirt_profit(c0, c1, c2, c3):\n    #calculate the total profit from selling t-shirts\n    tshirt_profit = c1 * c3\n\n    return tshirt_profit", "mapping": {"c0": 5.0, "c1": 215.0, "c2": 20.0, "c3": 64.0}}
{"question": "c0 children were riding on the bus. At the bus stop c1 children got off the bus while some more got on the bus. Then there were c2 children altogether on the bus.How many more children got off the bus than those that got on?", "answer": [24.0], "response": "def Problem(c0, c1, c2):\n    #c0 children were originally on the bus\n    #c1 children got off the bus\n    #some more children got on the bus\n    #c2 children were left on the bus\n\n    #the number of children that got on the bus can be calculated by subtracting the number of children that got off from the original number of children\n    got_on = c0 - c1\n\n    #the number of children that got off the bus more than those that got on can be calculated by subtracting the number of children on the bus after the ride from the number of children on the bus before the ride\n    got_off_more = c0 + got_on - c2\n\n    return got_off_more", "mapping": {"c0": 36.0, "c1": 68.0, "c2": 12.0}}
{"question": "Brenda's mother made c0 cookies for c1 guests. If each of them had the same number of cookiesHow many did each of them have?", "answer": [7.0], "response": "def Problem(c0, c1):\n    #each guest will receive the same number of cookies\n    cookies_per_guest = c0 // c1\n\n    return cookies_per_guest", "mapping": {"c0": 14.0, "c1": 2.0}}
{"question": "Tiffany was collecting cans for recycling. On monday she had c0 bags of cans. The next day she found some more bags worth of cans. If she had a total of c1 bags altogetherHow many bags did she find on the next day?", "answer": [2.0], "response": "def find_bags(c0, c1):\n    # On Monday, Tiffany had c0 bags of cans\n    bags_on_monday = c0\n\n    # The next day, she found some more bags worth of cans\n    found_bags = c1 - c0\n\n    return found_bags", "mapping": {"c0": 4.0, "c1": 6.0}}
{"question": "In a school there are c0 girls and c1 boys. c2 more girls joined the school.How many more girls than boys does the school have?", "answer": [687.0], "response": "def school_girls_vs_boys(c0, c1, c2):\n    #total number of girls after c2 more join\n    total_girls = c0 + c2\n\n    #number of boys\n    total_boys = c1\n\n    #difference between total girls and total boys\n    difference = total_girls - total_boys\n\n    return difference", "mapping": {"c0": 632.0, "c1": 410.0, "c2": 465.0}}
{"question": "Emily is making bead necklaces for her friends where each necklace takes c0 beads. She made c1 necklaces.How many beads did Emily have?", "answer": [20.0], "response": "def Problem(c0, c1):\n    #each necklace takes c0 beads\n    beads_per_necklace = c0\n\n    #Emily made c1 necklaces\n    num_necklaces = c1\n\n    #total number of beads can be calculated by multiplying the number of necklaces by the number of beads per necklace\n    total_beads = beads_per_necklace * num_necklaces\n\n    return total_beads", "mapping": {"c0": 5.0, "c1": 4.0}}
{"question": "Randy has c0 blocks. He uses c1 blocks to build a house and c2 blocks to build a tower.How many more blocks did he use to build the tower than he did to build the house?", "answer": [30.0], "response": "def block_difference(c0, c1, c2):\n    #calculate the number of blocks used to build the house\n    house_blocks = c1\n\n    #calculate the number of blocks used to build the tower\n    tower_blocks = c2\n\n    #calculate the difference between the number of blocks used to build the tower and the house\n    difference = tower_blocks - house_blocks\n\n    return difference", "mapping": {"c0": 95.0, "c1": 20.0, "c2": 50.0}}
{"question": "c0 birds and c1 storks were sitting on the fence. c2 more birds came to join them.How many more storks than birds are sitting on the fence?", "answer": [1.0], "response": "def fence_birds_storks(c0, c1, c2):\n    #total number of birds and storks on the fence before new birds arrived\n    total_birds_storks_before = c0 + c1\n\n    #total number of birds and storks on the fence after new birds arrived\n    total_birds_storks_after = total_birds_storks_before + c2\n\n    #number of birds on the fence after new birds arrived\n    birds_after = c0 + c2\n\n    #number of storks on the fence after new birds arrived\n    storks_after = c1\n\n    #calculate the difference between the number of storks and birds on the fence after new birds arrived\n    difference = storks_after - birds_after\n\n    return difference", "mapping": {"c0": 2.0, "c1": 6.0, "c2": 3.0}}
{"question": "The Razorback t-shirt shop made $ c0 dollars from selling c1 t-shirt during the Arkansas and Texas tech game they.What is the cost of each t-shirt?", "answer": [17.0], "response": "def CostPerShirt(c0, c1):\n    #calculate the cost per shirt by dividing the total revenue by the number of shirts sold\n    cost_per_shirt = c0/c1\n\n    return cost_per_shirt", "mapping": {"c0": 51.0, "c1": 3.0}}
{"question": "Paco had c0 cookies. He ate c1 cookies and gave c2 of them to his friend.How many more cookies did he give to his friend than those he ate?", "answer": [5.0], "response": "def cookies_difference(c0, c1, c2):\n    # Paco had c0 cookies\n    # He ate c1 cookies\n    # He gave c2 cookies to his friend\n    # We need to calculate how many more cookies he gave to his friend than those he ate\n\n    # First, we need to calculate how many cookies Paco has left after eating and giving some to his friend\n    cookies_left = c0 - c1 - c2\n\n    # Next, we need to calculate the difference between the cookies he gave to his friend and those he ate\n    difference = c2 - c1\n\n    # Finally, we need to check if the difference is positive or negative\n    if difference > 0:\n        return difference\n    else:\n        return 0  # Paco gave his friend the same or fewer cookies than he ate", "mapping": {"c0": 12.0, "c1": 16.0, "c2": 21.0}}
{"question": "After eating a hearty meal they went to see the Buckingham palace. There, Rachel learned that c0 visitors came to the Buckingham palace that day. If there were c1 visitors the previous dayHow many more visitors visited the Buckingham palace on that day than on the previous day?", "answer": [22.0], "response": "def visitors_increase(c0, c1):\n    #calculate the difference between the number of visitors on the current day and the previous day\n    increase = c0 - c1\n\n    return increase", "mapping": {"c0": 317.0, "c1": 295.0}}
{"question": "Josh had c0 marbles in his collection. He found c1 marbles while he lost c2 marbles.How many more marbles did he find than those he lost?", "answer": [1.0], "response": "def marbles_found(c0, c1, c2):\n    #calculate the net change in marbles\n    net_change = c1 - c2\n    \n    #calculate the difference between the marbles found and lost\n    difference = net_change - c0\n    \n    return difference", "mapping": {"c0": 3.0, "c1": 6.0, "c2": 5.0}}
{"question": "Because of the decision Sofia asked the students to suggest specific types of food. If c0 students suggested adding mashed potatoes while c1 suggested adding bacon to the menuHow many more students suggested mashed potatoes than those that suggested bacon?", "answer": [366.0], "response": "def food_suggestion_diff(c0, c1):\n    #calculate the difference between the number of students who suggested mashed potatoes and bacon\n    diff = c0 - c1\n    return diff", "mapping": {"c0": 408.0, "c1": 42.0}}
{"question": "Paco had c0 cookies. He ate c1 cookies and gave c2 of them to his friend.How many cookies did paco have left?", "answer": [22.0], "response": "def cookies_left(c0, c1, c2):\n    #Paco had c0 cookies\n    cookies_before = c0\n\n    #He ate c1 cookies\n    cookies_eaten = c1\n\n    #He gave c2 cookies to his friend\n    cookies_given = c2\n\n    #The number of cookies Paco has left can be calculated by subtracting the number of cookies he ate and gave away from the original number of cookies\n    cookies_left = cookies_before - cookies_eaten - cookies_given\n\n    return cookies_left", "mapping": {"c0": 40.0, "c1": 5.0, "c2": 13.0}}
{"question": "Paco had c0 cookies. He ate c1 cookies and gave c2 of them to his friend.How many more cookies did he eat than those he gave to his friend?", "answer": [1.0], "response": "def cookie_problem(c0, c1, c2):\n    # Paco ate c1 cookies\n    ate_cookies = c1\n\n    # Paco gave c2 cookies to his friend\n    gave_cookies = c2\n\n    # Calculate how many more cookies Paco ate than those he gave to his friend\n    more_cookies = ate_cookies - gave_cookies\n\n    return more_cookies", "mapping": {"c0": 17.0, "c1": 14.0, "c2": 13.0}}
{"question": "Julia played tag with c0 kids on monday. She played tag with c1 kids on tuesday. She spent a total of c2 hours to play tag on both days.How many more kids did she play with on monday than on tuesday?", "answer": [1.0], "response": "def tag_difference(c0, c1, c2):\n    #calculate the average time spent per kid on both days\n    avg_time = c2 / (c0 + c1)\n\n    #calculate the number of kids Julia played with on Monday\n    monday_kids = (c0 * avg_time) / 1\n\n    #calculate the number of kids Julia played with on Tuesday\n    tuesday_kids = (c1 * avg_time) / 1\n\n    #calculate the difference in the number of kids played with on Monday and Tuesday\n    difference = monday_kids - tuesday_kids\n\n    return difference", "mapping": {"c0": 19.0, "c1": 18.0, "c2": 38.0}}
{"question": "Dan has $ c0. He bought a candy bar for $ c1 and a chocolate for $ 3.How much money did he spend to buy chocolate than he did to buy candy bar?", "answer": [1.0], "response": "def spend_more_on_chocolate(c0, c1):\n    # Dan spent c1 on a candy bar\n    candy_cost = c1\n\n    # Dan spent $3 on a chocolate\n    chocolate_cost = 3\n\n    # Calculate the difference in cost between the chocolate and candy bar\n    difference = chocolate_cost - candy_cost\n\n    return difference", "mapping": {"c0": 5.0, "c1": 2.0}}
{"question": "Ed had c0 more marbles than Doug. Ed lost c1 of his marbles at the playground.How many more marbles did Ed have than Doug then?", "answer": [12.0], "response": "def marbles_difference(c0, c1):\n    # Ed had c0 more marbles than Doug\n    ed_marbles = c0\n    doug_marbles = ed_marbles - c0\n\n    # Ed lost c1 of his marbles at the playground\n    ed_marbles -= c1\n\n    # How many more marbles did Ed have than Doug then?\n    difference = ed_marbles - doug_marbles\n\n    return difference", "mapping": {"c0": 29.0, "c1": 17.0}}
{"question": "The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped c0 inches. The frog jumped c1 inches farther than the grasshopper and the mouse jumped c2 inches farther than the frog.How much farther did the mouse jump than the grasshopper?", "answer": [30.0], "response": "def jumping_contest(c0, c1, c2):\n    # The frog jumped c1 inches farther than the grasshopper\n    frog_jump = c0 + c1\n\n    # The mouse jumped c2 inches farther than the frog\n    mouse_jump = frog_jump + c2\n\n    # The difference between the mouse jump and the grasshopper jump is the answer\n    difference = mouse_jump - c0\n\n    return difference", "mapping": {"c0": 19.0, "c1": 10.0, "c2": 20.0}}
{"question": "Frank was reading through his favorite book. It took him c0 days to finish the book. If the book had c1 pagesHow many pages did he read per day?", "answer": [7.0], "response": "def pages_per_day(c0, c1):\n    #calculate the number of pages read per day by dividing the total number of pages by the number of days it took to finish the book\n    pages_per_day = c1/c0\n    return pages_per_day", "mapping": {"c0": 16.0, "c1": 112.0}}
{"question": "There are c0 different books in the ' crazy silly school ' series. If you are yet to read c1 of the booksHow many books have you already read?", "answer": [15.0], "response": "def books_read(c0, c1):\n    #total number of books in the series\n    total_books = c0\n\n    #number of books yet to be read\n    unread_books = c1\n\n    #number of books already read can be calculated by subtracting the number of unread books from the total number of books\n    read_books = total_books - unread_books\n\n    return read_books", "mapping": {"c0": 20.0, "c1": 5.0}}
{"question": "Allan brought c0 balloons and Jake brought c1 balloons to the park. Allan then bought c2 more balloons at the park.How many balloons did Allan and Jake have in the park?", "answer": [10.0], "response": "def balloons_in_park(c0, c1, c2):\n    # Allan brought c0 balloons and Jake brought c1 balloons to the park\n    allan_balloons = c0\n    jake_balloons = c1\n\n    # Allan then bought c2 more balloons at the park\n    allan_balloons += c2\n\n    # Total number of balloons in the park\n    total_balloons = allan_balloons + jake_balloons\n\n    return total_balloons", "mapping": {"c0": 3.0, "c1": 5.0, "c2": 2.0}}
{"question": "Josh lost c0 marbles. If he had c1 marbles in his collection earlierHow many marbles does he have now?", "answer": [8.0], "response": "def lost_marbles(c0, c1):\n    #subtract the number of lost marbles from the original number of marbles\n    remaining_marbles = c1 - c0\n\n    return remaining_marbles", "mapping": {"c0": 11.0, "c1": 19.0}}
{"question": "Allan brought c0 balloons and Jake brought c1 balloons to the park. Jake then bought c2 more balloons at the park.How many more balloons did Jake have than Allan in the park?", "answer": [1.0], "response": "def balloons_in_park(c0, c1, c2):\n    #total number of balloons brought to the park\n    total_balloons = c0 + c1\n\n    #number of balloons Jake has after buying more at the park\n    jake_balloons = c1 + c2\n\n    #difference between Jake's balloons and Allan's balloons\n    difference = jake_balloons - c0\n\n    return difference", "mapping": {"c0": 6.0, "c1": 3.0, "c2": 4.0}}
{"question": "Faye was placing her pencils into c0 rows with c1 pencils in each row.How many pencils does she have?", "answer": [154.0], "response": "def count_pencils(c0, c1):\n    #multiply the number of rows by the number of pencils in each row\n    total_pencils = c0 * c1\n    return total_pencils", "mapping": {"c0": 14.0, "c1": 11.0}}
{"question": "A grocery store had c0 bottles of regular soda and c1 bottles of diet soda.How many more bottles of diet soda than regular soda did they have?", "answer": [39.0], "response": "def soda_difference(c0, c1):\n    #calculate the difference between the number of diet soda and regular soda\n    difference = c1 - c0\n    return difference", "mapping": {"c0": 22.0, "c1": 61.0}}
{"question": "There are c0 baskets of peaches. Each basket has c1 red peaches and c2 green peaches.How many red peaches are in the baskets altogether?", "answer": [96.0], "response": "def count_red_peaches(c0, c1, c2):\n    #calculate the total number of peaches in each basket\n    total_peaches = c1 + c2\n\n    #calculate the total number of red peaches in all baskets\n    total_red_peaches = c0 * c1\n\n    return total_red_peaches", "mapping": {"c0": 6.0, "c1": 16.0, "c2": 18.0}}
{"question": "During summer break c0 kids from Lawrence county go to camp and the rest stay home. Lawrence county has c1 kids in all.About how many kids stayed home?", "answer": [28462.0], "response": "def stayed_home(c0, c1):\n    #calculate the number of kids who went to camp\n    went_to_camp = c1 - c0\n\n    #calculate the number of kids who stayed home\n    stayed_home = c0\n\n    #calculate the approximate number of kids who stayed home by rounding to the nearest whole number\n    approx_stayed_home = round(stayed_home)\n\n    return approx_stayed_home", "mapping": {"c0": 800059.0, "c1": 828521.0}}
{"question": "There are c0 pots. Each pot has c1 flowers and c2 sticks in it.How many flowers are there in all?", "answer": [10011.0], "response": "def count_flowers(c0, c1, c2):\n    #calculate the total number of flowers by multiplying the number of pots by the number of flowers in each pot\n    total_flowers = c0 * c1\n    return total_flowers", "mapping": {"c0": 141.0, "c1": 71.0, "c2": 91.0}}
{"question": "Allan brought c0 balloons and Jake brought c1 balloons to the park. Allan then bought c2 more balloons at the park.How many more balloons did Allan have than Jake in the park?", "answer": [1.0], "response": "def balloon_difference(c0, c1, c2):\n    # Allan brought c0 balloons and Jake brought c1 balloons\n    allan_balloons = c0 + c2\n    jake_balloons = c1\n\n    # calculate the difference in balloons\n    difference = allan_balloons - jake_balloons\n\n    return difference", "mapping": {"c0": 2.0, "c1": 4.0, "c2": 3.0}}
{"question": "A chef had c0 apples. After making some pies, he had used 35.How many apples remained?", "answer": [23.0], "response": "def remaining_apples(c0):\n    #the chef used 35 apples to make pies\n    used_apples = 35\n\n    #the number of remaining apples can be calculated by subtracting the used apples from the original number of apples\n    remaining = c0 - used_apples\n\n    return remaining", "mapping": {"c0": 58.0}}
{"question": "You had c0 bags with equal number of cookies. If you had c1 candies and c2 cookies in totalHow many cookies does each bag have?", "answer": [2.0], "response": "def cookies_per_bag(c0, c1, c2):\n    #calculate the total number of cookies\n    total_cookies = c2\n\n    #subtract the number of candies from the total to get the number of cookies\n    num_cookies = total_cookies - c1\n\n    #divide the number of cookies by the number of bags to get the number of cookies per bag\n    cookies_per_bag = num_cookies / c0\n\n    return cookies_per_bag", "mapping": {"c0": 26.0, "c1": 15.0, "c2": 52.0}}
{"question": "He then went to see the oranges being harvested. He found out that they harvest c0 sacks per day and that each sack containes c1 oranges.How many sacks of oranges will they have after c2 days of harvest?", "answer": [1862.0], "response": "def orange_sacks(c0, c1, c2):\n    #calculate the total number of oranges harvested per day\n    oranges_per_day = c0 * c1\n\n    #calculate the total number of oranges harvested after c2 days\n    total_oranges = oranges_per_day * c2\n\n    #calculate the number of sacks needed to hold the total number of oranges\n    sacks_needed = total_oranges // c1\n\n    return sacks_needed", "mapping": {"c0": 38.0, "c1": 42.0, "c2": 49.0}}
{"question": "There were c0 roses and c1 orchids in the vase. Jessica cut some more roses and orchids from her flower garden. There are now c2 orchids and c3 roses in the vase.How many orchids did she cut?", "answer": [4.0], "response": "def cut_flowers(c0, c1, c2, c3):\n    #calculate the number of roses and orchids Jessica had before cutting more\n    roses_before = c0\n    orchids_before = c1\n\n    #calculate the number of roses and orchids Jessica has after cutting more\n    roses_after = c3\n    orchids_after = c2\n\n    #calculate how many roses and orchids Jessica cut\n    roses_cut = roses_before - roses_after\n    orchids_cut = orchids_before - orchids_after\n\n    #return the number of orchids Jessica cut\n    return orchids_cut", "mapping": {"c0": 16.0, "c1": 3.0, "c2": 7.0, "c3": 13.0}}
{"question": "Jack received c0 emails in the morning, c1 emails in the afternoon and c2 emails in the evening.How many more emails did Jack receive in the afternoon than in the evening?", "answer": [1.0], "response": "def afternoon_vs_evening(c0, c1, c2):\n    #calculate the total number of emails received\n    total_emails = c0 + c1 + c2\n\n    #calculate the difference between afternoon and evening emails\n    difference = c1 - c2\n\n    return difference", "mapping": {"c0": 10.0, "c1": 5.0, "c2": 4.0}}
{"question": "Faye was placing her pencils into rows with c0 pencils in each row. She had c1 packs of pencils each one having c2 pencils.How many pencils does she have?", "answer": [84.0], "response": "def total_pencils(c0, c1, c2):\n    #calculate the total number of pencils in each row\n    pencils_per_row = c0\n\n    #calculate the total number of packs of pencils\n    total_packs = c1\n\n    #calculate the total number of pencils in each pack\n    pencils_per_pack = c2\n\n    #calculate the total number of pencils\n    total_pencils = pencils_per_row * total_packs * pencils_per_pack\n\n    return total_pencils", "mapping": {"c0": 22.0, "c1": 6.0, "c2": 14.0}}
{"question": "A farmer had c0 tomatoes in his garden. If he picked c1 of them yesterday and c2 today.How many did he have left after yesterday's picking?", "answer": [104.0], "response": "def tomatoes_left(c0, c1, c2):\n    #subtract the number of tomatoes picked yesterday from the original number\n    left_after_yesterday = c0 - c1\n\n    return left_after_yesterday", "mapping": {"c0": 160.0, "c1": 56.0, "c2": 41.0}}
{"question": "Each pot has c0 flowers in it. There are c1 flowers in total.How many pots are there in all?", "answer": [10.0], "response": "def Problem(c0, c1):\n    #each pot has c0 flowers\n    flowers_per_pot = c0\n\n    #there are c1 flowers in total\n    total_flowers = c1\n\n    #the number of pots can be calculated by dividing the total number of flowers by the number of flowers per pot\n    pots = total_flowers // flowers_per_pot\n\n    return pots", "mapping": {"c0": 40.0, "c1": 400.0}}
{"question": "c0 campers went rowing in the morning. Some more campers went rowing in the afternoon. If a total of c1 campers went rowing that dayHow many campers went rowing in the afternoon?", "answer": [17.0], "response": "def afternoon_campers(c0, c1):\n    # c0 campers went rowing in the morning\n    morning_campers = c0\n\n    # total number of campers who went rowing that day is c1\n    total_campers = c1\n\n    # number of campers who went rowing in the afternoon can be calculated by subtracting the number of morning campers from the total number of campers\n    afternoon_campers = total_campers - morning_campers\n\n    return afternoon_campers", "mapping": {"c0": 15.0, "c1": 32.0}}
{"question": "Because of the decision Sofia asked the students to suggest specific types of food. If c0 students suggested adding mashed potatoes while c1 suggested adding bacon to the menuHow many more students suggested bacon than those that suggested mashed potatoes?", "answer": [10.0], "response": "def food_suggestion_diff(c0, c1):\n    #calculate the difference between the number of students who suggested bacon and mashed potatoes\n    diff = c1 - c0\n    return diff", "mapping": {"c0": 479.0, "c1": 489.0}}
{"question": "Ed had c0 more marbles than Doug. Doug lost c1 of his marbles at the playground. If Ed had c2 marblesHow many marbles did Doug have initially?", "answer": [22.0], "response": "Let's think about it step by step:\n\ndef initial_marbles(c0, c1, c2):\n    # Ed had c0 more marbles than Doug\n    # Let's assume Doug had x marbles initially\n    # Then Ed had x + c0 marbles initially\n    # Doug lost c1 marbles at the playground\n    # So, Doug has x - c1 marbles now\n    # And Ed has c2 marbles now\n    # We can set up an equation to solve for x:\n    # x + c0 = c2 + x - c1\n    # Simplifying the equation:\n    # c0 + c1 = c2\n    # Therefore, Doug had (c2 - c0) marbles initially\n    initial = c2 - c0 - c1\n    return initial", "mapping": {"c0": 5.0, "c1": 3.0, "c2": 27.0}}
{"question": "Rachel had to complete c0 pages of math homework. If she had to complete c1 more pages of math homework than reading homeworkHow many pages of reading homework did she have to complete?", "answer": [3.0], "response": "def reading_homework(c0, c1):\n    # Rachel had to complete c0 pages of math homework\n    math_homework = c0\n\n    # Rachel had to complete c1 more pages of math homework than reading homework\n    # So, total pages of math homework = pages of reading homework + c1\n    total_math_homework = math_homework + c1\n\n    # Total pages of homework = pages of reading homework + total pages of math homework\n    # So, pages of reading homework = Total pages of homework - total pages of math homework\n    reading_homework = c0 - total_math_homework\n\n    return reading_homework", "mapping": {"c0": 7.0, "c1": 4.0}}
{"question": "Helen the hippo and her friends are preparing for thanksgiving at Helen's house. Helen baked c0 chocolate chip cookies yesterday and c1 raisin cookies and c2 chocolate chip cookies this morning.How many more chocolate chip cookies than raisin cakes did Helen bake?", "answer": [25.0], "response": "def cookie_difference(c0, c1, c2):\n    #calculate the total number of chocolate chip cookies\n    total_choc_chip = c0 + c2\n    #calculate the total number of raisin cookies\n    total_raisin = c1\n    #calculate the difference between the two\n    difference = total_choc_chip - total_raisin\n    return difference", "mapping": {"c0": 19.0, "c1": 231.0, "c2": 237.0}}
{"question": "Tiffany was collecting cans for recycling. On monday she had some bags of cans. The next day she found c0 more bags worth of cans. If she had a total of c1 bags altogetherHow many bags did she have on monday?", "answer": [4.0], "response": "def MondayBags(c0, c1):\n    #Tiffany had some bags of cans on Monday\n    #Let's call the number of bags she had x\n    #So, x + c0 = c1 (total number of bags)\n    #Solving for x, we get x = c1 - c0\n    monday_bags = c1 - c0\n    return monday_bags", "mapping": {"c0": 4.0, "c1": 8.0}}
{"question": "Danny collects bottle caps. He found c0 bottle caps at the park while he threw away c1 old ones. Now he has c2 bottle caps in his collection.How many more bottle caps did danny throw away than those he found at the park?", "answer": [33.0], "response": "def bottle_caps(c0, c1, c2):\n    # Danny found c0 bottle caps at the park\n    found = c0\n\n    # Danny threw away c1 old bottle caps\n    thrown_away = c1\n\n    # Danny now has c2 bottle caps in his collection\n    total = c2\n\n    # Danny threw away more bottle caps than he found at the park\n    difference = thrown_away - found\n\n    return difference", "mapping": {"c0": 30.0, "c1": 63.0, "c2": 42.0}}
{"question": "Mary is baking a cake. The recipe calls for c0 cups of sugar and c1 cups of flour. She already put in c2 cups of sugar.How many more cups of flour than cups of sugar does she need to add now?", "answer": [12.0], "response": "def cake_recipe(c0, c1, c2):\n    #calculate how many cups of sugar are still needed\n    sugar_needed = c0 - c2\n\n    #calculate how many cups of flour are needed\n    flour_needed = c1 - c0\n\n    #calculate the difference between the amount of flour and sugar needed\n    difference = flour_needed - sugar_needed\n\n    return difference", "mapping": {"c0": 12.0, "c1": 14.0, "c2": 10.0}}
{"question": "Kelly has c0 nintendo games.How many does she need to buy so that she will have c1 games left?", "answer": [118.0], "response": "def buy_games(c0, c1):\n    #calculate the difference between the current number of games and the desired number of games\n    difference = c1 - c0\n\n    #if the difference is negative, Kelly already has more games than she needs, so return 0\n    if difference <= 0:\n        return 0\n\n    #otherwise, return the difference\n    return difference", "mapping": {"c0": 22.0, "c1": 140.0}}
{"question": "Mom buys c0 white t - shirts in total. If white t - shirts can be purchased in packages and mom buys c1 packagesHow many white t - shirts does each package have?", "answer": [5.0], "response": "def white_t_shirts_per_package(c0, c1):\n    #calculate the number of white t-shirts per package by dividing the total number of t-shirts by the number of packages\n    t_shirts_per_package = c0 / c1\n\n    return t_shirts_per_package", "mapping": {"c0": 70.0, "c1": 14.0}}
{"question": "A farmer had c0 tomatoes in his garden. If he picked c1 of them yesterday and c2 today.How many will he have left after today?", "answer": [7.0], "response": "def remaining_tomatoes(c0, c1, c2):\n    #calculate the total number of tomatoes picked\n    total_picked = c1 + c2\n\n    #calculate the number of tomatoes remaining\n    remaining = c0 - total_picked\n\n    return remaining", "mapping": {"c0": 171.0, "c1": 134.0, "c2": 30.0}}
{"question": "Last week Fred had c0 dollars and Jason had c1 dollars. Over the weekend Fred delivered newspapers earning c2 dollars and washed cars earning c3 dollars.How much money does Fred have now?", "answer": [192.0], "response": "def fred_money(c0, c2, c3):\n    #Fred had c0 dollars last week\n    fred_money_before = c0\n\n    #Fred earned c2 dollars delivering newspapers\n    fred_newspaper_money = c2\n\n    #Fred earned c3 dollars washing cars\n    fred_car_money = c3\n\n    #Fred's total money now is the sum of his money before and the money he earned\n    fred_total_money = fred_money_before + fred_newspaper_money + fred_car_money\n\n    return fred_total_money", "mapping": {"c0": 47.0, "c1": 99.0, "c2": 111.0, "c3": 34.0}}
{"question": "Mary is baking a cake. The recipe calls for c0 cups of sugar and c1 cups of flour. She already put in c2 cups of flour and c3 cups of sugar.How many more cups of flour does she need to add?", "answer": [7.0], "response": "def remaining_flour(c0, c1, c2, c3):\n    #calculate the remaining cups of flour needed by subtracting the amount already added from the total required\n    remaining = c1 - c2\n    return remaining", "mapping": {"c0": 6.0, "c1": 14.0, "c2": 7.0, "c3": 60.0}}
{"question": "There were c0 roses and c1 orchids in the vase. Jessica cut some more roses and orchids from her flower garden. There are now c2 roses and c3 orchids in the vase.How many more orchids than roses are there in the vase now?", "answer": [9.0], "response": "def orchids_vs_roses(c0, c1, c2, c3):\n    #calculate the number of roses and orchids before and after Jessica cut some from her garden\n    roses_before = c0\n    orchids_before = c1\n    roses_after = c2\n    orchids_after = c3\n\n    #calculate the difference between the number of orchids and roses before and after\n    orchids_diff = orchids_after - orchids_before\n    roses_diff = roses_after - roses_before\n\n    #calculate the difference between the differences to find the final answer\n    final_diff = orchids_diff - roses_diff\n\n    return final_diff", "mapping": {"c0": 7.0, "c1": 12.0, "c2": 11.0, "c3": 20.0}}
{"question": "After Jessie started to go jogging everyday she lost c0 kilograms. She weighed c1 kilograms before beginning jogging.How much does she weigh now?", "answer": [34.0], "response": "def weight_after_jogging(c0, c1):\n    # Jessie weighed c1 kilograms before jogging\n    weight_before = c1\n\n    # After jogging, she lost c0 kilograms\n    weight_lost = c0\n\n    # Her current weight can be calculated by subtracting the weight lost from her original weight\n    weight_now = weight_before - weight_lost\n\n    return weight_now", "mapping": {"c0": 35.0, "c1": 69.0}}
{"question": "c0 children were riding on the bus. At the bus stop c1 children got on the bus while some got off the bus. Then there were c2 children altogether on the bus.How many children got off the bus at the bus stop?", "answer": [60.0], "response": "def Problem(c0, c1, c2):\n    #c0 children were originally on the bus\n    #c1 children got on the bus at the stop\n    #c2 children were on the bus after some got off\n\n    #the number of children who got off the bus can be calculated by subtracting the number of children who got on the bus from the difference between the original number of children and the final number of children\n    got_off = (c0 + c1) - c2\n\n    return got_off", "mapping": {"c0": 22.0, "c1": 40.0, "c2": 2.0}}
{"question": "There are c0 different books and c1 different movies in the ' crazy silly school ' series. If you read c2 of the books and watched c3 of the moviesHow many more books than movies have you read?", "answer": [1.0], "response": "def compare_books_movies(c0, c1, c2, c3):\n    #calculate the number of books and movies read\n    books_read = c2\n    movies_watched = c3\n\n    #calculate the difference between the number of books and movies read\n    difference = books_read - movies_watched\n\n    return difference", "mapping": {"c0": 10.0, "c1": 11.0, "c2": 13.0, "c3": 12.0}}
{"question": "Emily is making bead necklaces for her friends. She made c0 necklaces and each necklace takes c1 beads.How many beads did Emily have?", "answer": [308.0], "response": "def calculate_beads(c0, c1):\n    #each necklace takes c1 beads\n    beads_per_necklace = c1\n\n    #Emily made c0 necklaces\n    num_necklaces = c0\n\n    #total number of beads can be calculated by multiplying the number of necklaces by the number of beads per necklace\n    total_beads = beads_per_necklace * num_necklaces\n\n    return total_beads", "mapping": {"c0": 11.0, "c1": 28.0}}
{"question": "A farmer had c0 tomatoes and c1 potatoes in his garden. If he picked c2 potatoesHow many tomatoes and potatoes does he have left?", "answer": [80.0], "response": "def remaining_veggies(c0, c1, c2):\n    #subtract the number of picked potatoes from the original number of potatoes\n    remaining_potatoes = c1 - c2\n\n    #subtract the number of picked potatoes from the original number of tomatoes\n    remaining_tomatoes = c0\n\n    #return the remaining number of tomatoes and potatoes as a tuple\n    return (remaining_tomatoes, remaining_potatoes)", "mapping": {"c0": 175.0, "c1": 77.0, "c2": 172.0}}
{"question": "Last week Fred had c0 dollars and Jason had c1 dollars. Fred washed cars over the weekend and now has c2 dollars. Jason delivered newspapers and now has c3 dollars.How much money did they earn by washing cars?", "answer": [4.0], "response": "def money_earned(c0, c1, c2, c3):\n    #Fred's initial amount of money is c0\n    fred_initial = c0\n\n    #Jason's initial amount of money is c1\n    jason_initial = c1\n\n    #Fred now has c2 dollars\n    fred_final = c2\n\n    #Jason now has c3 dollars\n    jason_final = c3\n\n    #Fred earned the difference between his initial and final amount of money\n    fred_earned = fred_final - fred_initial\n\n    return fred_earned", "mapping": {"c0": 111.0, "c1": 40.0, "c2": 115.0, "c3": 44.0}}
{"question": "A mailman has to give c0 pieces of junk mail to each house in each block. If there are c1 houses on a blockHow many pieces of junk mail should he give in each block?", "answer": [180.0], "response": "def junk_mail_per_block(c0, c1):\n    # The mailman has to give c0 pieces of junk mail to each house in each block\n    pieces_per_house = c0\n\n    # There are c1 houses on a block\n    num_houses = c1\n\n    # The total number of pieces of junk mail to give in each block is the product of the number of houses and the number of pieces per house\n    total_junk_mail = pieces_per_house * num_houses\n\n    return total_junk_mail", "mapping": {"c0": 9.0, "c1": 20.0}}
{"question": "Matthew gave equal numbers of crackers and cakes to his c0 friends. If he had c1 crackers and c2 cakes initiallyHow many cakes did each person eat?", "answer": [2.0], "response": "def Problem(c0, c1, c2):\n    #Matthew gave equal numbers of crackers and cakes to his c0 friends\n    num_friends = c0\n\n    #Matthew had c1 crackers initially\n    num_crackers = c1\n\n    #Matthew had c2 cakes initially\n    num_cakes = c2\n\n    #Each person received the same number of crackers and cakes, so we can divide the total number of cakes by the number of friends to find out how many cakes each person ate\n    num_cakes_per_person = num_cakes / num_friends\n\n    return num_cakes_per_person", "mapping": {"c0": 4.0, "c1": 10.0, "c2": 8.0}}
{"question": "Jessica cut some roses from her flower garden to put in her vase. There are now c0 roses in the vase. If there were c1 roses in the vase initiallyHow many roses did she cut?", "answer": [16.0], "response": "def cut_roses(c0, c1):\n    #initially there were c1 roses in the vase\n    initial_roses = c1\n\n    #now there are c0 roses in the vase\n    current_roses = c0\n\n    #the number of roses cut can be calculated by subtracting the current number of roses from the initial number of roses\n    cut = initial_roses - current_roses\n\n    return cut", "mapping": {"c0": 19.0, "c1": 3.0}}
{"question": "c0 children were riding on the bus. At the bus stop c1 children got on the bus while some got off the bus. Then there were c2 children altogether on the bus.How many more children got off the bus than those that got on?", "answer": [15.0], "response": "def Problem(c0, c1, c2):\n    #c0 children were originally on the bus\n    #c1 children got on the bus\n    #some children got off the bus, leaving c2 children on the bus\n    #we need to find how many more children got off the bus than those that got on\n\n    #first, let's calculate how many children got off the bus\n    got_off = c0 + c1 - c2\n\n    #then, let's calculate how many children got on the bus\n    got_on = c1\n\n    #finally, let's calculate the difference between the number of children that got off and the number that got on\n    difference = got_off - got_on\n\n    return difference", "mapping": {"c0": 23.0, "c1": 24.0, "c2": 8.0}}
{"question": "A book has c0 chapters. The first chapter is c1 pages long the second chapter is c2 pages long and the third chapter is c3 pages long.How many pages does the book have altogether?", "answer": [125.0], "response": "def total_pages(c0, c1, c2, c3):\n    #calculate the total number of pages by adding the number of pages in each chapter\n    total = c1 + c2 + c3\n\n    #multiply the total number of pages by the number of chapters to get the total number of pages in the book\n    total *= c0\n\n    return total", "mapping": {"c0": 3.0, "c1": 66.0, "c2": 35.0, "c3": 24.0}}
{"question": "c0 red peaches, c1 yellow peaches and c2 green peaches are in the basket.How many peaches are in the basket?", "answer": [30.0], "response": "def total_peaches(c0, c1, c2):\n    #add up the number of peaches in each color category\n    total = c0 + c1 + c2\n    return total", "mapping": {"c0": 7.0, "c1": 15.0, "c2": 8.0}}
{"question": "Paige was helping her mom plant flowers and they put c0 seeds in each flower bed. If they planted c1 seeds altogtherHow many flower beds did they have?", "answer": [6.0], "response": "def flower_beds(c0, c1):\n    #calculate the number of flower beds by dividing the total number of seeds by the number of seeds per bed\n    beds = c1 // c0\n    return beds", "mapping": {"c0": 10.0, "c1": 60.0}}
{"question": "Because of the decision Sofia asked the students to suggest specific types of food. If c0 students suggested adding mashed potatoes c1 suggested adding bacon to the menu and c2 suggested adding tomatoesHow many more students suggested mashed potatoes than those that suggested bacon?", "answer": [137.0], "response": "def food_suggestion(c0, c1, c2):\n    #calculate the number of students who suggested mashed potatoes\n    mashed_potatoes = c0\n    #calculate the number of students who suggested bacon\n    bacon = c1\n    #calculate the difference between the number of students who suggested mashed potatoes and bacon\n    difference = mashed_potatoes - bacon\n    return difference", "mapping": {"c0": 257.0, "c1": 120.0, "c2": 97.0}}
{"question": "In a school there are c0 girls and c1 boys. c2 more girls and c3 more boys joined the school.How many boys are there in the school now?", "answer": [1124.0], "response": "def boys_in_school(c0, c1, c2, c3):\n    #total number of girls after new students join\n    total_girls = c0 + c2\n    #total number of boys after new students join\n    total_boys = c1 + c3\n    #return the total number of boys\n    return total_boys", "mapping": {"c0": 135.0, "c1": 214.0, "c2": 496.0, "c3": 910.0}}
{"question": "After resting they decided to go for a swim. If the depth of the water is c0 times Dean's height and he stands at c1 feetHow much deeper is the water than Dean's height?", "answer": [81.0], "response": "def swim_depth(c0, c1):\n    #calculate the depth of the water\n    water_depth = c0 * c1\n\n    #calculate how much deeper the water is than Dean's height\n    difference = water_depth - c1\n\n    return difference", "mapping": {"c0": 10.0, "c1": 9.0}}
{"question": "Next on his checklist is wax to stick the feathers together. He needs c0 g of wax more. If the feathers require a total of c1 g of waxHow many grams of wax does he already have?", "answer": [469.0], "response": "def wax_on_hand(c0, c1):\n    # The amount of wax he already has can be calculated by subtracting the amount he needs from the amount he needs plus the additional amount he needs\n    wax_on_hand = c1 - c0\n    return wax_on_hand", "mapping": {"c0": 159.0, "c1": 628.0}}
{"question": "Frank was reading through his favorite book. He read c0 pages per day. If the book had c1 pagesHow many days did he take to finish the book?", "answer": [72.0], "response": "def days_to_finish_book(c0, c1):\n    # calculate the number of days it takes to finish the book\n    days = c1 // c0\n\n    # if there are any remaining pages, add one more day\n    if c1 % c0 != 0:\n        days += 1\n\n    return days", "mapping": {"c0": 8.0, "c1": 576.0}}
{"question": "There are a total of c0 peaches in a basket. If there are c1 red peaches and some more green peaches in the basket.How many green peaches are in the basket?", "answer": [3.0], "response": "def green_peaches(c0, c1):\n    #calculate the number of green peaches by subtracting the number of red peaches from the total number of peaches\n    green = c0 - c1\n    return green", "mapping": {"c0": 16.0, "c1": 13.0}}
{"question": "After resting they decided to go for a swim. The depth of the water is c0 times Dean's height. Dean is c1 feet shorter than Ron. If Ron stands at c2 feetHow deep was the water?", "answer": [12.0], "response": "def water_depth(c0, c1, c2):\n    # Ron's height is c1 feet taller than Dean's height\n    ron_height = c1 + c2\n\n    # The depth of the water is c0 times Dean's height\n    water_depth = c0 * (ron_height - c1)\n\n    return water_depth", "mapping": {"c0": 2.0, "c1": 8.0, "c2": 14.0}}
{"question": "There are c0 pots in each of the c1 gardens. Each pot has c2 flowers in it.How many flowers are there in all?", "answer": [174080.0], "response": "def Problem(c0, c1, c2):\n    #there are c0 pots in each garden\n    pots_per_garden = c0\n\n    #there are c1 gardens\n    num_gardens = c1\n\n    #each pot has c2 flowers in it\n    flowers_per_pot = c2\n\n    #total number of flowers can be calculated by multiplying the number of pots per garden, the number of gardens, and the number of flowers per pot\n    total_flowers = pots_per_garden * num_gardens * flowers_per_pot\n\n    return total_flowers", "mapping": {"c0": 544.0, "c1": 10.0, "c2": 32.0}}
{"question": "Paige was helping her mom plant flowers and together they planted some seeds. They put c0 seeds in each flower bed. If there are c1 flowerbedsHow many seeds did they plant?", "answer": [450.0], "response": "def plant_seeds(c0, c1):\n    # calculate the total number of seeds planted by multiplying the number of seeds per flower bed by the number of flower beds\n    total_seeds_planted = c0 * c1\n    return total_seeds_planted", "mapping": {"c0": 10.0, "c1": 45.0}}
{"question": "Marco and his dad went strawberry picking. Together their strawberries weighed c0 pounds. Marco's strawberries weighed c1 pounds.How much more did his strawberries weigh than his dad's?", "answer": [34.0], "response": "def strawberry_weight_difference(c0, c1):\n    #total weight of strawberries picked\n    total_weight = c0\n\n    #weight of Marco's strawberries\n    marco_weight = c1\n\n    #weight of dad's strawberries can be calculated by subtracting Marco's weight from the total weight\n    dad_weight = total_weight - marco_weight\n\n    #difference in weight between Marco's and dad's strawberries\n    weight_difference = marco_weight - dad_weight\n\n    return weight_difference", "mapping": {"c0": 4.0, "c1": 19.0}}
{"question": "Julia played tag with c0 kids on wednesday. She had played with c1 kids on monday and c2 kids on tuesday.How many more kids did she play with on monday than on wednesday?", "answer": [2.0], "response": "def tag_difference(c0, c1, c2):\n    # Julia played with c0 kids on Wednesday\n    wednesday = c0\n\n    # Julia played with c1 kids on Monday\n    monday = c1\n\n    # Julia played with c2 kids on Tuesday\n    tuesday = c2\n\n    # Calculate the difference between the number of kids Julia played with on Monday and Wednesday\n    difference = monday - wednesday\n\n    return difference", "mapping": {"c0": 4.0, "c1": 6.0, "c2": 17.0}}
{"question": "Carol was sending out birthday invitations to c0 friends. If each package of invitations she bought had c1 invitations in itHow many packs does she need so that no friend gets left out?", "answer": [5.0], "response": "def Invitations(c0, c1):\n    #calculate the number of packs needed by dividing the number of friends by the number of invitations per pack\n    packs_needed = c0 // c1\n\n    #if there are any remaining friends, add an extra pack\n    if c0 % c1 != 0:\n        packs_needed += 1\n\n    return packs_needed", "mapping": {"c0": 10.0, "c1": 2.0}}
{"question": "A grocery store had c0 apples, c1 bottles of regular soda and c2 bottles of diet soda.How many more bottles than apple did they have?", "answer": [98.0], "response": "def bottles_more_than_apples(c0, c1, c2):\n    #calculate the total number of bottles\n    total_bottles = c1 + c2\n\n    #calculate the difference between the total number of bottles and the number of apples\n    difference = total_bottles - c0\n\n    return difference", "mapping": {"c0": 36.0, "c1": 80.0, "c2": 54.0}}
{"question": "The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped c0 inches. The mouse jumped c1 inches lesser than the frog who jumped c2 inches farther than the grasshopper.How much farther did the mouse jump than the grasshopper?", "answer": [21.0], "response": "def jumping_contest(c0, c1, c2):\n    # grasshopper jumped c0 inches\n    grasshopper_jump = c0\n\n    # mouse jumped c1 inches lesser than the frog\n    mouse_jump = c2 - c1\n\n    # frog jumped c2 inches farther than the grasshopper\n    frog_jump = c2\n\n    # the distance the mouse jumped farther than the grasshopper can be calculated by subtracting their jumps\n    mouse_farther = mouse_jump - grasshopper_jump\n\n    return mouse_farther", "mapping": {"c0": 14.0, "c1": 16.0, "c2": 37.0}}
{"question": "Faye was placing her pencils and crayons into c0 rows with c1 pencils and c2 crayons in each row.How many pencils and crayons does she have altogether?", "answer": [638.0], "response": "def count_pencils_and_crayons(c0, c1, c2):\n    #calculate the total number of pencils by multiplying the number of rows by the number of pencils in each row\n    total_pencils = c0 * c1\n\n    #calculate the total number of crayons by multiplying the number of rows by the number of crayons in each row\n    total_crayons = c0 * c2\n\n    #add the total number of pencils and crayons together to get the total number of items\n    total_items = total_pencils + total_crayons\n\n    return total_items", "mapping": {"c0": 11.0, "c1": 31.0, "c2": 27.0}}
{"question": "The school is planning a field trip. The school has c0 classrooms. There are c1 students in the school with each classroom having the same number of students. If there are c2 seats on each school bus.How many buses are needed to take the trip?", "answer": [29.0], "response": "def field_trip_buses(c0, c1, c2):\n    #calculate the total number of students\n    total_students = c0 * c1\n\n    #calculate the number of buses needed by dividing the total number of students by the number of seats on each bus\n    buses_needed = total_students // c2\n\n    #if there are any remaining students, add an additional bus\n    if total_students % c2 != 0:\n        buses_needed += 1\n\n    return buses_needed", "mapping": {"c0": 87.0, "c1": 58.0, "c2": 2.0}}
{"question": "Emily is making bead necklaces for her friends. She had c0 beads and she was able to make c1 necklaces.How many beads did each necklace need?", "answer": [16.0], "response": "def necklace_beads(c0, c1):\n    # calculate the number of beads needed for each necklace\n    beads_per_necklace = c0 // c1\n\n    return beads_per_necklace", "mapping": {"c0": 2.0, "c1": 32.0}}
{"question": "Paige raised c0 goldfish and c1 catfish in the pond but stray cats loved eating them. Now she has c2 left.How many fishes disappeared?", "answer": [4.0], "response": "def lost_fishes(c0, c1, c2):\n    #total number of fishes before the cats ate them\n    total_fishes = c0 + c1\n\n    #number of fishes left after the cats ate some\n    fishes_left = c2\n\n    #number of fishes that disappeared\n    lost = total_fishes - fishes_left\n\n    return lost", "mapping": {"c0": 7.0, "c1": 12.0, "c2": 15.0}}
{"question": "Paco had c0 sweet cookies and c1 salty cookies. He ate c2 salty cookies and c3 sweet cookies.How many more salty cookies than sweet cookies did he eat?", "answer": [13.0], "response": "def cookie_problem(c0, c1, c2, c3):\n    #calculate how many salty cookies Paco ate\n    salty_cookies = c1 - c2\n\n    #calculate how many sweet cookies Paco ate\n    sweet_cookies = c0 - c3\n\n    #calculate the difference between the number of salty and sweet cookies Paco ate\n    difference = salty_cookies - sweet_cookies\n\n    return difference", "mapping": {"c0": 40.0, "c1": 25.0, "c2": 28.0, "c3": 15.0}}
{"question": "Steven has c0 peaches. Jake has c1 fewer peaches than Steven and c2 more peaches than Jill.How many peaches does Jill have?", "answer": [5.0], "response": "def JillPeaches(c0, c1, c2):\n    #Jake has c1 fewer peaches than Steven\n    jake_peaches = c0 - c1\n\n    #Jake has c2 more peaches than Jill\n    jill_peaches = jake_peaches - c2\n\n    return jill_peaches", "mapping": {"c0": 14.0, "c1": 6.0, "c2": 3.0}}
{"question": "Paul had c0 books. He sold c1 books in a garage sale.How many books does he have left with him?", "answer": [37.0], "response": "def books_left(c0, c1):\n    #Paul had c0 books\n    books_before = c0\n\n    #He sold c1 books in a garage sale\n    books_sold = c1\n\n    #The number of books he has left can be calculated by subtracting the number of books sold from the original number of books\n    books_left = books_before - books_sold\n\n    return books_left", "mapping": {"c0": 115.0, "c1": 78.0}}
{"question": "An industrial machine made c0 shirts yesterday and c1 shirts today. It can make c2 shirts a minute.How many minutes did the machine work in all?", "answer": [2.0], "response": "def Problem(c0, c1, c2):\n    #calculate the total number of shirts made\n    total_shirts = c1 - c0\n\n    #calculate the total time the machine worked in minutes\n    total_time = total_shirts / c2\n\n    return total_time", "mapping": {"c0": 13.0, "c1": 3.0, "c2": 8.0}}
{"question": "Carol was sending out birthday invitations to her friends. Each package of invitations she bought had c0 invitations in it and she bought c1 packs. Then she bought c2 extra invitations.How many friends can she invite?", "answer": [95.0], "response": "def inviteFriends(c0, c1, c2):\n    #calculate the total number of invitations\n    total_invitations = (c0 * c1) + c2\n\n    #divide the total invitations by the number of invitations per friend to get the number of friends she can invite\n    num_friends = total_invitations // 1 #assuming each invitation is for one friend\n\n    return num_friends", "mapping": {"c0": 14.0, "c1": 6.0, "c2": 11.0}}
{"question": "An industrial machine can make c0 shirts per minute. It made c1 shirts in all.How many minutes was the machine working?", "answer": [2.0], "response": "def Problem(c0, c1):\n    #the machine can make c0 shirts per minute\n    shirts_per_minute = c0\n\n    #the machine made c1 shirts in total\n    total_shirts = c1\n\n    #the number of minutes the machine worked can be calculated by dividing the total number of shirts by the number of shirts made per minute\n    minutes_worked = total_shirts / shirts_per_minute\n\n    return minutes_worked", "mapping": {"c0": 3.0, "c1": 6.0}}
{"question": "Danny collects bottle caps. He found c0 bottle caps at the park while he threw away c1 old ones. Now he has c2 bottle caps in his collection.How many bottle caps did danny have at first?", "answer": [21.0], "response": "def bottle_caps(c0, c1, c2):\n    # Danny found c0 bottle caps at the park\n    found = c0\n\n    # He threw away c1 old ones\n    thrown_away = c1\n\n    # Now he has c2 bottle caps in his collection\n    total = c2\n\n    # The number of bottle caps Danny had at first can be calculated by adding the number he found to the number he threw away and then subtracting that from the total he has now\n    initial = total - (found - thrown_away)\n\n    return initial", "mapping": {"c0": 63.0, "c1": 51.0, "c2": 33.0}}
{"question": "A grocery store had c0 bottles of regular soda and c1 bottles of diet soda.How many more bottles of regular soda than diet soda did they have?", "answer": [58.0], "response": "def soda_difference(c0, c1):\n    #calculate the difference between the number of regular soda bottles and diet soda bottles\n    difference = c0 - c1\n    return difference", "mapping": {"c0": 67.0, "c1": 9.0}}
{"question": "During summer break c0 kids from Lawrence county stayed home and the other c1 kids went to camp. An additional c2 kids from outside the county attended the camp.How many kids are in Lawrence county?", "answer": [1538832.0], "response": "def summer_kids(c0, c1, c2):\n    #total number of kids in Lawrence county is the sum of kids who stayed home and kids who went to camp\n    total_kids = c0 + c1\n\n    #add the number of kids from outside the county who attended the camp\n    total_kids += c2\n\n    return total_kids", "mapping": {"c0": 644997.0, "c1": 893835.0, "c2": 78.0}}
{"question": "Faye was placing c0 pencils into rows with c1 pencils in each row.How many rows could she make?", "answer": [6.0], "response": "def pencil_rows(c0, c1):\n    #divide the total number of pencils by the number of pencils in each row\n    rows = c0 // c1\n    return rows", "mapping": {"c0": 30.0, "c1": 5.0}}
{"question": "Frank had some pieces of candy. If he put them into c0 bags with c1 pieces in each bagHow many pieces of candy did he have?", "answer": [858.0], "response": "def candy_pieces(c0, c1):\n    #calculate the total number of candy pieces by multiplying the number of bags with the number of pieces in each bag\n    total_pieces = c0 * c1\n    return total_pieces", "mapping": {"c0": 26.0, "c1": 33.0}}
{"question": "A grocery store had a total of c0 bottles of which c1 were bottles of regular soda and the rest were bottles of diet soda. They also had c2 apple.How many bottles of diet soda did they have?", "answer": [8.0], "response": "def diet_soda_bottles(c0, c1, c2):\n    #total number of bottles - number of regular soda bottles = number of diet soda bottles\n    diet_bottles = c0 - c1\n    return diet_bottles", "mapping": {"c0": 17.0, "c1": 9.0, "c2": 29.0}}
{"question": "Jake has c0 fewer peaches than Steven who has c1 more peaches than Jill. Steven has c2 peaches.How many more peaches does Jake have than Jill?", "answer": [5.0], "response": "def peach_difference(c0, c1, c2):\n    # Steven has c2 peaches\n    steven_peaches = c2\n\n    # Jill has c1 more peaches than Jill\n    jill_peaches = steven_peaches - c1\n\n    # Jake has c0 fewer peaches than Steven\n    jake_peaches = jill_peaches - c0\n\n    # Calculate the difference between Jake and Jill's peaches\n    difference = jake_peaches - jill_peaches\n\n    return difference", "mapping": {"c0": 3.0, "c1": 8.0, "c2": 5.0}}
{"question": "Josh had c0 marbles in his collection. He gave c1 marbles to Jack.How many marbles does Josh have now?", "answer": [18.0], "response": "def marbles_left(c0, c1):\n    #subtract the number of marbles given to Jack from the original number of marbles\n    marbles_left = c0 - c1\n    return marbles_left", "mapping": {"c0": 20.0, "c1": 2.0}}
{"question": "Steven has c0 peaches. Jake has c1 fewer peaches than Steven who has c2 more peaches than Jill.How many peaches does Jake have?", "answer": [8.0], "response": "def jake_peaches(c0, c1, c2):\n    # Steven has c0 peaches\n    steven_peaches = c0\n\n    # Jake has c1 fewer peaches than Steven\n    jake_peaches = steven_peaches - c1\n\n    # Steven has c2 more peaches than Jill\n    jill_peaches = steven_peaches - c2\n\n    # Jake has c1 fewer peaches than Steven who has c2 more peaches than Jill\n    jake_peaches = jill_peaches + c2 - c1\n\n    return jake_peaches", "mapping": {"c0": 12.0, "c1": 4.0, "c2": 67.0}}
{"question": "The Razorback t-shirt shop makes $ c0 dollars off each t-shirt sold. During the Arkansas game and the Texas tech game they sold a total of c1 t-shirts. If they sold c2 t-shirts during the Arkansas gameHow much money did they make from selling the t-shirts during the arkansas game?", "answer": [8722.0], "response": "def calculate_profit(c0, c1, c2):\n    #calculate the total profit from selling all the t-shirts\n    total_profit = c0 * c1\n\n    #calculate the profit from selling t-shirts during the Arkansas game\n    arkansas_profit = c0 * c2\n\n    #return the profit from selling t-shirts during the Arkansas game\n    return arkansas_profit", "mapping": {"c0": 98.0, "c1": 163.0, "c2": 89.0}}
{"question": "Jack received c0 emails in the morning, c1 emails in the afternoon and c2 emails in the evening.How many emails did Jack receive in the day?", "answer": [14.0], "response": "def total_emails(c0, c1, c2):\n    # add up the number of emails received in the morning, afternoon, and evening\n    total = c0 + c1 + c2\n    return total", "mapping": {"c0": 6.0, "c1": 3.0, "c2": 5.0}}
{"question": "Jake has c0 fewer peaches than Steven. Steven has c1 more peaches than Jill. If Jill has c2 peachesHow many more peaches does Jake have than Jill?", "answer": [13.0], "response": "def peach_difference(c0, c1, c2):\n    #calculate how many peaches Steven has\n    steven_peaches = c2 + c1\n    #calculate how many peaches Jake has\n    jake_peaches = steven_peaches - c0\n    #calculate the difference between Jake and Jill's peaches\n    difference = jake_peaches - c2\n    return difference", "mapping": {"c0": 5.0, "c1": 18.0, "c2": 87.0}}
{"question": "For the walls of the house he would use c0 large planks of wood. If each plank of wood needs c1 pieces of nails to be secured and in addition c2 nails are needed for some smaller planks.How many nails does John need for the house wall?", "answer": [229.0], "response": "def calculate_nails(c0, c1, c2):\n    #calculate the number of nails needed for the large planks\n    large_planks_nails = c0 * c1\n\n    #calculate the number of nails needed for the smaller planks\n    small_planks_nails = c0 * c2\n\n    #add the two numbers to get the total number of nails needed\n    total_nails = large_planks_nails + small_planks_nails\n\n    return total_nails", "mapping": {"c0": 13.0, "c1": 17.0, "c2": 8.0}}
{"question": "A grocery store had c0 bottles of diet soda, c1 bottles of regular soda and c2 apples.How many more bottles of regular soda than diet soda did they have?", "answer": [29.0], "response": "def soda_difference(c0, c1):\n    #calculate the difference between the number of regular soda and diet soda\n    difference = c1 - c0\n    return difference", "mapping": {"c0": 54.0, "c1": 83.0, "c2": 12.0}}
{"question": "Because of the decision Sofia asked the students to suggest specific types of food. If c0 students suggested adding bacon c1 suggested adding mashed potatoes to the menu and c2 suggested adding tomatoesHow many more students suggested mashed potatoes than those that suggested bacon?", "answer": [61.0], "response": "def food_suggestion(c0, c1, c2):\n    #calculate the number of students who suggested bacon\n    bacon = c0\n    #calculate the number of students who suggested mashed potatoes\n    mashed_potatoes = c1\n    #calculate the difference between the number of students who suggested mashed potatoes and bacon\n    difference = mashed_potatoes - bacon\n    return difference", "mapping": {"c0": 269.0, "c1": 330.0, "c2": 76.0}}
{"question": "Brenda's mother made cookies for c0. If each of them had c1 cookiesHow many cookies did she prepare?", "answer": [420.0], "response": "def cookies_prepared(c0, c1):\n    # Brenda's mother made c0 cookies\n    cookies_made = c0\n\n    # Each person got c1 cookies\n    cookies_per_person = c1\n\n    # The total number of cookies prepared can be calculated by multiplying the number of people by the number of cookies each person got\n    total_cookies = cookies_made * cookies_per_person\n\n    return total_cookies", "mapping": {"c0": 14.0, "c1": 30.0}}
{"question": "Dave had c0 apps on his phone. He added c1 new apps. After deleting some he had c2 left.How many more apps did he delete than he added?", "answer": [1.0], "response": "def appDeletion(c0, c1, c2):\n    # Dave had c0 apps on his phone\n    initial_apps = c0\n\n    # He added c1 new apps\n    new_apps = c1\n\n    # After deleting some he had c2 left\n    remaining_apps = c2\n\n    # Dave deleted some apps, which can be calculated by subtracting the remaining apps from the initial apps\n    deleted_apps = initial_apps - remaining_apps\n\n    # Dave added new apps, which can be calculated by subtracting the initial apps from the new apps\n    added_apps = new_apps - initial_apps\n\n    # The difference between the number of deleted and added apps is the answer\n    difference = deleted_apps - added_apps\n\n    return difference", "mapping": {"c0": 15.0, "c1": 71.0, "c2": 14.0}}
{"question": "Kelly has c0 nintendo games.How many will she have left if she gives away c1 games?", "answer": [42.0], "response": "def remaining_games(c0, c1):\n    # Kelly has c0 games initially\n    initial_games = c0\n\n    # Kelly gives away c1 games\n    games_given_away = c1\n\n    # The number of games Kelly will have left can be calculated by subtracting the number of games given away from the initial number of games\n    remaining = initial_games - games_given_away\n\n    return remaining", "mapping": {"c0": 106.0, "c1": 64.0}}
{"question": "Matthew had c0 crackers. If Matthew gave equal numbers of crackers to his c1 friends and still had c2 crackers leftHow many crackers did each friend eat?", "answer": [1.0], "response": "def crackers_per_friend(c0, c1, c2):\n    # Matthew had c0 crackers\n    crackers_before = c0\n\n    # Matthew gave equal numbers of crackers to his c1 friends\n    num_friends = c1\n\n    # Matthew still had c2 crackers left\n    crackers_after = c2\n\n    # The total number of crackers given to friends is the difference between the original number of crackers and the number of crackers left\n    crackers_given = crackers_before - crackers_after\n\n    # The number of crackers each friend ate is the total number of crackers given divided by the number of friends\n    crackers_per_friend = crackers_given / num_friends\n\n    return crackers_per_friend", "mapping": {"c0": 15.0, "c1": 5.0, "c2": 10.0}}
{"question": "Last week Fred had c0 dollars and Jason had c1 dollars. They washed cars over the weekend and now Fred has c2 dollars and Jason has c3 dollars.How much money did Jason make over the weekend?", "answer": [56.0], "response": "def JasonsEarnings(c0, c1, c2, c3):\n    #Fred had c0 dollars and Jason had c1 dollars last week\n    #Now Fred has c2 dollars and Jason has c3 dollars\n    #We need to find out how much money Jason made over the weekend\n\n    #First, let's calculate how much money Fred made over the weekend\n    FredsEarnings = c2 - c0\n\n    #Now, we can calculate how much money Jason made over the weekend by subtracting Fred's earnings from the total earnings\n    JasonsEarnings = c3 - c1 - FredsEarnings\n\n    return JasonsEarnings", "mapping": {"c0": 114.0, "c1": 22.0, "c2": 21.0, "c3": 78.0}}
{"question": "Frank had c0 pieces of candy. If he put them equally into c1 bagsHow many pieces of candy are in each bag?", "answer": [21.0], "response": "def candy_per_bag(c0, c1):\n    #divide the total number of candies by the number of bags to get the number of candies per bag\n    candies_per_bag = c0 / c1\n    return candies_per_bag", "mapping": {"c0": 42.0, "c1": 2.0}}
{"question": "Jack received c0 emails in the morning and c1 emails in the afternoon.How many more emails did Jack receive in the morning than in the afternoon?", "answer": [4.0], "response": "def email_difference(c0, c1):\n    #calculate the difference between the number of emails received in the morning and afternoon\n    difference = c0 - c1\n\n    return difference", "mapping": {"c0": 6.0, "c1": 2.0}}
{"question": "Baker made c0 cakes and c1 pastries. If he sold c2 pastries and c3 cakesHow many more pastries than cakes did baker sell?", "answer": [76.0], "response": "def pastry_vs_cake(c0, c1, c2, c3):\n    #calculate the number of pastries sold\n    pastries_sold = c1 - c2\n\n    #calculate the number of cakes sold\n    cakes_sold = c0 - c3\n\n    #calculate the difference between pastries sold and cakes sold\n    difference = pastries_sold - cakes_sold\n\n    return difference", "mapping": {"c0": 43.0, "c1": 114.0, "c2": 154.0, "c3": 78.0}}
{"question": "Haley has c0 marbles. In her class c1 boys love to play marbles. If she distributes her marbles equallyHow many will each of the boys receive?", "answer": [10.0], "response": "def MarbleDistribution(c0, c1):\n    #Haley has c0 marbles\n    haley_marbles = c0\n\n    #There are c1 boys in her class\n    num_boys = c1\n\n    #Each boy will receive an equal number of marbles, so we can divide the total number of marbles by the number of boys\n    marbles_per_boy = haley_marbles / num_boys\n\n    return marbles_per_boy", "mapping": {"c0": 20.0, "c1": 2.0}}
{"question": "They decided to hold the party in their backyard. They have c0 sets of tables and each set has c1 chairs. If a total of c2 people will attend the partyHow many more chairs will they have to buy?", "answer": [2.0], "response": "def chairs_needed(c0, c1, c2):\n    #calculate the total number of chairs they currently have\n    total_chairs = c0 * c1\n\n    #calculate the number of chairs they need to buy\n    chairs_needed = c2 - total_chairs\n\n    return chairs_needed", "mapping": {"c0": 4.0, "c1": 3.0, "c2": 14.0}}
{"question": "Last week Fred had c0 dollars and Jason had c1 dollars. They washed cars over the weekend and now Fred has c2 dollars and Jason has c3 dollars.How much money did Fred earn over the weekend?", "answer": [21.0], "response": "def money_earned(c0, c1, c2, c3):\n    #Fred's initial amount of money\n    fred_before = c0\n\n    #Jason's initial amount of money\n    jason_before = c1\n\n    #Fred's amount of money after the weekend\n    fred_after = c2\n\n    #Jason's amount of money after the weekend\n    jason_after = c3\n\n    #Fred's earnings can be calculated by subtracting his initial amount from his amount after the weekend\n    fred_earned = fred_after - fred_before\n\n    return fred_earned", "mapping": {"c0": 19.0, "c1": 16.0, "c2": 40.0, "c3": 69.0}}
{"question": "Paco had c0 cookies. He ate c1 of them. Then he bought c2 more cookiesHow many more cookies did he eat than those he bought?", "answer": [2.0], "response": "def cookie_problem(c0, c1, c2):\n    # Paco had c0 cookies\n    cookies_before = c0\n\n    # He ate c1 of them\n    cookies_eaten = c1\n\n    # He bought c2 more cookies\n    cookies_bought = c2\n\n    # Calculate how many more cookies he ate than those he bought\n    difference = cookies_eaten - cookies_bought\n\n    return difference", "mapping": {"c0": 25.0, "c1": 5.0, "c2": 3.0}}
{"question": "Rachel has c0 apple trees. She picked c1 apples from each of her trees. Now the trees have a total c2 apples still on them.How many apples did Rachel pick in all?", "answer": [28.0], "response": "def calculate_apples_picked(c0, c1, c2):\n    #calculate the total number of apples on all trees before Rachel picked any\n    total_apples_before = c0 * c1\n\n    #calculate the total number of apples on all trees after Rachel picked some\n    total_apples_after = total_apples_before + c2\n\n    #calculate the number of apples Rachel picked by subtracting the total number of apples after from the total number of apples before\n    apples_picked = total_apples_before - total_apples_after\n\n    return apples_picked", "mapping": {"c0": 4.0, "c1": 7.0, "c2": 29.0}}
{"question": "Jake has c0 fewer peaches and c1 more apples than Steven. Steven has c2 apples and c3 peaches.How many more peaches than apples does Steven have?", "answer": [7.0], "response": "def peach_minus_apple(c0, c1, c2, c3):\n    # Jake has c0 fewer peaches than Steven\n    jake_peaches = c3 - c0\n\n    # Jake has c1 more apples than Steven\n    jake_apples = c2 + c1\n\n    # Steven has c3 peaches and c2 apples\n    steven_peaches = c3\n    steven_apples = c2\n\n    # Calculate the difference between Steven's peaches and apples\n    difference = steven_peaches - steven_apples\n\n    return difference", "mapping": {"c0": 8.0, "c1": 10.0, "c2": 11.0, "c3": 18.0}}
{"question": "A grocery store had a total of c0 bottles of which c1 were bottles of regular soda and the rest were bottles of diet soda.How many bottles of diet soda did they have?", "answer": [2.0], "response": "def diet_soda_bottles(c0, c1):\n    #total number of bottles is c0\n    total_bottles = c0\n\n    #number of regular soda bottles is c1\n    regular_soda_bottles = c1\n\n    #number of diet soda bottles can be calculated by subtracting the number of regular soda bottles from the total number of bottles\n    diet_soda_bottles = total_bottles - regular_soda_bottles\n\n    return diet_soda_bottles", "mapping": {"c0": 30.0, "c1": 28.0}}
{"question": "The Ferris wheel in paradise park has c0 small seats and c1 large seats. Each small seat can hold c2 people and large seat can hold c3 people.How many people can ride the Ferris wheel on small seats?", "answer": [28.0], "response": "def FerrisWheelSmallSeats(c0, c1, c2, c3):\n    #calculate the total number of people that can ride on small seats\n    small_seats_capacity = c0 * c2\n\n    return small_seats_capacity", "mapping": {"c0": 2.0, "c1": 23.0, "c2": 14.0, "c3": 54.0}}
{"question": "Debby bought c0 soda bottles and c1 water bottles when they were on sale. If she drank c2 water bottles and c3 soda bottles a dayHow many days would the soda bottles last?", "answer": [40.0], "response": "def soda_days(c0, c1, c2, c3):\n    #calculate the total number of soda bottles Debby has\n    total_soda = c0 + c3\n    #calculate the number of soda bottles Debby drinks per day\n    soda_per_day = c3\n    #calculate the number of days the soda bottles will last\n    soda_days = total_soda // soda_per_day\n    return soda_days", "mapping": {"c0": 360.0, "c1": 162.0, "c2": 122.0, "c3": 9.0}}
{"question": "A grocery store had c0 bottles of diet soda. If they had c1 more bottles of regular soda than diet sodaHow many bottles of regular soda did they have?", "answer": [83.0], "response": "def regular_soda(c0, c1):\n    #number of bottles of diet soda\n    diet_soda = c0\n\n    #number of bottles of regular soda is c1 more than diet soda\n    regular_soda = diet_soda + c1\n\n    return regular_soda", "mapping": {"c0": 4.0, "c1": 79.0}}
{"question": "During the Arkansas and Texas tech game the Razorback t-shirt shop made $ c0 by selling t-shirts. If they make $ c1 dollars off each t-shirt soldHow many t-shirts did they sell?", "answer": [6.0], "response": "def tshirt_sales(c0, c1):\n    #calculate the number of t-shirts sold by dividing the total revenue by the revenue per t-shirt\n    num_tshirts = c0 // c1\n\n    return num_tshirts", "mapping": {"c0": 60.0, "c1": 10.0}}
{"question": "Frank was reading through his favorite book. He read c0 pages per day and it took him c1 days to finish the book.How many pages are there in the book?", "answer": [12518.0], "response": "def Problem(c0, c1):\n    #Frank read c0 pages per day\n    pages_per_day = c0\n\n    #It took him c1 days to finish the book\n    days_to_finish = c1\n\n    #The total number of pages in the book can be calculated by multiplying the number of pages Frank read per day by the number of days it took him to finish the book\n    total_pages = pages_per_day * days_to_finish\n\n    return total_pages", "mapping": {"c0": 22.0, "c1": 569.0}}
{"question": "Winter is almost here and most animals are migrating to warmer countries. c0 bird families flew away for the winter from near a mountain. If there were c1 bird families living near the mountain initiallyHow many more bird families flew away for the winter than those that stayed behind?", "answer": [127.0], "response": "def bird_migration(c0, c1):\n    #calculate the number of bird families that flew away for the winter\n    flew_away = c0\n\n    #calculate the number of bird families that stayed behind\n    stayed_behind = c1\n\n    #calculate the difference between the two\n    difference = flew_away - stayed_behind\n\n    return difference", "mapping": {"c0": 86.0, "c1": 45.0}}
{"question": "Allan brought c0 balloons to the park and then bought c1 more balloons there. If Jake brought c2 balloons to the parkHow many more balloons did Jake have than Allan in the park?", "answer": [1.0], "response": "def balloon_difference(c0, c1, c2):\n    # Allan brought c0 balloons and bought c1 more\n    allan_total = c0 + c1\n\n    # Jake brought c2 balloons\n    jake_total = c2\n\n    # Calculate the difference between the number of balloons Jake and Allan have\n    difference = jake_total - allan_total\n\n    return difference", "mapping": {"c0": 2.0, "c1": 3.0, "c2": 6.0}}
{"question": "Bryan took a look at his books and magazines. If he has c0 books and c1 magazines in each of his c2 bookshelvesHow many magazines does he have in total?", "answer": [460.0], "response": "def total_magazines(c0, c1, c2):\n    #calculate the total number of magazines by multiplying the number of magazines in each bookshelf by the number of bookshelves\n    total_magazines = c1 * c2\n\n    return total_magazines", "mapping": {"c0": 9.0, "c1": 46.0, "c2": 10.0}}
{"question": "Rachel had to complete c0 pages of math homework, c1 pages of reading homework and c2 more pages of biology homework.How many pages of math and biology homework did she have to complete?", "answer": [11.0], "response": "def homework_pages(c0, c1, c2):\n    # Rachel had to complete c0 pages of math homework\n    math_pages = c0\n\n    # Rachel had to complete c2 more pages of biology homework\n    bio_pages = c0 + c2\n\n    # Return the total number of pages of math and biology homework\n    return math_pages + bio_pages", "mapping": {"c0": 8.0, "c1": 7.0, "c2": 3.0}}
{"question": "Every day Ryan spends c0 hours on learning english, c1 hours on learning chinese and c2 hours on learning spanish.How many more hours does he spend on learning chinese than he does on learning spanish?", "answer": [1.0], "response": "def language_hours(c0, c1, c2):\n    #calculate the difference between the hours spent on learning chinese and spanish\n    chinese_hours = c1\n    spanish_hours = c2\n    difference = chinese_hours - spanish_hours\n\n    return difference", "mapping": {"c0": 2.0, "c1": 5.0, "c2": 4.0}}
{"question": "c0 birds were sitting on the fence. c1 more birds and c2 more storks came to join them.How many more birds than storks are sitting on the fence?", "answer": [3.0], "response": "def bird_stork_difference(c0, c1, c2):\n    #calculate the total number of birds after the new birds and storks arrive\n    total_birds = c0 + c1\n    total_storks = c2\n\n    #calculate the difference between the number of birds and storks\n    difference = total_birds - total_storks\n\n    return difference", "mapping": {"c0": 2.0, "c1": 5.0, "c2": 4.0}}
{"question": "Paco had c0 cookies. He gave c1 cookies to his friend and ate c2 cookies.How many more cookies did he give to his friend than those he ate?", "answer": [7.0], "response": "def cookie_difference(c0, c1, c2):\n    # Paco gave c1 cookies to his friend\n    cookies_given = c1\n\n    # Paco ate c2 cookies\n    cookies_ate = c2\n\n    # Calculate the difference between cookies given and cookies ate\n    difference = cookies_given - cookies_ate\n\n    return difference", "mapping": {"c0": 6.0, "c1": 30.0, "c2": 23.0}}
{"question": "Baker made c0 cakes. He sold c1 of them and bought c2 new cakes.How many more cakes did baker sell than those he bought?", "answer": [47.0], "response": "def cake_difference(c0, c1, c2):\n    #calculate the number of cakes sold\n    sold = c0 - c1\n    #calculate the number of cakes bought\n    bought = c2\n    #calculate the difference between the number of cakes sold and bought\n    difference = sold - bought\n    return difference", "mapping": {"c0": 170.0, "c1": 78.0, "c2": 31.0}}
{"question": "Shirley sold c0 cases of boxes of trefoils.How many boxes of trefoils does she need to deliver if each case has c1 boxes?", "answer": [350.0], "response": "def boxes_to_deliver(c0, c1):\n    #each case has c1 boxes\n    boxes_per_case = c1\n\n    #Shirley sold c0 cases\n    cases_sold = c0\n\n    #the total number of boxes to deliver is the product of cases sold and boxes per case\n    boxes_to_deliver = cases_sold * boxes_per_case\n\n    return boxes_to_deliver", "mapping": {"c0": 25.0, "c1": 14.0}}
{"question": "We ordered c0 pizzas. Each pizza has c1 slices. If there are c2 of usHow many slices of pizza are there altogether?", "answer": [68.0], "response": "def pizza_slices(c0, c1, c2):\n    #calculate the total number of slices by multiplying the number of pizzas by the number of slices per pizza\n    total_slices = c0 * c1\n\n    #calculate the total number of slices each person will get by dividing the total number of slices by the number of people\n    slices_per_person = total_slices / c2\n\n    return slices_per_person", "mapping": {"c0": 17.0, "c1": 4.0, "c2": 25.0}}
{"question": "There were c0 roses and c1 orchids in the vase. Jessica cut some more roses and orchids from her flower garden. There are now c2 roses and c3 orchids in the vase.How many orchids did she cut?", "answer": [19.0], "response": "def cut_flowers(c0, c1, c2, c3):\n    #calculate the number of roses and orchids Jessica cut\n    roses_cut = c2 - c0\n    orchids_cut = c3 - c1\n\n    #return the number of orchids Jessica cut\n    return orchids_cut", "mapping": {"c0": 12.0, "c1": 2.0, "c2": 10.0, "c3": 21.0}}
{"question": "White t - shirts can be purchased in packages. If mom buys c0 white t - shirts where each package has c1 white t - shirts.How many packages will she have?", "answer": [22.0], "response": "def Packages(c0, c1):\n    #mom buys c0 white t-shirts\n    total_shirts = c0\n\n    #each package has c1 white t-shirts\n    shirts_per_package = c1\n\n    #the number of packages can be calculated by dividing the total number of shirts by the number of shirts per package\n    packages = total_shirts // shirts_per_package\n\n    return packages", "mapping": {"c0": 66.0, "c1": 3.0}}
{"question": "Mary is baking a cake. The recipe calls for c0 cups of flour and c1 cups of sugar. She already put in c2 cups of flour and c3 cups of sugar.How many more cups of sugar does she need to add?", "answer": [12.0], "response": "def sugar_needed(c0, c1, c2, c3):\n    #calculate how much sugar is already in the cake\n    sugar_in_cake = c3\n\n    #calculate how much sugar is needed for the recipe\n    sugar_needed = c1\n\n    #calculate how much sugar still needs to be added\n    sugar_to_add = sugar_needed - sugar_in_cake\n\n    return sugar_to_add", "mapping": {"c0": 5.0, "c1": 14.0, "c2": 10.0, "c3": 2.0}}
{"question": "Mom buys c0 white t - shirts. If white t - shirts can be purchased in packages of c1 How many packages will she have?", "answer": [17.0], "response": "def Packages(c0, c1):\n    #calculate the number of packages by dividing the number of t-shirts by the number of t-shirts in each package\n    num_packages = c0 // c1\n\n    return num_packages", "mapping": {"c0": 51.0, "c1": 3.0}}
{"question": "Adam could fit c0 action figures and c1 cabinets on each shelf in his room. His room has c2 shelves.How many total items could his shelves hold?", "answer": [72.0], "response": "def total_items(c0, c1, c2):\n    #calculate the total number of items that can fit on one shelf\n    items_per_shelf = c0 + c1\n\n    #calculate the total number of items that can fit on all shelves\n    total_items = items_per_shelf * c2\n\n    return total_items", "mapping": {"c0": 8.0, "c1": 10.0, "c2": 4.0}}
{"question": "We ordered c0 pizzas. Each pizza has the same number of slices. If there were a total of c1 slicesHow many slices are there in each pizza?", "answer": [2.0], "response": "def PizzaSlices(c0, c1):\n    #calculate the number of slices per pizza by dividing the total number of slices by the number of pizzas\n    slices_per_pizza = c1 / c0\n\n    return slices_per_pizza", "mapping": {"c0": 7.0, "c1": 14.0}}
{"question": "Baker made c0 cakes. He sold c1 of them. Then he made c2 more cakes.How many more cakes did baker make than those he sold?", "answer": [184.0], "response": "def cake_difference(c0, c1, c2):\n    #calculate the total number of cakes made\n    total_cakes = c0 + c2\n    #calculate the difference between the total cakes made and the cakes sold\n    difference = total_cakes - c1\n    return difference", "mapping": {"c0": 144.0, "c1": 71.0, "c2": 111.0}}
{"question": "Mary is baking a cake. The recipe calls for c0 cups of flour c1 cups of sugar and c2 cups of salt. She already put in c3 cups of flour.How many more cups of flour does she need to add?", "answer": [1.0], "response": "def remaining_flour(c0, c3):\n    #c0 is the total amount of flour needed\n    #c3 is the amount of flour already added\n    remaining = c0 - c3\n    return remaining", "mapping": {"c0": 12.0, "c1": 5.0, "c2": 49.0, "c3": 11.0}}
{"question": "The Razorback t-shirt shop makes $ c0 dollars off each t-shirt sold. During the Arkansas game and the Texas tech game they sold a total of c1 t-shirts. If they sold c2 t-shirts during the Arkansas gameHow much money did they make from selling the t-shirts during the Texas tech game?", "answer": [1092.0], "response": "def calculate_profit(c0, c1, c2):\n    #calculate the total profit from selling all the t-shirts\n    total_profit = c0 * (c1 + c2)\n\n    #calculate the profit from selling t-shirts during the Texas tech game\n    texas_profit = total_profit - (c0 * c2)\n\n    return texas_profit", "mapping": {"c0": 78.0, "c1": 186.0, "c2": 172.0}}
{"question": "There are c0 different movies and c1 different books in the ' crazy silly school ' series. If you read c2 of the books and watched c3 of the moviesHow many more books do you still have to read?", "answer": [15.0], "response": "def remaining_books(c0, c1, c2, c3):\n    #calculate the number of books already read\n    books_read = c2\n\n    #calculate the total number of books in the series\n    total_books = c0\n\n    #calculate the number of books left to read\n    books_left = total_books - books_read\n\n    return books_left", "mapping": {"c0": 62.0, "c1": 19.0, "c2": 4.0, "c3": 34.0}}
{"question": "We ordered some pizzas. Each pizza has c0 slices. If there were a total of c1 slicesHow many pizzas did we order?", "answer": [14.0], "response": "def pizza_order(c0, c1):\n    #calculate the number of pizzas by dividing the total number of slices by the number of slices per pizza\n    num_pizzas = c1 // c0\n\n    return num_pizzas", "mapping": {"c0": 2.0, "c1": 28.0}}
{"question": "Rebecca wants to split a collection of eggs into groups of c0. Rebecca has c1 bananas c2 eggs and c3 marbles.How many groups will be created?", "answer": [3.0], "response": "def egg_groups(c0, c1, c2, c3):\n    # calculate the total number of eggs\n    total_eggs = c1 + c2\n\n    # calculate the number of groups that can be created\n    groups = total_eggs // c0\n\n    return groups", "mapping": {"c0": 3.0, "c1": 99.0, "c2": 9.0, "c3": 27.0}}
{"question": "c0 children were riding on the bus. At the bus stop some children got off the bus. Then there were c1 children left on the bus.How many more children were on the bus before the bus stop than there are now?", "answer": [23.0], "response": "def children_on_bus(c0, c1):\n    #calculate the difference between the original number of children and the number of children left on the bus\n    difference = c0 - c1\n\n    return difference", "mapping": {"c0": 41.0, "c1": 18.0}}
{"question": "In Haley's class some boys love to play marbles. Haley gives c0 marbles to each boy. If she had c1 marblesHow many boys did she give the marbles to?", "answer": [14.0], "response": "def marbles(c0, c1):\n    # each boy gets c0 marbles\n    marbles_per_boy = c0\n\n    # Haley has c1 marbles in total\n    total_marbles = c1\n\n    # the number of boys can be calculated by dividing the total number of marbles by the number of marbles each boy gets\n    num_boys = total_marbles // marbles_per_boy\n\n    return num_boys", "mapping": {"c0": 2.0, "c1": 28.0}}
{"question": "Matthew had c0 crackers and c1 cakes. If Matthew gave equal numbers of crackers and cakes to his c2 friendsHow many crackers and cakes did each person eat?", "answer": [5.0], "response": "def crackers_and_cakes(c0, c1, c2):\n    #calculate the total number of items to be divided equally among c2 friends\n    total_items = c0 + c1\n\n    #calculate the number of items each person will get\n    per_person = total_items // c2\n\n    #calculate the number of crackers each person will get\n    crackers_per_person = per_person // 2\n\n    #calculate the number of cakes each person will get\n    cakes_per_person = per_person // 2\n\n    #if there are an odd number of items, one person will get an extra item\n    if total_items % c2 != 0:\n        crackers_per_person += 1\n\n    return crackers_per_person, cakes_per_person", "mapping": {"c0": 14.0, "c1": 21.0, "c2": 7.0}}
{"question": "Helen the hippo and her friends are preparing for thanksgiving at Helen's house. Helen baked c0 cookies yesterday c1 cookies this morning and c2 cookies the day before yesterday.How many cookies did Helen bake till last night?", "answer": [450.0], "response": "def total_cookies(c0, c1, c2):\n    # add up the number of cookies baked each day\n    total = c0 + c1 + c2\n    # return the total number of cookies baked till last night\n    return total", "mapping": {"c0": 31.0, "c1": 270.0, "c2": 419.0}}
{"question": "For the walls of the house he would use c0 nails in all to secure large planks of wood. If each plank of wood needs c1 pieces of nails to be securedHow many planks does John need for the house wall?", "answer": [2.0], "response": "def num_planks(c0, c1):\n    #calculate the total number of nails needed for the wall\n    total_nails = c0\n\n    #calculate the number of planks needed by dividing the total number of nails by the number of nails needed per plank\n    num_planks = total_nails // c1\n\n    return num_planks", "mapping": {"c0": 4.0, "c1": 2.0}}
{"question": "Danny collects bottle caps and wrappers. He found c0 bottle caps and c1 wrappers at the park. Now he has c2 bottle caps and c3 wrappers in his collection.How many more bottle caps than wrappers did danny find at the park?", "answer": [16.0], "response": "def bottle_caps_vs_wrappers(c0, c1, c2, c3):\n    #calculate the number of bottle caps and wrappers Danny found at the park\n    found_caps = c2 - c0\n    found_wrappers = c3 - c1\n\n    #calculate the difference between the number of bottle caps and wrappers found\n    difference = found_caps - found_wrappers\n\n    return difference", "mapping": {"c0": 30.0, "c1": 14.0, "c2": 7.0, "c3": 86.0}}
{"question": "He then went to see the oranges being harvested. He found out that they harvest c0 sacks per day and that each sack containes c1 oranges.How many oranges do they harvest per day?", "answer": [280.0], "response": "def oranges_per_day(c0, c1):\n    #each sack contains c1 oranges\n    oranges_per_sack = c1\n\n    #they harvest c0 sacks per day\n    sacks_per_day = c0\n\n    #total oranges harvested per day can be calculated by multiplying the number of sacks by the number of oranges per sack\n    total_oranges_per_day = oranges_per_sack * sacks_per_day\n\n    return total_oranges_per_day", "mapping": {"c0": 8.0, "c1": 35.0}}
{"question": "Edward spent $ c0 to buy books and $ c1 to buy pens. Now he has $ 19.How much more did Edward spend on books than pens?", "answer": [8.0], "response": "def book_vs_pen(c0, c1):\n    #total amount spent by Edward\n    total_spent = c0 + c1\n\n    #remaining amount after spending\n    remaining = 19 - total_spent\n\n    #calculating the difference between the amount spent on books and pens\n    diff = c0 - c1\n\n    #calculating how much more Edward spent on books than pens\n    more_on_books = (diff + remaining) / 2\n\n    return more_on_books", "mapping": {"c0": 16.0, "c1": 8.0}}
{"question": "Emily is making bead necklaces for her friends. Each necklace takes c0 beads and she has c1 beads.How many necklaces can Emily make?", "answer": [2.0], "response": "def bead_necklaces(c0, c1):\n    # calculate how many necklaces can be made by dividing the total number of beads by the number of beads per necklace\n    num_necklaces = c1 // c0\n    return num_necklaces", "mapping": {"c0": 8.0, "c1": 16.0}}
{"question": "Dan has $ c0. He had $ c1 left with him after he bought a candy bar.How much did the candy bar cost?", "answer": [1.0], "response": "def candy_cost(c0, c1):\n    # Dan had c1 left after buying the candy bar, so the cost of the candy bar is the difference between c0 and c1\n    candy_price = c0 - c1\n    return candy_price", "mapping": {"c0": 4.0, "c1": 3.0}}
{"question": "Paul got a box of c0 crayons for his birthday. By the end of the school year he had either lost or given away c1 of them.How many crayons did he have left by the end of the school year?", "answer": [183.0], "response": "def crayons_left(c0, c1):\n    # Paul starts with c0 crayons\n    starting_crayons = c0\n\n    # By the end of the school year, he has c1 crayons left\n    ending_crayons = c1\n\n    # The number of crayons he lost or gave away can be calculated by subtracting the ending number from the starting number\n    lost_or_given_away = starting_crayons - ending_crayons\n\n    return lost_or_given_away", "mapping": {"c0": 253.0, "c1": 70.0}}
{"question": "Helen the hippo and her friends are preparing for thanksgiving at Helen's house. Helen baked c0 chocolate chip cookies and c1 raisin cookies yesterday. And she baked c2 raisin cookies and c3 chocolate chip cookies this morning.How many raisin cookies did Helen bake?", "answer": [482.0], "response": "def count_raisin_cookies(c0, c1, c2, c3):\n    #Helen baked c1 raisin cookies yesterday and c2 raisin cookies this morning\n    raisin_cookies = c1 + c2\n\n    return raisin_cookies", "mapping": {"c0": 144.0, "c1": 397.0, "c2": 85.0, "c3": 403.0}}
{"question": "Rachel picked c0 ripe apples from her tree. Now the tree has c1 apples still on it. If c2 of those are ripe and the rest are unripeHow many ripe apples did the tree have to begin with?", "answer": [8.0], "response": "def ripe_apples(c0, c1, c2):\n    #c0 is the number of ripe apples Rachel picked\n    #c1 is the total number of apples left on the tree\n    #c2 is the number of ripe apples left on the tree\n\n    #The total number of ripe apples the tree had to begin with is the sum of the ripe apples Rachel picked and the ripe apples still on the tree\n    total_ripe = c0 + c2\n\n    return total_ripe", "mapping": {"c0": 2.0, "c1": 7.0, "c2": 6.0}}
{"question": "An industrial machine made c0 shirts yesterday and c1 shirts today. It can make c2 shirts a minute.How many minutes did the machine work yesterday?", "answer": [3.0], "response": "def Problem(c0, c1, c2):\n    #calculate the total number of shirts made\n    total_shirts = c1 - c0\n\n    #calculate the number of minutes it took to make the shirts\n    minutes_worked = total_shirts / c2\n\n    return minutes_worked", "mapping": {"c0": 9.0, "c1": 44.0, "c2": 3.0}}
{"question": "Zachary did c0 push-ups in gym class today. David did c1 more push-ups than Zachary. John did c2 push-ups less than David.How many push-ups did John do?", "answer": [69.0], "response": "def john_pushups(c0, c1, c2):\n    # David did c1 more push-ups than Zachary\n    david_pushups = c0 + c1\n\n    # John did c2 push-ups less than David\n    john_pushups = david_pushups - c2\n\n    return john_pushups", "mapping": {"c0": 51.0, "c1": 22.0, "c2": 4.0}}
{"question": "Helen the hippo and her friends are preparing for thanksgiving at Helen's house. Helen baked c0 chocolate chip cookies and c1 raisin cookies yesterday. And she baked c2 raisin cookies and c3 chocolate chip cookies this morning.How many more raisin cookies did Helen bake yesterday compared to today?", "answer": [20.0], "response": "def compare_cookies(c0, c1, c2, c3):\n    #calculate the total number of raisin cookies baked yesterday\n    raisin_yesterday = c1\n    #calculate the total number of raisin cookies baked today\n    raisin_today = c2\n    #calculate the difference between the two\n    difference = raisin_yesterday - raisin_today\n    return difference", "mapping": {"c0": 519.0, "c1": 300.0, "c2": 280.0, "c3": 359.0}}
{"question": "A grocery store had c0 bottles of regular soda, c1 bottles of diet soda and c2 bottles of lite soda.How many more bottles of regular soda did they have than diet soda?", "answer": [21.0], "response": "def soda_difference(c0, c1, c2):\n    #calculate the difference between the number of regular soda and diet soda\n    difference = c0 - c1\n    return difference", "mapping": {"c0": 81.0, "c1": 60.0, "c2": 60.0}}
{"question": "Randy has some blocks. He uses c0 blocks to build a tower. If there are c1 blocks leftHow many blocks did he have at the start?", "answer": [90.0], "response": "def Problem(c0, c1):\n    #Randy used c0 blocks to build a tower\n    used_blocks = c0\n\n    #There are c1 blocks left after building the tower\n    remaining_blocks = c1\n\n    #The total number of blocks Randy had at the start can be calculated by adding the used blocks and remaining blocks\n    total_blocks = used_blocks + remaining_blocks\n\n    return total_blocks", "mapping": {"c0": 52.0, "c1": 38.0}}
{"question": "Edward had $ c0. He spent some money. Now he has $ 3.How much money did Edward spend?", "answer": [10.0], "response": "def money_spent(c0):\n    # Edward had c0 dollars\n    initial_money = c0\n\n    # Now he has 3 dollars\n    final_money = 3\n\n    # The amount he spent can be calculated by subtracting the final amount from the initial amount\n    spent = initial_money - final_money\n\n    return spent", "mapping": {"c0": 13.0}}
{"question": "Ed had c0 more marbles than Doug. Ed lost some of his marbles at the playground. Now Ed has c1 more marbles than doug.How many marbles did Ed lose?", "answer": [11.0], "response": "def marbles_lost(c0, c1):\n    # Ed had c0 more marbles than Doug\n    ed_marbles = c0 + doug_marbles\n\n    # Now Ed has c1 more marbles than Doug\n    doug_marbles = ed_marbles - c1\n\n    # Ed lost some of his marbles at the playground\n    marbles_lost = ed_marbles - doug_marbles - c1\n\n    return marbles_lost", "mapping": {"c0": 19.0, "c1": 8.0}}
{"question": "They decided to hold the party in their backyard. They have c0 sets of tables and each set has c1 chairs. There are also c2 chairs extra.How many chairs do they have for the guests?", "answer": [174.0], "response": "def chairs_for_guests(c0, c1, c2):\n    #calculate the total number of chairs from the sets of tables\n    total_chairs = c0 * c1\n\n    #add the extra chairs to the total number of chairs\n    total_chairs += c2\n\n    return total_chairs", "mapping": {"c0": 12.0, "c1": 14.0, "c2": 6.0}}
{"question": "The Ferris wheel in paradise park has c0 small seats and c1 large seats. Each small seat can hold c2 people and large seat can hold c3 people.How many people can ride the Ferris wheel on large seats?", "answer": [84.0], "response": "def FerrisWheel(c0, c1, c2, c3):\n    #calculate the total number of people that can ride on small seats\n    small_capacity = c0 * c2\n\n    #calculate the total number of people that can ride on large seats\n    large_capacity = c1 * c3\n\n    #return the number of people that can ride on large seats\n    return large_capacity", "mapping": {"c0": 3.0, "c1": 7.0, "c2": 16.0, "c3": 12.0}}
{"question": "There are c0 houses in a block. If a mailman has to give c1 pieces of junk mail to each house in each blockHow many pieces of junk mail should he give each block?", "answer": [640.0], "response": "def mailman(c0, c1):\n    #each house in the block will receive c1 pieces of junk mail\n    pieces_per_house = c1\n\n    #to find the total number of pieces of junk mail, we need to multiply the number of houses by the number of pieces per house\n    total_pieces = c0 * pieces_per_house\n\n    return total_pieces", "mapping": {"c0": 20.0, "c1": 32.0}}
{"question": "A grocery store had c0 bottles of regular soda, c1 bottles of diet soda and c2 apples.How many more bottles than apple did they have?", "answer": [26.0], "response": "def Problem(c0, c1, c2):\n    #calculate the total number of bottles\n    total_bottles = c0 + c1\n\n    #calculate the difference between the total number of bottles and the number of apples\n    difference = total_bottles - c2\n\n    return difference", "mapping": {"c0": 72.0, "c1": 32.0, "c2": 78.0}}
{"question": "There are c0 baskets of peaches. Each basket has c1 red peaches and c2 green peaches.How many green peaches are in the baskets altogether?", "answer": [14.0], "response": "def count_green_peaches(c0, c1, c2):\n    #calculate the total number of peaches in each basket\n    total_peaches = c1 + c2\n\n    #calculate the total number of green peaches in all baskets\n    total_green_peaches = c0 * c2\n\n    return total_green_peaches", "mapping": {"c0": 7.0, "c1": 10.0, "c2": 2.0}}
{"question": "Winter is almost here and most animals are migrating to warmer countries. There are c0 bird families living near the mountain. c1 new bird families came to live near the mountain from the arctic while c2 bird families flew away further south for winter.How many bird families were left near the mountain?", "answer": [27.0], "response": "def bird_families(c0, c1, c2):\n    #calculate the total number of bird families near the mountain after migration\n    total_families = c0 + c1 - c2\n    return total_families", "mapping": {"c0": 3.0, "c1": 26.0, "c2": 2.0}}
{"question": "Because of the decision Sofia asked the students to suggest specific types of food. If c0 students suggested adding mashed potatoes c1 suggested adding bacon to the menu and c2 suggested adding tomatoesHow many more students suggested mashed potatoes than those that suggested tomatoes?", "answer": [65.0], "response": "def food_suggestion(c0, c1, c2):\n    # number of students who suggested mashed potatoes\n    mashed_potatoes = c0\n    # number of students who suggested tomatoes\n    tomatoes = c2\n    # difference between the number of students who suggested mashed potatoes and tomatoes\n    difference = mashed_potatoes - tomatoes\n    return difference", "mapping": {"c0": 144.0, "c1": 467.0, "c2": 79.0}}
{"question": "Jesse's rooms are c0 feet long and c1 feet wide. If she has c2 rooms in allHow much carpet does she need to cover the floors of all rooms?", "answer": [6840.0], "response": "def carpet_needed(c0, c1, c2):\n    #calculate the area of one room\n    room_area = c0 * c1\n\n    #calculate the total area needed by multiplying the area of one room by the number of rooms\n    total_area = room_area * c2\n\n    return total_area", "mapping": {"c0": 19.0, "c1": 18.0, "c2": 20.0}}
{"question": "Rachel had to complete c0 pages of math homework. If she had to complete c1 more pages of reading homework than math homeworkHow many pages did she have to complete in all?", "answer": [23.0], "response": "def total_homework(c0, c1):\n    # Rachel had to complete c0 pages of math homework\n    math_homework = c0\n\n    # Rachel had to complete c1 more pages of reading homework than math homework\n    reading_homework = c0 + c1\n\n    # Total homework is the sum of math and reading homework\n    total = math_homework + reading_homework\n\n    return total", "mapping": {"c0": 10.0, "c1": 3.0}}
{"question": "In a school there are c0 girls and the rest are boys. If there are c1 more boys than girlsHow many pupils are there in that school?", "answer": [1542.0], "response": "def school_pupils(c0, c1):\n    #total number of pupils in the school\n    total_pupils = c0 + c1\n\n    return total_pupils", "mapping": {"c0": 700.0, "c1": 142.0}}
{"question": "A waiter had c0 customers. c1 customers left.How many customers does he still have?", "answer": [9.0], "response": "def remaining_customers(c0, c1):\n    #the waiter originally had c0 customers\n    initial_customers = c0\n\n    #c1 customers left\n    customers_left = c1\n\n    #the number of customers remaining can be calculated by subtracting the number of customers who left from the initial number of customers\n    remaining = initial_customers - customers_left\n\n    return remaining", "mapping": {"c0": 14.0, "c1": 5.0}}
{"question": "Lucy went to the grocery store. She bought c0 packs of cookie and c1 packs of cake. In the end she had c2 amount of change remaining.How many packs of groceries did she buy in all?", "answer": [14.0], "response": "def grocery_total(c0, c1, c2):\n    #calculate the total cost of groceries\n    total_cost = c0 + c1\n\n    #calculate the amount of change Lucy had left\n    change = c2\n\n    #calculate the total number of packs of groceries Lucy bought\n    total_packs = total_cost - change\n\n    return total_packs", "mapping": {"c0": 2.0, "c1": 12.0, "c2": 56.0}}
{"question": "Mary is baking a cake. The recipe calls for c0 cups of sugar and c1 cups of flour. She already put in c2 cups of flour and c3 cups of sugar.How many more cups of sugar does she need to add?", "answer": [1.0], "response": "def sugar_needed(c0, c1, c2, c3):\n    #calculate how much sugar has already been added\n    sugar_added = c3\n\n    #calculate how much sugar is needed\n    sugar_needed = c0 - sugar_added\n\n    return sugar_needed", "mapping": {"c0": 11.0, "c1": 9.0, "c2": 12.0, "c3": 10.0}}
{"question": "Marco and his dad went strawberry picking. His strawberries weighed c0 pounds while his dad's strawberries weighed c1 pounds.Together how much did their strawberries weigh?", "answer": [40.0], "response": "def strawberry_weight(c0, c1):\n    #add the weight of Marco's strawberries and his dad's strawberries\n    total_weight = c0 + c1\n    return total_weight", "mapping": {"c0": 8.0, "c1": 32.0}}
{"question": "Kelly gives away c0 nintendo games.How many did she have initially if she still has c1 games left?", "answer": [183.0], "response": "def initial_games(c0, c1):\n    # Kelly initially had c0 games\n    initial = c0\n\n    # Kelly now has c1 games left\n    remaining = c1\n\n    # The number of games Kelly had initially can be calculated by adding the number of games she gave away to the number of games she still has\n    initial = remaining + initial\n\n    return initial", "mapping": {"c0": 91.0, "c1": 92.0}}
{"question": "The Razorback t-shirt shop makes $ c0 dollars off each t-shirt sold. During the Arkansas game and the Texas tech game they sold a total of c1 t-shirts. If they sold c2 t-shirts during the Arkansas gameHow many t-shirts did they sell during the Texas tech game?", "answer": [127.0], "response": "def tshirt_sales(c0, c1, c2):\n    #total number of t-shirts sold during both games\n    total_sales = c1\n\n    #number of t-shirts sold during the Arkansas game\n    arkansas_sales = c2\n\n    #number of t-shirts sold during the Texas tech game can be calculated by subtracting the Arkansas game sales from the total sales\n    texas_sales = total_sales - arkansas_sales\n\n    return texas_sales", "mapping": {"c0": 106.0, "c1": 242.0, "c2": 115.0}}
{"question": "The Razorback t-shirt shop makes $ c0 dollars off each t-shirt sold. During the Arkansas and Texas tech game they made $ c1 by selling t-shirts.How many t-shirts did they sell?", "answer": [10.0], "response": "def calculate_tshirt_sales(c0, c1):\n    # calculate the number of t-shirts sold by dividing the total sales by the price per t-shirt\n    num_tshirts_sold = c1 // c0\n    return num_tshirts_sold", "mapping": {"c0": 23.0, "c1": 230.0}}
{"question": "Randy has c0 blocks. He uses c1 blocks to build a house and c2 blocks to build a tower.How many more blocks did he use to build the house than he did to build the tower?", "answer": [26.0], "response": "def block_difference(c0, c1, c2):\n    #calculate the number of blocks used for the house\n    house_blocks = c1\n\n    #calculate the number of blocks used for the tower\n    tower_blocks = c2\n\n    #calculate the difference between the number of blocks used for the house and the tower\n    difference = house_blocks - tower_blocks\n\n    return difference", "mapping": {"c0": 90.0, "c1": 89.0, "c2": 63.0}}
{"question": "Allan brought c0 balloons and Jake brought c1 balloons to the park.How many more balloons did Jake have than Allan in the park?", "answer": [1.0], "response": "def balloon_difference(c0, c1):\n    #calculate the difference between the number of balloons Jake brought and the number Allan brought\n    difference = c1 - c0\n    return difference", "mapping": {"c0": 2.0, "c1": 3.0}}
{"question": "Every day Ryan spends c0 hours on learning english, c1 hours on learning chinese and c2 hours on learning spanish.How many more hours does he spend on learning english than he does on learning spanish?", "answer": [3.0], "response": "def language_hours(c0, c1, c2):\n    #calculate the difference between the hours spent on learning english and spanish\n    english_spanish_diff = c0 - c2\n    \n    return english_spanish_diff", "mapping": {"c0": 7.0, "c1": 2.0, "c2": 4.0}}
{"question": "Robin has c0 packages of gum. There are c1 pieces in each package. Robin has c2 extra pieces of gum.How many pieces of gum does Robin have?", "answer": [997.0], "response": "def total_gum(c0, c1, c2):\n    #calculate the total number of pieces of gum in all packages\n    total_pieces = c0 * c1\n\n    #add the extra pieces of gum\n    total_pieces += c2\n\n    return total_pieces", "mapping": {"c0": 43.0, "c1": 23.0, "c2": 8.0}}
{"question": "Paul had c0 books. After selling some books in a garage sale and giving c1 books to his friend he had c2 books left.How many books did he sell in the garage sale?", "answer": [11.0], "response": "def books_sold(c0, c1, c2):\n    #Paul had c0 books\n    books_before = c0\n\n    #After selling some books in a garage sale and giving c1 books to his friend he had c2 books left\n    books_after = c2\n\n    #The number of books he sold can be calculated by subtracting the number of books he had after from the number of books he had before\n    books_sold = books_before - books_after + c1\n\n    return books_sold", "mapping": {"c0": 108.0, "c1": 35.0, "c2": 62.0}}
{"question": "For the walls of the house he would use c0 large planks of wood and c1 small planks. If each large plank of wood needs c2 pieces of nails to be secured and each small plank needs c3 nails.How many planks does John need for the house wall?", "answer": [29.0], "response": "def wall_planks(c0, c1, c2, c3):\n    #calculate the total number of nails needed for the large planks\n    large_nails = c0 * c2\n\n    #calculate the total number of nails needed for the small planks\n    small_nails = c1 * c3\n\n    #calculate the total number of planks needed by adding the number of large and small planks\n    total_planks = c0 + c1\n\n    return total_planks", "mapping": {"c0": 12.0, "c1": 17.0, "c2": 14.0, "c3": 25.0}}
{"question": "Melissa played c0 games and scored a total of c1 points scoring the same for each game.How many points did she score in each game?", "answer": [27.0], "response": "def Problem(c0, c1):\n    #Melissa played c0 games and scored a total of c1 points\n    #If she scored the same for each game, we can divide the total points by the number of games to get the points per game\n    points_per_game = c1 / c0\n\n    return points_per_game", "mapping": {"c0": 3.0, "c1": 81.0}}
{"question": "Nell collects cards. She had c0 baseball cards and c1 Ace cards. She gave some of her cards to Jeff and now has c2 baseball cards and c3 Ace cards left.How many more Ace cards than baseball cards does Nell have?", "answer": [91.0], "response": "def card_difference(c0, c1, c2, c3):\n    #calculate the number of baseball cards Nell gave to Jeff\n    baseball_given = c0 - c2\n\n    #calculate the number of Ace cards Nell gave to Jeff\n    ace_given = c1 - c3\n\n    #calculate the difference between the number of Ace cards and baseball cards Nell has left\n    difference = c3 - c2 - (baseball_given - ace_given)\n\n    return difference", "mapping": {"c0": 246.0, "c1": 214.0, "c2": 404.0, "c3": 495.0}}
{"question": "Jerry had c0 action figures on a shelf in his room. Later he added c1 more action figures to the shelf and removed c2 old ones.How many action figures were on his shelf in all?", "answer": [7.0], "response": "def total_action_figures(c0, c1, c2):\n    #calculate the total number of action figures by adding the new ones and subtracting the old ones\n    total = c0 + c1 - c2\n    return total", "mapping": {"c0": 8.0, "c1": 4.0, "c2": 5.0}}
{"question": "Paige was helping her mom plant flowers and together they planted c0 seeds in c1 flowerbeds. If they put same number of seeds in each flower bedHow many seeds did they plant in each flowerbed?", "answer": [5.0], "response": "def Problem(c0, c1):\n    #divide the total number of seeds by the number of flowerbeds to get the number of seeds per flowerbed\n    seeds_per_bed = c0 / c1\n\n    return seeds_per_bed", "mapping": {"c0": 45.0, "c1": 9.0}}
{"question": "A mailman has to give c0 pieces of junk mail to each house in each of the c1 blocks. If there are c2 houses in each blockHow many pieces of junk mail should he give in each block?", "answer": [48.0], "response": "def mailman(c0, c1, c2):\n    # The mailman has to give c0 pieces of junk mail to each house in each of the c1 blocks\n    # There are c2 houses in each block\n    # So, the total number of pieces of junk mail he should give in each block is c0 * c2\n    total_mail = c0 * c2\n\n    return total_mail", "mapping": {"c0": 4.0, "c1": 81.0, "c2": 12.0}}
{"question": "The ring toss game at the carnival made c0 dollars in the first c1 days and c2 dollars in the remaining c3 days.How much did they make per day in the remaining c4 days at the carnival?", "answer": [2.0], "response": "def ring_toss(c0, c1, c2, c3, c4):\n    #calculate the total amount made at the carnival\n    total = c0 + c2\n\n    #calculate the number of days the ring toss game was played\n    days = c1 + c3\n\n    #calculate the amount made per day during the remaining days\n    per_day = (total - c0) / c4\n\n    return per_day", "mapping": {"c0": 325.0, "c1": 154.0, "c2": 114.0, "c3": 57.0, "c4": 57.0}}
{"question": "Brenda's mother made cookies for c0 guests but c1 guests did not come. If she prepared c2 cookies and each guest had the same number of cookiesHow many did each of them have?", "answer": [18.0], "response": "def cookies_per_guest(c0, c1, c2):\n    #calculate the number of guests who actually came\n    guests_came = c0 - c1\n\n    #calculate the number of cookies each guest will have\n    cookies_per_guest = c2 // guests_came\n\n    return cookies_per_guest", "mapping": {"c0": 10.0, "c1": 9.0, "c2": 18.0}}
{"question": "Mary is baking a cake. The recipe calls for c0 cups of sugar c1 cups of flour and c2 cups of salt. She already put in c3 cups of flour.How many more cups of flour than cups of salt does she need to add now?", "answer": [1.0], "response": "def flour_to_salt(c0, c1, c2, c3):\n    #calculate how much flour is still needed\n    flour_needed = c1 - c3\n\n    #calculate how much salt is still needed\n    salt_needed = c2\n\n    #calculate the difference between the amount of flour and salt needed\n    difference = flour_needed - salt_needed\n\n    return difference", "mapping": {"c0": 9.0, "c1": 7.0, "c2": 4.0, "c3": 2.0}}
{"question": "Baker made some cakes. He sold c0 of them. If he still has c1 cakes leftHow many cakes did baker make?", "answer": [217.0], "response": "def cakes_made(c0, c1):\n    # Baker made some cakes and sold c0 of them\n    cakes_sold = c0\n\n    # If he still has c1 cakes left, we can calculate how many cakes he made by adding the number of cakes sold to the number of cakes left\n    cakes_made = cakes_sold + c1\n\n    return cakes_made", "mapping": {"c0": 145.0, "c1": 72.0}}
{"question": "Jesse needs a carpet of size c0 square feet to cover her room. If her room is c1 feet wideWhat is the length of her room?", "answer": [5.0], "response": "def room_length(c0, c1):\n    #calculate the length of the room by dividing the area by the width\n    length = c0 / c1\n    return length", "mapping": {"c0": 10.0, "c1": 2.0}}
{"question": "There are some bananas in Philip's banana collection. If the bananas are organized into c0 groups of size c1 How many bananas does he have in his collection?", "answer": [26180.0], "response": "def count_bananas(c0, c1):\n    #calculate the total number of bananas by multiplying the number of groups by the size of each group\n    total_bananas = c0 * c1\n    return total_bananas", "mapping": {"c0": 140.0, "c1": 187.0}}
{"question": "Rebecca wants to split a collection of eggs into groups of c0. Rebecca has c1 eggs c2 bananas and c3 marbles.How many groups will be created?", "answer": [3.0], "response": "def egg_groups(c0, c1, c2, c3):\n    # calculate the number of egg groups by dividing the number of eggs by the size of each group\n    egg_groups = c1 // c0\n    return egg_groups", "mapping": {"c0": 6.0, "c1": 18.0, "c2": 72.0, "c3": 66.0}}
{"question": "Jessie currently weighs c0 kilograms. After she started to go jogging everyday she lost c1 kilograms in the first week and c2 kilograms in the second week.How much did she weigh before starting to jog?", "answer": [211.0], "response": "def Jessie_weight(c1, c2, current_weight):\n    #calculate the total weight lost after two weeks of jogging\n    total_weight_lost = c1 + c2\n\n    #calculate Jessie's weight before starting to jog\n    original_weight = current_weight + total_weight_lost\n\n    return original_weight", "mapping": {"c0": 9.0, "c1": 62.0, "c2": 140.0}}
{"question": "The school is planning a field trip. The school has c0 classrooms. There are c1 seats on each school bus. If there are a total of c2 students in the schoolHow many buses are needed to take the trip?", "answer": [37.0], "response": "def field_trip_buses(c0, c1, c2):\n    #calculate the total number of seats available on all buses\n    total_seats = c0 * c1\n\n    #calculate the number of buses needed to accommodate all students\n    buses_needed = c2 // total_seats\n\n    #if there are any remaining students, add an extra bus\n    if c2 % total_seats != 0:\n        buses_needed += 1\n\n    return buses_needed", "mapping": {"c0": 72.0, "c1": 3.0, "c2": 111.0}}
{"question": "c0 campers went rowing and c1 campers went hiking in the morning. c2 campers went rowing in the afternoon.How many campers went rowing in all?", "answer": [34.0], "response": "def total_rowers(c0, c1, c2):\n    #calculate the total number of campers who went rowing\n    rowers = c0 + c2\n\n    return rowers", "mapping": {"c0": 13.0, "c1": 59.0, "c2": 21.0}}
{"question": "Jerry had c0 action figures on a shelf in his room. Later he added c1 more action figures to the shelf. If he also has c2 books on the shelfHow many more action figures than books were on his shelf?", "answer": [6.0], "response": "def action_figures_more_than_books(c0, c1, c2):\n    #calculate the total number of action figures on the shelf after Jerry added more\n    total_action_figures = c0 + c1\n\n    #calculate the difference between the total number of action figures and the number of books on the shelf\n    difference = total_action_figures - c2\n\n    return difference", "mapping": {"c0": 9.0, "c1": 7.0, "c2": 10.0}}
{"question": "Josh had c0 marbles in his collection. He found c1 marbles ones while he lost c2 marbles.How many marbles does he have now?", "answer": [30.0], "response": "def marbles(c0, c1, c2):\n    # Josh had c0 marbles in his collection\n    total_marbles = c0\n\n    # He found c1 marbles\n    total_marbles += c1\n\n    # He lost c2 marbles\n    total_marbles -= c2\n\n    return total_marbles", "mapping": {"c0": 22.0, "c1": 13.0, "c2": 5.0}}
{"question": "For the walls of the house he would use c0 large planks of wood and c1 small planks. If large planks together need c2 pieces of nails to be secured and small planks together need c3 nails.How many nails does John need for the house wall?", "answer": [20.0], "response": "def calculate_nails(c0, c1, c2, c3):\n    #calculate the total number of nails needed for the large planks\n    large_nails = c0 * c2\n\n    #calculate the total number of nails needed for the small planks\n    small_nails = c1 * c3\n\n    #add the two totals together to get the total number of nails needed\n    total_nails = large_nails + small_nails\n\n    return total_nails", "mapping": {"c0": 12.0, "c1": 10.0, "c2": 15.0, "c3": 5.0}}
{"question": "Paul got a box of c0 crayons for his birthday. During the school year he gave c1 crayons to his friends while he lost c2 crayons.How many more crayons did he give to his friends than those he lost?", "answer": [410.0], "response": "def crayon_difference(c0, c1, c2):\n    #c0 is the number of crayons Paul got for his birthday\n    #c1 is the number of crayons he gave to his friends\n    #c2 is the number of crayons he lost\n\n    #calculate the difference between the number of crayons given to friends and the number lost\n    difference = c1 - c2\n\n    return difference", "mapping": {"c0": 589.0, "c1": 571.0, "c2": 161.0}}
{"question": "Jack received c0 emails in the morning, c1 emails in the afternoon and c2 emails in the evening.How many more emails did Jack receive in the morning than in the evening?", "answer": [2.0], "response": "def morning_vs_evening(c0, c1, c2):\n    #calculate the total number of emails received\n    total_emails = c0 + c1 + c2\n    \n    #calculate the average number of emails received per time period\n    avg_emails = total_emails / 3\n    \n    #calculate the difference between the number of emails received in the morning and evening\n    morning_vs_evening = c0 - (avg_emails)\n    \n    return morning_vs_evening", "mapping": {"c0": 9.0, "c1": 10.0, "c2": 7.0}}
{"question": "Jack received c0 emails in the morning and c1 emails in the afternoon.How many more emails did Jack receive in the afternoon than in the morning?", "answer": [2.0], "response": "def email_difference(c0, c1):\n    #calculate the difference between the number of emails received in the afternoon and morning\n    difference = c1 - c0\n    return difference", "mapping": {"c0": 6.0, "c1": 8.0}}
{"question": "After eating a hearty meal they went to see the Buckingham palace. There were c0 paintings in the Buckingham palace. There, Rachel learned that c1 visitors came to the Buckingham palace that day. If there were c2 visitors the previous dayHow many visited the Buckingham palace within c3 days?", "answer": [745.0], "response": "def visitors_within_days(c0, c1, c2, c3):\n    #calculate the average number of visitors per day\n    avg_visitors_per_day = (c1 - c2) / 1 #assuming only one day has passed between c2 and c1\n\n    #calculate the total number of visitors within c3 days\n    total_visitors = c0 + (avg_visitors_per_day * c3)\n\n    return total_visitors", "mapping": {"c0": 71.0, "c1": 557.0, "c2": 188.0, "c3": 57.0}}
{"question": "Helen the hippo and her friends are preparing for thanksgiving at Helen's house. Helen baked c0 chocolate chip cookies and c1 raisin cookies yesterday. And she baked c2 raisin cookies and c3 chocolate chip cookies this morning.How many more chocolate chip cookies did Helen bake yesterday compared to today?", "answer": [131.0], "response": "def compare_cookies(c0, c1, c2, c3):\n    #calculate the total number of chocolate chip cookies baked yesterday\n    cc_yesterday = c0\n\n    #add the number of chocolate chip cookies baked yesterday to the total number of chocolate chip cookies baked today\n    cc_today = c3\n\n    #calculate the difference between the number of chocolate chip cookies baked yesterday and today\n    diff = cc_yesterday - cc_today\n\n    return diff", "mapping": {"c0": 197.0, "c1": 46.0, "c2": 75.0, "c3": 66.0}}
{"question": "Jake has c0 fewer peaches than Steven who has c1 more peaches than Jill. Steven has c2 peaches.How many peaches does Jill have?", "answer": [6.0], "response": "def JillPeaches(c0, c1, c2):\n    #Steven has c2 peaches\n    steven_peaches = c2\n\n    #Jill has c1 less peaches than Steven\n    jill_peaches = steven_peaches - c1\n\n    #Jake has c0 fewer peaches than Steven\n    jake_peaches = jill_peaches - c0\n\n    return jill_peaches", "mapping": {"c0": 18.0, "c1": 13.0, "c2": 19.0}}
{"question": "Lucy went to the grocery store. She bought c0 packs of cookie and some packs of cake. In total she had c1 packs of groceryHow many packs of cake did she buy in all?", "answer": [4.0], "response": "def cake_packs(c0, c1):\n    # Lucy bought c0 packs of cookies\n    cookies = c0\n\n    # Total packs of groceries she bought is c1\n    groceries = c1\n\n    # Subtracting the number of cookie packs from the total number of grocery packs will give us the number of cake packs she bought\n    cake = groceries - cookies\n\n    return cake", "mapping": {"c0": 23.0, "c1": 27.0}}
{"question": "Every day Ryan spends c0 hours on learning english c1 hours on learning chinese and c2 hours on learning spanish.How many more hours does he spend on learning english than he does on learning chinese?", "answer": [3.0], "response": "def language_hours(c0, c1, c2):\n    #calculate the difference between the hours spent on learning english and chinese\n    english_chinese_diff = c0 - c1\n    \n    return english_chinese_diff", "mapping": {"c0": 6.0, "c1": 3.0, "c2": 58.0}}
{"question": "A book has c0 chapters. The first chapter is c1 pages long. The second chapter is c2 pages long.How many more pages does the first chapter have than the second chapter?", "answer": [37.0], "response": "def chapter_pages(c0, c1, c2):\n    #calculate the total number of pages in the book\n    total_pages = c1 + c2\n\n    #calculate the average number of pages per chapter\n    avg_pages = total_pages / c0\n\n    #calculate the number of pages in the first chapter\n    first_chapter_pages = avg_pages * c1\n\n    #calculate the number of pages in the second chapter\n    second_chapter_pages = avg_pages * c2\n\n    #calculate the difference between the number of pages in the first and second chapters\n    difference = first_chapter_pages - second_chapter_pages\n\n    return difference", "mapping": {"c0": 2.0, "c1": 48.0, "c2": 11.0}}
{"question": "c0 green peaches, c1 yellow peaches and c2 red peaches are in the basket.How many more green peaches than red peaches are in the basket?", "answer": [4.0], "response": "def peach_difference(c0, c1, c2):\n    #calculate the difference between the number of green and red peaches\n    difference = c0 - c2\n    \n    return difference", "mapping": {"c0": 6.0, "c1": 60.0, "c2": 2.0}}
{"question": "Debby drinks c0 bottles a day. If she bought a total of c1 water bottlesHow many days would they last her?", "answer": [2.0], "response": "def Problem(c0, c1):\n    #calculate how many days the water bottles would last by dividing the total number of bottles by the number of bottles Debby drinks per day\n    days = c1 // c0\n\n    return days", "mapping": {"c0": 6.0, "c1": 12.0}}
{"question": "There were c0 parents in the program and c1 people in total.How many pupils were present in the program?", "answer": [654.0], "response": "def calculate_pupils(c0, c1):\n    # calculate the number of pupils by subtracting the number of parents from the total number of people\n    pupils = c1 - c0\n    return pupils", "mapping": {"c0": 22.0, "c1": 676.0}}
{"question": "Julia played tag with c0 kids on monday, c1 kids on tuesday and c2 kids on wednesday.How many kids did she play with altogether?", "answer": [34.0], "response": "def total_kids_played(c0, c1, c2):\n    #add up the number of kids played with on each day\n    total_kids = c0 + c1 + c2\n\n    return total_kids", "mapping": {"c0": 17.0, "c1": 15.0, "c2": 2.0}}
{"question": "The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped c0 inches. The frog jumped c1 inches farther than the grasshopper and the mouse jumped c2 inches farther than the frog.How far did the mouse jump?", "answer": [45.0], "response": "def jumping_contest(c0, c1, c2):\n    # The frog jumped c1 inches farther than the grasshopper\n    frog_jump = c0 + c1\n\n    # The mouse jumped c2 inches farther than the frog\n    mouse_jump = frog_jump + c2\n\n    return mouse_jump", "mapping": {"c0": 25.0, "c1": 18.0, "c2": 2.0}}
{"question": "Next on his checklist is wax to stick the feathers together and colors to paint them. He needs a total of c0 g of colors to paint them. If the feathers require c1 g of wax and right now he just needs c2 gHow many grams of wax does he already have?", "answer": [28.0], "response": "def calculate_wax(c0, c1, c2):\n    #total grams of wax needed\n    total_wax = c1\n\n    #grams of wax already available\n    available_wax = c2\n\n    #grams of wax needed to complete the checklist\n    wax_needed = c0 - available_wax\n\n    #if there is enough wax available, return 0\n    if wax_needed <= 0:\n        return 0\n\n    #otherwise, return the amount of wax still needed\n    return wax_needed", "mapping": {"c0": 49.0, "c1": 288.0, "c2": 260.0}}
{"question": "Mary is baking a cake. The recipe calls for c0 cups of flour and c1 cups of sugar. She already put in c2 cups of flour.How many more cups of flour than cups of sugar does she need to add now?", "answer": [3.0], "response": "def flour_to_sugar(c0, c1, c2):\n    #calculate how much more flour is needed\n    flour_needed = c0 - c2\n\n    #calculate how much sugar is needed\n    sugar_needed = c1\n\n    #calculate the difference between the amount of flour and sugar needed\n    difference = flour_needed - sugar_needed\n\n    return difference", "mapping": {"c0": 14.0, "c1": 6.0, "c2": 5.0}}
{"question": "Jake has c0 more apples and c1 fewer peaches than Steven. Steven has c2 peaches and c3 apples.How many apples does Jake have?", "answer": [25.0], "response": "def JakeApples(c0, c1, c2, c3):\n    #Steven has c2 peaches and c3 apples\n    Steven_apples = c3\n\n    #Jake has c0 more apples than Steven\n    Jake_apples = Steven_apples + c0\n\n    #Jake has c1 fewer peaches than Steven, so Steven has c2 + c1 peaches\n    Steven_peaches = c2 + c1\n\n    #We only need to find out how many apples Jake has, so we return Jake_apples\n    return Jake_apples", "mapping": {"c0": 13.0, "c1": 17.0, "c2": 8.0, "c3": 12.0}}
{"question": "Jake has c0 fewer peaches than Steven who has c1 more peaches than Jill. Steven has c2 peaches.How many more peaches does Jill have than Jake?", "answer": [1.0], "response": "def peach_difference(c0, c1, c2):\n    # Steven has c2 peaches\n    steven_peaches = c2\n\n    # Jill has c1 more peaches than Steven\n    jill_peaches = steven_peaches - c1\n\n    # Jake has c0 fewer peaches than Steven\n    jake_peaches = steven_peaches - c0\n\n    # Jill has c1 more peaches than Jake\n    jill_difference = jill_peaches - jake_peaches\n\n    return jill_difference", "mapping": {"c0": 12.0, "c1": 11.0, "c2": 4.0}}
{"question": "Last week Fred had c0 dollars and Jason had c1 dollars. Fred washed cars over the weekend and now has c2 dollars and Jason did not work.How much money do they have together now?", "answer": [14.0], "response": "def money_total(c0, c1, c2):\n    #Fred had c0 dollars last week\n    fred_money = c0\n\n    #Jason had c1 dollars last week\n    jason_money = c1\n\n    #Fred now has c2 dollars after washing cars\n    fred_money_now = c2\n\n    #The total money they have now is the sum of Fred's and Jason's money\n    total_money = fred_money_now + jason_money\n\n    return total_money", "mapping": {"c0": 86.0, "c1": 5.0, "c2": 9.0}}
{"question": "Jake has c0 fewer peaches and c1 more apples than Steven. Steven has c2 peaches and c3 apples.How many peaches does Jake have?", "answer": [7.0], "response": "def JakePeaches(c0, c1, c2, c3):\n    #Steven has c2 peaches\n    steven_peaches = c2\n\n    #Jake has c0 fewer peaches than Steven\n    jake_peaches = steven_peaches - c0\n\n    return jake_peaches", "mapping": {"c0": 12.0, "c1": 79.0, "c2": 19.0, "c3": 14.0}}
{"question": "There are c0 different books and c1 different movies in the ' crazy silly school ' series. If you read c2 of the movies and watched c3 of the booksHow many more books than movies have you read?", "answer": [5.0], "response": "def books_vs_movies(c0, c1, c2, c3):\n    #calculate the number of books and movies read\n    books_read = c3\n    movies_watched = c2\n\n    #calculate the difference between the number of books and movies read\n    difference = books_read - movies_watched\n\n    return difference", "mapping": {"c0": 10.0, "c1": 6.0, "c2": 14.0, "c3": 19.0}}
{"question": "Debby bought c0 water bottles when they were on sale. If she drank c1 bottles a day for some days. If she has c2 bottles leftHow many days did she drink for?", "answer": [1.0], "response": "def days_drinking(c0, c1, c2):\n    #calculate how many bottles Debby drank\n    drank = c0 - c2\n\n    #calculate how many days Debby drank for\n    days = drank // c1\n\n    return days", "mapping": {"c0": 301.0, "c1": 144.0, "c2": 157.0}}
{"question": "He also had c0 aquariums for saltwater animals and c1 aquariums for freshwater animals. Each aquarium has c2 animals in it.How many saltwater animals does Tyler have?", "answer": [2184.0], "response": "def count_saltwater_animals(c0, c1, c2):\n    #calculate the total number of animals in all aquariums\n    total_animals = (c0 + c1) * c2\n    \n    #calculate the number of saltwater animals by multiplying the number of saltwater aquariums by the number of animals in each aquarium\n    saltwater_animals = c0 * c2\n    \n    return saltwater_animals", "mapping": {"c0": 56.0, "c1": 10.0, "c2": 39.0}}
{"question": "Tiffany was collecting cans for recycling. On monday she had c0 bags of cans. She found c1 bags of cans on the next day and c2 bags of cans the day after that.How many bags did she have altogether?", "answer": [20.0], "response": "def total_bags(c0, c1, c2):\n    # add up the number of bags\n    total = c0 + c1 + c2\n    return total", "mapping": {"c0": 10.0, "c1": 3.0, "c2": 7.0}}
{"question": "The grasshopper and the frog had a jumping contest. The grasshopper jumped c0 inches and the frog jumped c1 inches.How much did they jump altogether?", "answer": [66.0], "response": "def jumping_contest(c0, c1):\n    #calculate the total distance jumped by adding the distances jumped by the grasshopper and the frog\n    total_distance = c0 + c1\n    return total_distance", "mapping": {"c0": 31.0, "c1": 35.0}}
{"question": "There were c0 dollars in Olivia's wallet. She collected c1 more dollars from an atm. After she visited a supermarket there were c2 dollars left.How much did she spend?", "answer": [89.0], "response": "def calculate_spending(c0, c1, c2):\n    # Olivia had c0 dollars in her wallet\n    initial_amount = c0\n\n    # She collected c1 more dollars from an ATM\n    collected_amount = c1\n\n    # After visiting the supermarket, she had c2 dollars left\n    remaining_amount = c2\n\n    # The amount she spent can be calculated by subtracting the remaining amount from the initial amount plus the collected amount\n    spent_amount = initial_amount + collected_amount - remaining_amount\n\n    return spent_amount", "mapping": {"c0": 100.0, "c1": 148.0, "c2": 159.0}}
{"question": "A waiter had c0 customers. After some left he still had c1 customers.How many more customers left than those that stayed behind?", "answer": [5.0], "response": "def Problem(c0, c1):\n    #there were originally c0 customers\n    customers_before = c0\n\n    #after some left, there were c1 customers\n    customers_after = c1\n\n    #the number of customers that left can be calculated by subtracting the number of customers afterward from the original number of customers\n    left = customers_before - customers_after\n\n    #the number of customers that stayed behind can be calculated by subtracting the number of customers that left from the original number of customers\n    stayed = customers_before - left\n\n    #the number of customers that left more than those that stayed behind can be calculated by subtracting the number of customers that stayed behind from the number of customers that left\n    more_left = left - stayed\n\n    return more_left", "mapping": {"c0": 11.0, "c1": 3.0}}
{"question": "Katie had c0 ds games and her friends had c1 games.How many more games does Katie have than her friends?", "answer": [22.0], "response": "def game_difference(c0, c1):\n    # Katie has c0 games\n    katie_games = c0\n\n    # Her friends have c1 games\n    friends_games = c1\n\n    # Calculate the difference in games\n    difference = katie_games - friends_games\n\n    return difference", "mapping": {"c0": 81.0, "c1": 59.0}}
{"question": "Frank put some pieces of candy equally into c0 bags. If he had c1 pieces of candyHow many pieces of candy are in each bag?", "answer": [8.0], "response": "def candy_per_bag(c0, c1):\n    #divide the total number of candies by the number of bags to get the number of candies per bag\n    candies_per_bag = c1 / c0\n    return candies_per_bag", "mapping": {"c0": 2.0, "c1": 16.0}}
{"question": "Being his favorite, he saved checking on the grapevines for his last stop. He was told by c0 of the pickers that they fill c1 drums of grapes in c2 days.How many drums of grapes would be filled in each day?", "answer": [18.0], "response": "def grapevine(c0, c1, c2):\n    #c1 drums of grapes are filled in c2 days\n    #To find out how many drums of grapes are filled in each day, we need to divide the total number of drums by the number of days\n    drums_per_day = c1 / c2\n\n    return drums_per_day", "mapping": {"c0": 266.0, "c1": 90.0, "c2": 5.0}}
{"question": "Julia played tag with c0 kids on tuesday. She had played tag with c1 kids on monday.How many more kids did she play with on monday than on tuesday?", "answer": [1.0], "response": "def tag_difference(c0, c1):\n    #calculate the difference between the number of kids Julia played tag with on Monday and Tuesday\n    difference = c1 - c0\n    return difference", "mapping": {"c0": 5.0, "c1": 6.0}}
{"question": "Julia played tag with a total of c0 kids. She played with c1 kids on monday and yet with some more kids on tuesday.How many kids did she play with on tuesday?", "answer": [14.0], "response": "def tag_game(c0, c1):\n    # Julia played with c1 kids on Monday\n    # The remaining kids she played with on Tuesday can be calculated by subtracting c1 from the total number of kids\n    c2 = c0 - c1\n    return c2", "mapping": {"c0": 18.0, "c1": 4.0}}
{"question": "Jerry had c0 books and c1 action figures on a shelf in his room. Later he added c2 more action figures to the shelf.How many more action figures than books were on his shelf?", "answer": [3.0], "response": "def action_figures_more_than_books(c0, c1, c2):\n    #calculate the total number of items on the shelf after adding c2 action figures\n    total_items = c0 + c1 + c2\n\n    #calculate the difference between the number of action figures and books\n    difference = c1 + c2 - c0\n\n    return difference", "mapping": {"c0": 3.0, "c1": 4.0, "c2": 2.0}}
{"question": "There are c0 houses on a block. If a mailman has to give c1 pieces of junk mail to each blockHow many pieces of junk mail should he give in each house?", "answer": [4.0], "response": "def Problem(c0, c1):\n    #there are c0 houses on the block\n    houses = c0\n\n    #the mailman has to give c1 pieces of junk mail to each block\n    mail_per_block = c1\n\n    #to find out how many pieces of junk mail he should give in each house, we divide the total mail by the number of houses\n    mail_per_house = mail_per_block / houses\n\n    return mail_per_house", "mapping": {"c0": 6.0, "c1": 24.0}}
{"question": "Dave had c0 apps and c1 files on his phone. After deleting some apps and files he had c2 apps and c3 files left.How many more files than apps does he have left on the phone?", "answer": [9.0], "response": "def files_vs_apps(c0, c1, c2, c3):\n    #calculate the number of apps and files left after deleting some\n    apps_left = c2\n    files_left = c3\n\n    #calculate the number of apps and files deleted\n    apps_deleted = c0 - c2\n    files_deleted = c1 - c3\n\n    #calculate the difference between the number of files and apps left\n    diff = files_left - apps_left\n\n    return diff", "mapping": {"c0": 19.0, "c1": 18.0, "c2": 6.0, "c3": 15.0}}
{"question": "Baker made c0 cakes. He bought c1 new cakes and sold c2 cakes.How many more cakes did baker buy than those he sold?", "answer": [78.0], "response": "def cake_difference(c0, c1, c2):\n    #calculate the total number of cakes after buying c1 new cakes\n    total_cakes = c0 + c1\n    #calculate the difference between the total number of cakes and the number of cakes sold\n    difference = total_cakes - c2\n    #calculate the difference between the number of cakes bought and the number of cakes sold\n    bought_difference = c1 - c2\n    return bought_difference", "mapping": {"c0": 99.0, "c1": 167.0, "c2": 89.0}}
{"question": "c0 birds and c1 storks were sitting on the fence. c2 more storks came to join them.How many birds and storks are sitting on the fence?", "answer": [13.0], "response": "def birds_and_storks(c0, c1, c2):\n    #total number of birds and storks after c2 storks join\n    total_birds_and_storks = c0 + c1 + c2\n\n    return total_birds_and_storks", "mapping": {"c0": 3.0, "c1": 4.0, "c2": 6.0}}
{"question": "David did c0 push-ups in gym class today. David did c1 more push-ups than Zachary.How many push-ups did Zachary do?", "answer": [35.0], "response": "def zachary_pushups(c0, c1):\n    # David did c0 push-ups\n    david_pushups = c0\n\n    # David did c1 more push-ups than Zachary\n    zachary_pushups = c1 - david_pushups\n\n    return zachary_pushups", "mapping": {"c0": 44.0, "c1": 9.0}}
{"question": "Edward spent $ c0 to buy books and $ c1 to buy pens. Now he has $ 19.How much did Edward have before he spent his money?", "answer": [41.0], "response": "Let's think about it step by step:\n\ndef Edward_money(c0, c1):\n    #Edward spent c0 on books and c1 on pens\n    spent = c0 + c1\n\n    #Edward now has $19\n    remaining = 19\n\n    #The amount Edward had before spending his money can be calculated by adding the amount he spent to the amount he has remaining\n    total_money = spent + remaining\n\n    return total_money", "mapping": {"c0": 6.0, "c1": 16.0}}
{"question": "Bryan took a look at his books as well. Each bookshelf contains c0 books. If he has a total of c1 booksHow many bookshelves does he have?", "answer": [19.0], "response": "def bookshelves(c0, c1):\n    # each bookshelf contains c0 books\n    books_per_shelf = c0\n\n    # total number of books Bryan has is c1\n    total_books = c1\n\n    # number of bookshelves can be calculated by dividing total number of books by books per shelf\n    num_shelves = total_books // books_per_shelf\n\n    return num_shelves", "mapping": {"c0": 2.0, "c1": 38.0}}
{"question": "There were c0 roses in the vase. Jessica cut some more roses from her flower garden which had a total of c1 roses. There are now c2 roses in the vase.How many roses did she cut?", "answer": [13.0], "response": "def cut_roses(c0, c1, c2):\n    #calculate the number of roses Jessica cut by subtracting the original number of roses from the current number of roses in the vase\n    cut = c2 - c0\n    \n    return cut", "mapping": {"c0": 7.0, "c1": 59.0, "c2": 20.0}}
{"question": "Luke played a trivia game and gained c0 points in each round of a game. If he scored c1 points in the trivia gameHow many rounds did he play?", "answer": [26.0], "response": "def trivia_rounds(c0, c1):\n    # calculate the number of rounds played by dividing the total points by the points per round\n    rounds_played = c1 // c0\n    return rounds_played", "mapping": {"c0": 3.0, "c1": 78.0}}
{"question": "Baker made c0 cakes. He sold c1 of them and bought c2 new cakes.How many more cakes did baker buy than those he sold?", "answer": [63.0], "response": "def cake_difference(c0, c1, c2):\n    #calculate the number of cakes bought by subtracting the number sold from the number of new cakes\n    bought = c2 - c1\n    #calculate the difference between the number of cakes bought and sold\n    difference = bought - c1\n    return difference", "mapping": {"c0": 13.0, "c1": 91.0, "c2": 154.0}}
{"question": "He then went to see the oranges being harvested. He found out that they harvest c0 sacks of unripe oranges and c1 sacks of ripe oranges per day.How many more sacks of unripe oranges than ripe oranges are harvested per day?", "answer": [11.0], "response": "def oranges_harvested(c0, c1):\n    #calculate the difference between the number of unripe and ripe oranges harvested\n    difference = c0 - c1\n\n    return difference", "mapping": {"c0": 71.0, "c1": 60.0}}
{"question": "At the zoo, a cage had snakes and alligators. The total number of animals in the cage was c0. If c1 snakes and c2 alligators were hidingHow many animals were not hiding in all?", "answer": [4.0], "response": "def animals_not_hiding(c0, c1, c2):\n    #total number of animals in the cage\n    total_animals = c0\n\n    #number of snakes hiding\n    snakes_hiding = c1\n\n    #number of alligators hiding\n    alligators_hiding = c2\n\n    #number of animals not hiding can be calculated by subtracting the number of hiding animals from the total number of animals\n    not_hiding = total_animals - snakes_hiding - alligators_hiding\n\n    return not_hiding", "mapping": {"c0": 79.0, "c1": 24.0, "c2": 51.0}}
{"question": "Danny has c0 bottle caps in his collection. He found some more bottle caps at the park. If he has c1 bottle caps nowHow many bottle caps did he find at the park?", "answer": [32.0], "response": "def bottle_caps_found(c0, c1):\n    # Danny had c0 bottle caps before\n    # Now he has c1 bottle caps\n    # The difference between c1 and c0 is the number of bottle caps he found at the park\n    found = c1 - c0\n    return found", "mapping": {"c0": 21.0, "c1": 53.0}}
{"question": "Frank was reading through his favorite book. The book had c0 chapters each with c1 pages. It took frank c2 days to finish the book.How many chapters did he read per day?", "answer": [332.0], "response": "def chapters_per_day(c0, c1, c2):\n    #total number of pages in the book\n    total_pages = c0 * c1\n\n    #number of chapters in the book\n    total_chapters = c0\n\n    #number of days it took Frank to finish the book\n    days_taken = c2\n\n    #number of pages Frank read per day\n    pages_per_day = total_pages / days_taken\n\n    #number of chapters Frank read per day\n    chapters_per_day = total_chapters / days_taken\n\n    return chapters_per_day", "mapping": {"c0": 2.0, "c1": 405.0, "c2": 664.0}}
{"question": "There were c0 roses in the vase. Jessica threw away c1 roses from the vase and cut some more new roses from her flower garden to put in the vase. There are now c2 roses in the vase.How many roses did she cut?", "answer": [25.0], "response": "def roses_cut(c0, c1, c2):\n    #calculate the number of roses Jessica had before throwing any away\n    initial_roses = c0\n\n    #calculate the number of roses Jessica has after throwing some away and adding new ones\n    final_roses = c2\n\n    #calculate the number of roses Jessica threw away\n    thrown_away = c1\n\n    #calculate the number of roses Jessica cut from her garden\n    cut_roses = final_roses - initial_roses + thrown_away\n\n    return cut_roses", "mapping": {"c0": 2.0, "c1": 4.0, "c2": 23.0}}
{"question": "Rachel had to complete c0 pages of math homework, c1 pages of reading homework and c2 more pages of biology homework.How many pages of reading and biology homework did she have to complete?", "answer": [16.0], "response": "def homework_pages(c0, c1, c2):\n    # Rachel had to complete c1 pages of reading homework\n    reading_pages = c1\n\n    # Rachel had to complete c2 more pages of biology homework\n    biology_pages = c2\n\n    # The total pages of reading and biology homework Rachel had to complete can be calculated by adding c1 and c2\n    total_pages = reading_pages + biology_pages\n\n    return total_pages", "mapping": {"c0": 5.0, "c1": 10.0, "c2": 6.0}}
{"question": "Jerry had c0 action figures and c1 books on a shelf in his room. Later he added c2 more books to the shelf.How many more action figures than books were on his shelf?", "answer": [1.0], "response": "def action_figures_more_than_books(c0, c1, c2):\n    #calculate the total number of books on the shelf after adding c2 more books\n    total_books = c1 + c2\n\n    #calculate the difference between the number of action figures and the total number of books\n    difference = c0 - total_books\n\n    return difference", "mapping": {"c0": 7.0, "c1": 2.0, "c2": 4.0}}
{"question": "In a school there are c0 girls and c1 boys.How many more boys than girls does the school have?", "answer": [807.0], "response": "def boys_more_than_girls(c0, c1):\n    #calculate the difference between the number of boys and girls\n    difference = c1 - c0\n    \n    return difference", "mapping": {"c0": 34.0, "c1": 841.0}}
{"question": "Bobby ate some pieces of candy. Then he ate c0 more. If he ate a total of c1 pieces of candyHow many pieces of candy had he eaten at the start?", "answer": [18.0], "response": "def candy_start(c0, c1):\n    # Bobby ate c0 more pieces of candy after his initial consumption\n    initial = c1 - c0\n\n    return initial", "mapping": {"c0": 25.0, "c1": 43.0}}
{"question": "He then went to see the oranges being harvested. He found out that they harvest c0 sacks per day.How many days will it take to harvest c1 sacks of oranges?", "answer": [3.0], "response": "def harvest_days(c0, c1):\n    #calculate how many days it will take to harvest c1 sacks of oranges\n    days = c1 // c0\n\n    #if there are any remaining sacks to be harvested, add one more day\n    if c1 % c0 != 0:\n        days += 1\n\n    return days", "mapping": {"c0": 8.0, "c1": 24.0}}
{"question": "c0 campers went rowing in the morning c1 campers went rowing in the afternoon and c2 campers went rowing in the evening.How many more campers went rowing in the morning than in the evening?", "answer": [4.0], "response": "def rowing_difference(c0, c1, c2):\n    #calculate the number of campers who went rowing in the morning\n    morning = c0\n\n    #calculate the number of campers who went rowing in the evening\n    evening = c2\n\n    #calculate the difference between the number of campers who went rowing in the morning and evening\n    difference = morning - evening\n\n    return difference", "mapping": {"c0": 53.0, "c1": 48.0, "c2": 49.0}}
{"question": "Jack received c0 emails in the afternoon, c1 emails in the morning and c2 emails in the evening.How many more emails did Jack receive in the morning than in the afternoon?", "answer": [2.0], "response": "def morning_emails(c0, c1, c2):\n    #calculate the difference between morning and afternoon emails\n    difference = c1 - c0\n    return difference", "mapping": {"c0": 3.0, "c1": 5.0, "c2": 16.0}}
{"question": "Dan has $ c0. For a total of $ c1 he bought c2 candy bar each one costing the same amount of money.How much did each candy bar cost?", "answer": [2.0], "response": "def candy_bar_cost(c0, c1, c2):\n    # Dan has c0 dollars\n    dan_money = c0\n\n    # Dan spent c1 dollars in total\n    dan_spent = c1\n\n    # Dan bought c2 candy bars\n    candy_bars = c2\n\n    # The cost of each candy bar can be calculated by dividing the total amount spent by the number of candy bars bought\n    cost_per_bar = (dan_spent - dan_money) / candy_bars\n\n    return cost_per_bar", "mapping": {"c0": 3.0, "c1": 4.0, "c2": 2.0}}
{"question": "Rachel had to complete c0 pages of math homework and c1 pages of reading homework.How many more pages of reading homework than math homework did she have?", "answer": [1.0], "response": "def homework_difference(c0, c1):\n    #calculate the difference between the number of reading and math homework pages\n    difference = c1 - c0\n    return difference", "mapping": {"c0": 3.0, "c1": 4.0}}
{"question": "A book has c0 chapters. The first chapter is c1 pages long. The second chapter is c2 pages long.How many more pages does the second chapter have than the first chapter?", "answer": [43.0], "response": "def chapter_pages(c0, c1, c2):\n    #calculate the total number of pages in the book\n    total_pages = c1 + c2\n\n    #calculate the average number of pages per chapter\n    avg_pages = total_pages / c0\n\n    #calculate the number of pages in the first chapter\n    first_chapter_pages = avg_pages\n\n    #calculate the number of pages in the second chapter\n    second_chapter_pages = 2 * avg_pages - c1\n\n    #calculate the difference in pages between the two chapters\n    difference = second_chapter_pages - first_chapter_pages\n\n    return difference", "mapping": {"c0": 2.0, "c1": 37.0, "c2": 80.0}}
{"question": "There are c0 different movies and c1 different books in the ' crazy silly school ' series. If you read c2 of the books and watched c3 of the moviesHow many more movies do you still have to watch?", "answer": [4.0], "response": "def remaining_movies(c0, c1, c2, c3):\n    #calculate the number of movies already watched\n    watched_movies = c3\n\n    #calculate the total number of movies in the series\n    total_movies = c0\n\n    #calculate the number of movies left to watch\n    remaining_movies = total_movies - watched_movies\n\n    #subtract the number of books read from the remaining movies\n    remaining_movies -= (c1 - c2)\n\n    return remaining_movies", "mapping": {"c0": 8.0, "c1": 21.0, "c2": 7.0, "c3": 4.0}}
{"question": "Haley grew some trees in her backyard. After a typhoon c0 died. If c1 trees were leftHow many trees did she grow?", "answer": [17.0], "response": "def tree_growth(c0, c1):\n    # calculate the number of trees that died\n    died = c0 - c1\n    # calculate the number of trees that were originally grown\n    grown = c1 + died\n    return grown", "mapping": {"c0": 5.0, "c1": 12.0}}
{"question": "The Razorback shop makes $ c0 dollars off each t-shirt and $ c1 off each jersey. During the Arkansas and Texas tech game they sold c2 t-shirts and c3 jerseys.How much more does a t-shirt cost than a jersey?", "answer": [158.0], "response": "def tshirt_vs_jersey_cost(c0, c1, c2, c3):\n    #calculate the total revenue from t-shirts and jerseys\n    tshirt_revenue = c0 * c2\n    jersey_revenue = c1 * c3\n\n    #calculate the cost difference between a t-shirt and a jersey\n    cost_difference = c0 - c1\n\n    #calculate the average cost difference per item sold\n    average_cost_difference = cost_difference / (c2 + c3)\n\n    return average_cost_difference", "mapping": {"c0": 192.0, "c1": 34.0, "c2": 157.0, "c3": 19.0}}
{"question": "Helen the hippo and her friends are preparing for thanksgiving at Helen's house. Helen baked c0 chocolate chip cookies and c1 raisin cookies yesterday. And she baked c2 raisin cookies and c3 chocolate chip cookies this morning.How many chocolate chip cookies did Helen bake?", "answer": [1081.0], "response": "def chocolate_chip_cookies(c0, c1, c2, c3):\n    #Helen baked c0 chocolate chip cookies yesterday and c3 chocolate chip cookies this morning\n    chocolate_chip = c0 + c3\n\n    return chocolate_chip", "mapping": {"c0": 527.0, "c1": 86.0, "c2": 86.0, "c3": 554.0}}
{"question": "Marco and his dad went strawberry picking. Together they collected strawberries that weighed c0 pounds. On the way back Marco ' dad found c1 more pounds of strawberries. Marco's strawberries now weighed c2 pounds.How much did his dad's strawberries weigh now?", "answer": [16.0], "response": "def strawberry_weight(c0, c1, c2):\n    #total weight of strawberries collected by Marco and his dad\n    total_weight = c0 + c1\n\n    #weight of strawberries collected by Marco\n    marco_weight = c2\n\n    #weight of strawberries collected by dad can be calculated by subtracting Marco's weight from the total weight\n    dad_weight = total_weight - marco_weight\n\n    return dad_weight", "mapping": {"c0": 22.0, "c1": 30.0, "c2": 36.0}}
{"question": "c0 red peaches, and some more green peaches are in the basket. If there are c1 more green peaches than red peaches in the basketHow many green peaches are in the basket?", "answer": [13.0], "response": "def green_peaches(c0, c1):\n    #calculate the number of green peaches by adding the difference between c1 and c0 to c0\n    green = c0 + c1\n    return green", "mapping": {"c0": 3.0, "c1": 10.0}}
{"question": "After a typhoon, c0 trees in Haley's backyard died. If she had grown c1 trees initiallyHow many more trees died in the typhoon than those that survived?", "answer": [23.0], "response": "def typhoon_damage(c0, c1):\n    #calculate the number of trees that died in the typhoon\n    trees_died = c1 - c0\n\n    #calculate the number of trees that survived the typhoon\n    trees_survived = c0\n\n    #calculate the difference between the number of trees that died and the number of trees that survived\n    difference = trees_died - trees_survived\n\n    return difference", "mapping": {"c0": 13.0, "c1": 3.0}}
{"question": "Josh had c0 marbles in his collection. He lost some marbles. If he has c1 marbles nowHow many marbles did he lose?", "answer": [5.0], "response": "def lost_marbles(c0, c1):\n    # Josh had c0 marbles in his collection\n    initial_marbles = c0\n\n    # He now has c1 marbles\n    current_marbles = c1\n\n    # To find out how many marbles he lost, we subtract the current number of marbles from the initial number\n    lost = initial_marbles - current_marbles\n\n    return lost", "mapping": {"c0": 9.0, "c1": 4.0}}
{"question": "They decided to hold the party in their backyard. They have c0 chairs for each set of table. If they have c1 sets of tablesHow many more chairs than tables do they have?", "answer": [117.0], "response": "def chairs_vs_tables(c0, c1):\n    #calculate the total number of chairs\n    total_chairs = c0 * c1\n\n    #calculate the difference between the number of chairs and the number of tables\n    difference = total_chairs - c1\n\n    return difference", "mapping": {"c0": 14.0, "c1": 9.0}}
{"question": "He then went to see the oranges being harvested. He found out that they harvest c0 sacks per day.How many oranges do they harvest per day if each sack contains c1 oranges?", "answer": [1848.0], "response": "def oranges_per_day(c0, c1):\n    #each sack contains c1 oranges\n    oranges_per_sack = c1\n\n    #they harvest c0 sacks per day\n    sacks_per_day = c0\n\n    #the total number of oranges harvested per day can be calculated by multiplying the number of sacks by the number of oranges per sack\n    oranges_per_day = oranges_per_sack * sacks_per_day\n\n    return oranges_per_day", "mapping": {"c0": 66.0, "c1": 28.0}}
{"question": "At the arcade Dave had won some tickets. He used c0 tickets to buy some toys. If he still has c1 tickets leftHow many tickets did Dave win at the arcade?", "answer": [26.0], "response": "def arcade_tickets(c0, c1):\n    # Dave won c0 tickets and used some to buy toys\n    tickets_spent = c0\n\n    # Dave still has c1 tickets left\n    tickets_left = c1\n\n    # The total number of tickets Dave won can be calculated by adding the tickets he spent to the tickets he has left\n    total_tickets = tickets_spent + tickets_left\n\n    return total_tickets", "mapping": {"c0": 12.0, "c1": 14.0}}
{"question": "Adam could fit c0 action figures on each shelf in his room. His room has could hold c1 action figures.How many total shelves did his room have?", "answer": [80.0], "response": "def shelves(c0, c1):\n    #calculate the number of shelves by dividing the total number of action figures by the number of action figures that can fit on each shelf\n    num_shelves = c1 // c0\n    return num_shelves", "mapping": {"c0": 10.0, "c1": 8.0}}
{"question": "Marco and his dad went strawberry picking. Together they collected strawberries that weighed c0 pounds. On the way back Marco lost c1 pounds of strawberries. Marco's strawberries now weighed c2 pounds.How much did his dad's strawberries weigh?", "answer": [12.0], "response": "Let's think about it step by step:\n\ndef strawberry_weight(c0, c1, c2):\n    #total weight of strawberries collected by Marco and his dad\n    total_weight = c0\n\n    #weight of strawberries lost by Marco\n    lost_weight = c1\n\n    #weight of strawberries left with Marco after losing some\n    marco_weight = c2\n\n    #weight of strawberries collected by Marco's dad can be calculated by subtracting the weight lost by Marco from the total weight and then subtracting the weight left with Marco\n    dad_weight = total_weight - lost_weight - marco_weight\n\n    return dad_weight", "mapping": {"c0": 24.0, "c1": 9.0, "c2": 3.0}}
{"question": "Mary is baking a cake. The recipe calls for c0 cups of flour and c1 cups of sugar. She already put in c2 cups of sugar.How many more cups of sugar does she need to add?", "answer": [11.0], "response": "def sugar_needed(c0, c1, c2):\n    #calculate the total amount of sugar needed\n    total_sugar = c1\n\n    #subtract the amount of sugar already added\n    remaining_sugar = total_sugar - c2\n\n    return remaining_sugar", "mapping": {"c0": 12.0, "c1": 13.0, "c2": 2.0}}
{"question": "Winter is almost here and most animals are migrating to warmer countries. There are c0 bird families living near the mountain. If c1 bird families flew away to africa and c2 bird families flew away to asiaHow many more bird families flew away to asia than those that flew away to africa?", "answer": [47.0], "response": "def bird_migration(c0, c1, c2):\n    #calculate the total number of bird families that flew away\n    total_flew_away = c1 + c2\n\n    #calculate the difference between the number of bird families that flew to asia and those that flew to africa\n    difference = c2 - c1\n\n    return difference", "mapping": {"c0": 38.0, "c1": 47.0, "c2": 94.0}}
{"question": "Jake has c0 fewer peaches than Steven and c1 more peaches than Jill. Steven has c2 peaches.How many more peaches does Steven have than Jill?", "answer": [27.0], "response": "def peach_difference(c0, c1, c2):\n    # Jake has c0 fewer peaches than Steven\n    steven_peaches = c0 + c1\n\n    # Steven has c2 peaches\n    jill_peaches = steven_peaches - c2\n\n    # Calculate the difference between Steven's and Jill's peaches\n    difference = steven_peaches - jill_peaches\n\n    return difference", "mapping": {"c0": 9.0, "c1": 18.0, "c2": 16.0}}
{"question": "Zachary did c0 push-ups and David did c1 push-ups in gym class today.How many more push-ups did Zachary do than David?", "answer": [7.0], "response": "def pushup_difference(c0, c1):\n    #calculate the difference between the number of push-ups Zachary and David did\n    difference = c0 - c1\n    \n    #return the absolute value of the difference to ensure a positive result\n    return abs(difference)", "mapping": {"c0": 51.0, "c1": 44.0}}
{"question": "c0 people can ride the Ferris wheel in paradise park at the same time. If the Ferris wheel has c1 seatsHow many people can each seat hold?", "answer": [4.0], "response": "def FerrisWheel(c0, c1):\n    #each seat can hold c0 people\n    seats = c1\n\n    #calculate how many people each seat can hold by dividing the number of seats by the number of people that can ride at the same time\n    per_seat = c0 / seats\n\n    return per_seat", "mapping": {"c0": 16.0, "c1": 4.0}}
{"question": "Mary is baking a cake. The recipe calls for c0 cups of flour c1 cups of sugar and c2 cups of salt. She already put in c3 cups of flour.How many more cups of sugar than cups of salt does she need to add now?", "answer": [1.0], "response": "def sugar_vs_salt(c0, c1, c2, c3):\n    #calculate how much sugar is needed\n    sugar_needed = c1 - c3\n\n    #calculate how much salt is needed\n    salt_needed = c2\n\n    #calculate the difference between sugar and salt needed\n    difference = sugar_needed - salt_needed\n\n    return difference", "mapping": {"c0": 6.0, "c1": 8.0, "c2": 7.0, "c3": 5.0}}
{"question": "Paige raised c0 goldfish and c1 catfish in the pond but stray cats loved eating them. Now she has c2 left.How many goldfish disappeared?", "answer": [14.0], "response": "def lost_fish(c0, c1, c2):\n    #total number of fish before the cats ate some\n    total_fish = c0 + c1\n\n    #number of fish left after the cats ate some\n    remaining_fish = c2\n\n    #number of fish that were eaten by the cats\n    lost_fish = total_fish - remaining_fish\n\n    #number of goldfish that were eaten by the cats\n    lost_goldfish = lost_fish - c1\n\n    return lost_goldfish", "mapping": {"c0": 16.0, "c1": 71.0, "c2": 2.0}}
{"question": "Rachel picked c0 ripe apples from her tree. Now the tree has c1 apples still on it. If c2 of those are ripe and the rest are unripeHow many unripe apples does the tree have now?", "answer": [2.0], "response": "def unripe_apples(c0, c1, c2):\n    #calculate the total number of apples on the tree now\n    total_apples = c1 + c0\n\n    #calculate the number of unripe apples on the tree now\n    unripe_apples = total_apples - c2\n\n    return unripe_apples", "mapping": {"c0": 7.0, "c1": 5.0, "c2": 3.0}}
{"question": "Zachary did c0 push-ups in gym class today. David did c1 more push-ups than zachary.How many push-ups did Zachary and David do altogether?", "answer": [146.0], "response": "def push_ups_total(c0, c1):\n    # Zachary did c0 push-ups\n    zachary_push_ups = c0\n\n    # David did c1 more push-ups than Zachary\n    david_push_ups = c0 + c1\n\n    # Total push-ups done by both Zachary and David\n    total_push_ups = zachary_push_ups + david_push_ups\n\n    return total_push_ups", "mapping": {"c0": 44.0, "c1": 58.0}}
{"question": "If Lewis earns a total of $ c0 during c1 weeks of harvestHow much money does he earn each week?", "answer": [92.0], "response": "def weekly_earnings(c0, c1):\n    #calculate the average weekly earnings by dividing the total earnings by the number of weeks\n    weekly_earnings = c0 / c1\n    return weekly_earnings", "mapping": {"c0": 460.0, "c1": 5.0}}
{"question": "Because of the decision Sofia asked the students to suggest specific types of food. If c0 students suggested adding mashed potatoes c1 suggested adding bacon to the menu and c2 suggested adding tomatoesHow many more students suggested bacon than those that suggested tomatoes?", "answer": [314.0], "response": "def food_suggestion(c0, c1, c2):\n    #count the number of students who suggested bacon and tomatoes\n    bacon_count = c1\n    tomato_count = c2\n\n    #calculate the difference between the number of students who suggested bacon and tomatoes\n    difference = bacon_count - tomato_count\n\n    return difference", "mapping": {"c0": 228.0, "c1": 337.0, "c2": 23.0}}
{"question": "Edward spent $ c0 to buy books and $ c1 to buy pens. Now he has $ 12.How much did Edward spend on books and pens?", "answer": [7.0], "response": "def total_spent(c0, c1):\n    #calculate the total amount spent by adding the cost of books and pens\n    total = c0 + c1\n\n    #calculate the amount of money left after spending\n    remaining = 12 - total\n\n    #return a tuple with the amount spent on books and pens\n    return (c0, c1, remaining)", "mapping": {"c0": 4.0, "c1": 3.0}}
{"question": "Edward spent $ c0. Then he received $ c1 from his friend. Now he has $ 7.How much did Edward have before he spent his money?", "answer": [14.0], "response": "def edward_money(c0, c1):\n    # Edward spent c0 and received c1 from his friend\n    total_money = c0 + c1\n\n    # Now he has $7\n    final_money = 7\n\n    # To find out how much he had before spending his money, we need to subtract the money he spent and the money he received from his final amount\n    initial_money = final_money - total_money\n\n    return initial_money", "mapping": {"c0": 17.0, "c1": 10.0}}
{"question": "Julia played tag with c0 kids on monday, c1 kids on tuesday and c2 kids on wednesday.How many more kids did she play with on monday than on tuesday?", "answer": [2.0], "response": "def tag_game(c0, c1, c2):\n    #calculate the difference between the number of kids Julia played with on Monday and Tuesday\n    difference = c0 - c1\n    return difference", "mapping": {"c0": 9.0, "c1": 7.0, "c2": 96.0}}
{"question": "In a school there are c0 more girls than boys. If there are c1 girlsHow many boys are there in that school?", "answer": [337.0], "response": "def boys_in_school(c0, c1):\n    # number of girls in school\n    girls = c1\n\n    # number of boys in school can be calculated by subtracting c0 from the number of girls\n    boys = girls - c0\n\n    return boys", "mapping": {"c0": 402.0, "c1": 739.0}}
{"question": "For Gwen's birthday she received c0 dollars from her mom. Her dad gave her c1 more dollars. If she spent c2 dollars.How much money did she still have?", "answer": [3.0], "response": "def remaining_money(c0, c1, c2):\n    #calculate the total amount of money Gwen had\n    total_money = c0 + c1\n\n    #calculate the amount of money Gwen has left after spending c2 dollars\n    remaining_money = total_money - c2\n\n    return remaining_money", "mapping": {"c0": 2.0, "c1": 4.0, "c2": 3.0}}
{"question": "c0 red peaches, c1 yellow peaches and c2 green peaches are in the basket.How many red and green peaches are in the basket?", "answer": [22.0], "response": "def PeachCount(c0, c1, c2):\n    #the number of red peaches is c0\n    red_peaches = c0\n\n    #the number of green peaches is c2\n    green_peaches = c2\n\n    #return the number of red and green peaches as a tuple\n    return (red_peaches, green_peaches)", "mapping": {"c0": 6.0, "c1": 90.0, "c2": 16.0}}
{"question": "Randy has c0 blocks. He uses c1 blocks to build a tower and c2 blocks to build a house.How many more blocks did he use to build the tower than he did to build the house?", "answer": [20.0], "response": "def block_difference(c0, c1, c2):\n    #calculate the number of blocks used for the tower\n    tower_blocks = c1\n\n    #calculate the number of blocks used for the house\n    house_blocks = c2\n\n    #calculate the difference between the number of blocks used for the tower and the house\n    difference = tower_blocks - house_blocks\n\n    return difference", "mapping": {"c0": 37.0, "c1": 33.0, "c2": 13.0}}
{"question": "The Razorback shop makes $ c0 dollars off each jersey and $ c1 off each t-shirt. During the Arkansas and Texas tech game they sold c2 t-shirts and c3 jerseys.How much money did they make from selling the jerseys?", "answer": [152.0], "response": "def jersey_profit(c0, c1, c2, c3):\n    #calculate the total profit from selling jerseys\n    jersey_profit = c3 * c0\n\n    return jersey_profit", "mapping": {"c0": 76.0, "c1": 204.0, "c2": 158.0, "c3": 2.0}}
{"question": "Baker made c0 cakes. He bought c1 new cakes and sold c2 cakes.How many more cakes did baker sell than those he bought?", "answer": [6.0], "response": "def cake_sales(c0, c1, c2):\n    # Baker made c0 cakes\n    cakes_made = c0\n\n    # Baker bought c1 new cakes\n    cakes_bought = c1\n\n    # Baker sold c2 cakes\n    cakes_sold = c2\n\n    # Calculate the difference between cakes sold and cakes bought\n    difference = cakes_sold - cakes_bought\n\n    return difference", "mapping": {"c0": 8.0, "c1": 139.0, "c2": 145.0}}
{"question": "Jack received c0 emails and c1 letters in the morning. He then received c2 emails and c3 letters in the afternoon.How many more letters did Jack receive in the morning than in the afternoon?", "answer": [1.0], "response": "def letter_difference(c0, c1, c2, c3):\n    #calculate the total number of letters received in the morning\n    morning_letters = c1\n\n    #calculate the total number of letters received in the afternoon\n    afternoon_letters = c3\n\n    #calculate the difference between the two\n    letter_diff = morning_letters - afternoon_letters\n\n    return letter_diff", "mapping": {"c0": 6.0, "c1": 8.0, "c2": 2.0, "c3": 7.0}}
{"question": "Jake has c0 fewer peaches and c1 more apples than Steven. Steven has c2 peaches and c3 apples.How many more apples than peaches does Steven have?", "answer": [3.0], "response": "def apple_peach_difference(c0, c1, c2, c3):\n    # Jake has c0 fewer peaches than Steven\n    jake_peaches = c2 - c0\n\n    # Jake has c1 more apples than Steven\n    jake_apples = c3 + c1\n\n    # Steven has c2 peaches and c3 apples\n    steven_peaches = c2\n    steven_apples = c3\n\n    # Calculate the difference between Steven's apples and peaches\n    apple_peach_diff = steven_apples - steven_peaches\n\n    return apple_peach_diff", "mapping": {"c0": 3.0, "c1": 10.0, "c2": 12.0, "c3": 15.0}}
{"question": "Rachel had to complete c0 pages of math homework and c1 pages of reading homework.How many more pages of math homework than reading homework did she have?", "answer": [3.0], "response": "def homework_diff(c0, c1):\n    #calculate the difference between the number of pages of math homework and reading homework\n    diff = c0 - c1\n    return diff", "mapping": {"c0": 5.0, "c1": 2.0}}
{"question": "Frank was reading through his favorite book. The book had c0 chapters, each with the same number of pages. It has a total of c1 pages. It took Frank c2 days to finish the book.How many pages did he read per day?", "answer": [15.0], "response": "def pages_per_day(c0, c1, c2):\n    #calculate the total number of pages read\n    total_pages_read = c0 * c1\n\n    #calculate the number of pages read per day\n    pages_per_day = total_pages_read / c2\n\n    return pages_per_day", "mapping": {"c0": 41.0, "c1": 450.0, "c2": 30.0}}
{"question": "Jesse's room is c0 feet wide and c1 feet long.How much longer is her room than it is wide?", "answer": [1.0], "response": "def room_length_difference(c0, c1):\n    #calculate the difference between the length and width of the room\n    difference = c1 - c0\n    return difference", "mapping": {"c0": 19.0, "c1": 20.0}}
{"question": "Frank was reading through some books. Each book had c0 pages and it took Frank c1 days to finish each book.How many pages did he read per day?", "answer": [83.0], "response": "def pages_per_day(c0, c1):\n    #calculate the total number of pages read\n    total_pages = c0\n\n    #calculate the total number of days it took to read the book\n    total_days = c1\n\n    #calculate the average number of pages read per day\n    pages_per_day = total_pages / total_days\n\n    return pages_per_day", "mapping": {"c0": 249.0, "c1": 3.0}}
{"question": "Paul got a box of c0 crayons and c1 erasers for his birthday. At the end of the school year he only had c2 crayons left while not having lost a single eraser.How many more erasers than crayons did he have left?", "answer": [70.0], "response": "def erasers_more_than_crayons(c0, c1, c2):\n    #calculate how many crayons Paul used during the school year\n    used_crayons = c0 - c2\n\n    #calculate how many erasers Paul has left\n    left_erasers = c1\n\n    #calculate the difference between the number of left erasers and used crayons\n    difference = left_erasers - used_crayons\n\n    return difference", "mapping": {"c0": 601.0, "c1": 406.0, "c2": 336.0}}
{"question": "The ring toss game at the carnival made c0 dollars in the first c1 days and c2 dollars in the remaining c3 days.How much did they make per day in the first c4 days at the carnival?", "answer": [6.0], "response": "def carnival_income(c0, c1, c2, c3, c4):\n    #calculate the total income\n    total_income = c0 + c2\n\n    #calculate the number of days in the first period\n    days_first_period = c1\n\n    #calculate the number of days in the second period\n    days_second_period = c3\n\n    #calculate the total number of days\n    total_days = days_first_period + days_second_period\n\n    #calculate the income per day in the first period\n    income_per_day_first_period = c0 / c1\n\n    #calculate the income per day in the second period\n    income_per_day_second_period = c2 / c3\n\n    #calculate the income per day in the first c4 days\n    income_per_day_first_c4_days = (c0 / c1) * c4\n\n    return income_per_day_first_c4_days", "mapping": {"c0": 120.0, "c1": 20.0, "c2": 66.0, "c3": 16.0, "c4": 20.0}}
{"question": "Mary is baking a cake. The recipe calls for c0 cups of sugar and c1 cups of flour. She already put in c2 cups of flour.How many more cups of sugar than cups of flour does she need to add now?", "answer": [2.0], "response": "def sugar_flour_difference(c0, c1, c2):\n    #calculate how much more flour is needed\n    flour_needed = c1 - c2\n\n    #calculate how much more sugar is needed\n    sugar_needed = c0 - flour_needed\n\n    #calculate the difference between the amount of sugar and flour needed\n    difference = sugar_needed - flour_needed\n\n    return difference", "mapping": {"c0": 5.0, "c1": 14.0, "c2": 11.0}}
{"question": "Emily is making bead necklaces for her c0 friends. She made c1 necklaces and each necklace takes c2 beads.How many beads did Emily have?", "answer": [52.0], "response": "def calculate_beads(c0, c1, c2):\n    # Emily made c1 necklaces for her c0 friends\n    total_necklaces = c0 * c1\n\n    # Each necklace takes c2 beads\n    total_beads = total_necklaces * c2\n\n    return total_beads", "mapping": {"c0": 44.0, "c1": 26.0, "c2": 2.0}}
{"question": "Melissa scored a total of c0 points playing some games. Is she scored c1 points in each game.How many games did she play?", "answer": [3.0], "response": "def games_played(c0, c1):\n    # calculate the number of games played by dividing the total points by the points scored in each game\n    games = c0 // c1\n    return games", "mapping": {"c0": 21.0, "c1": 7.0}}
{"question": "Adam has c0 apples. Jackie has c1 apples.How many more apples does Adam have than Jackie?", "answer": [8.0], "response": "def apple_difference(c0, c1):\n    #calculate the difference between the number of apples Adam and Jackie have\n    difference = c0 - c1\n    return difference", "mapping": {"c0": 10.0, "c1": 2.0}}
{"question": "Debby bought c0 water bottles and c1 soda bottles when they were on sale. If she drank c2 water bottles and c3 soda bottles a dayHow many days would the soda bottles last?", "answer": [64.0], "response": "def soda_days(c0, c1, c2, c3):\n    #calculate the total number of soda bottles Debby has\n    total_soda = c1\n\n    #calculate the total number of soda bottles Debby drinks per day\n    daily_soda = c3\n\n    #calculate the number of days the soda bottles will last\n    soda_days = (total_soda / daily_soda)\n\n    return soda_days", "mapping": {"c0": 200.0, "c1": 256.0, "c2": 312.0, "c3": 4.0}}
{"question": "Jerry had c0 action figures and c1 books on a shelf in his room. Later he added c2 more books to the shelf.How many more books than action figures were on his shelf?", "answer": [6.0], "response": "def book_difference(c0, c1, c2):\n    #calculate the total number of books on the shelf\n    total_books = c1 + c2\n\n    #calculate the difference between the total number of books and the number of action figures\n    difference = total_books - c0\n\n    return difference", "mapping": {"c0": 5.0, "c1": 2.0, "c2": 9.0}}
{"question": "Robin's hair was c0 inches long. If he grew c1 more inchesHow long is his hair now?", "answer": [37.0], "response": "def hair_length(c0, c1):\n    # add the length he grew to his original length\n    new_length = c0 + c1\n    return new_length", "mapping": {"c0": 19.0, "c1": 18.0}}
{"question": "Danny collects bottle caps and wrappers. He found c0 wrappers and c1 bottle caps at the park. Now he has c2 bottle caps and c3 wrappers in his collection.How many bottle caps did danny have at first?", "answer": [13.0], "response": "def DannyCaps(c0, c1, c2, c3):\n    # Danny found c0 wrappers and c1 bottle caps at the park\n    wrappers_found = c0\n    caps_found = c1\n\n    # Now he has c2 bottle caps and c3 wrappers in his collection\n    total_caps = c2\n    total_wrappers = c3\n\n    # Danny can trade in wrappers for bottle caps. Each trade gives him one bottle cap\n    # He needs to calculate how many bottle caps he got from trading in wrappers\n    traded_caps = (total_wrappers //  wrappers_found) * caps_found\n\n    # The total number of bottle caps he had at first is the sum of the bottle caps he found and the bottle caps he got from trading in wrappers\n    initial_caps = caps_found + traded_caps\n\n    return initial_caps", "mapping": {"c0": 82.0, "c1": 29.0, "c2": 42.0, "c3": 61.0}}
{"question": "If you had c0 bags with equal number of cookies and c1 cookies in totalHow many cookies does each bag have?", "answer": [9.0], "response": "def cookies_per_bag(c0, c1):\n    #calculate the number of cookies per bag by dividing the total number of cookies by the number of bags\n    cookies_per_bag = c1 // c0\n    return cookies_per_bag", "mapping": {"c0": 4.0, "c1": 36.0}}
{"question": "White t - shirts can be purchased in packages of c0. If mom buys c1 white t - shirtsHow many packages will she have?", "answer": [3.0], "response": "def Packages(c0, c1):\n    #calculate the number of packages by dividing the total number of t-shirts by the number of t-shirts in each package\n    packages = c1 // c0\n\n    return packages", "mapping": {"c0": 13.0, "c1": 39.0}}
{"question": "In a school there are c0 girls and c1 boys. c2 more girls joined the school.How many pupils are there in the school now?", "answer": [1346.0], "response": "def school_pupils(c0, c1, c2):\n    #total number of girls in the school\n    girls = c0 + c2\n\n    #total number of boys in the school\n    boys = c1\n\n    #total number of pupils in the school\n    pupils = girls + boys\n\n    return pupils", "mapping": {"c0": 706.0, "c1": 222.0, "c2": 418.0}}
{"question": "For the walls of the house John would use large planks of wood. Each plank needs c0 pieces of nails to be secured and he would use c1 planks.How many nails does John need for the house wall?", "answer": [32.0], "response": "def calculate_nails(c0, c1):\n    # Each plank needs c0 pieces of nails\n    nails_per_plank = c0\n\n    # John would use c1 planks\n    total_planks = c1\n\n    # Total number of nails needed can be calculated by multiplying nails per plank with total planks\n    total_nails = nails_per_plank * total_planks\n\n    return total_nails", "mapping": {"c0": 2.0, "c1": 16.0}}
{"question": "At the arcade Dave had won c0 tickets. If he used c1 to buy some toys and c2 more to buy some clothesHow many more tickets did Dave use to buy clothes than he did to buy toys?", "answer": [10.0], "response": "def tickets_used(c0, c1, c2):\n    # Dave had c0 tickets\n    tickets_before = c0\n\n    # Dave used c1 tickets to buy toys\n    toys_tickets = c1\n\n    # Dave used c2 more tickets to buy clothes\n    clothes_tickets = c2\n\n    # Calculate the difference between the tickets used for clothes and toys\n    difference = clothes_tickets - toys_tickets\n\n    return difference", "mapping": {"c0": 13.0, "c1": 8.0, "c2": 18.0}}
{"question": "Marco and his dad went strawberry picking. Together their strawberries weighed c0 pounds. Marco's strawberries weighed c1 pounds.How much more did his dad's strawberries weigh than his?", "answer": [9.0], "response": "def strawberry_weight(c0, c1):\n    #total weight of strawberries picked\n    total_weight = c0\n\n    #weight of Marco's strawberries\n    marco_weight = c1\n\n    #weight of dad's strawberries can be calculated by subtracting Marco's weight from the total weight\n    dad_weight = total_weight - marco_weight\n\n    #difference in weight between dad's and Marco's strawberries\n    weight_difference = dad_weight - marco_weight\n\n    return weight_difference", "mapping": {"c0": 35.0, "c1": 13.0}}
{"question": "An industrial machine can make c0 shirts a minute. It made c1 shirts yesterday and c2 shirts today.How many minutes did the machine work in all?", "answer": [4.0], "response": "def machine_work_time(c0, c1, c2):\n    #calculate the total number of shirts made\n    total_shirts = c1 + c2\n\n    #calculate the total time the machine worked by dividing the total number of shirts made by the rate of shirts made per minute\n    total_time = total_shirts / c0\n\n    return total_time", "mapping": {"c0": 3.0, "c1": 4.0, "c2": 8.0}}
{"question": "c0 red peaches, c1 yellow peaches and c2 green peaches are in the basket.How many more red peaches than yellow peaches are in the basket?", "answer": [8.0], "response": "def peach_difference(c0, c1, c2):\n    #calculate the difference between the number of red and yellow peaches\n    red_yellow_diff = c0 - c1\n    \n    return red_yellow_diff", "mapping": {"c0": 19.0, "c1": 11.0, "c2": 12.0}}
{"question": "For Gwen's birthday she received c0 dollars from her mom. Her dad gave her c1 more dollars. If she spent c2 dollars.How much more money did she receive from her mom than she did from her dad?", "answer": [3.0], "response": "def birthday_money(c0, c1, c2):\n    #calculate total money received\n    total_money = c0 + c1\n\n    #calculate how much money is left after spending\n    money_left = total_money - c2\n\n    #calculate the difference between money received from mom and dad\n    difference = c0 - c1\n\n    #if the difference is positive, mom gave more money. If it's negative, dad gave more money.\n    if difference > 0:\n        return difference\n    else:\n        return abs(difference)", "mapping": {"c0": 8.0, "c1": 5.0, "c2": 4.0}}
{"question": "The ring toss game at the carnival made the same amount of money each day. In total in c0 days they earned c1 dollars. Together with game they earned c2 dollars.How much did ring toss game make per day?", "answer": [14.0], "response": "def ring_toss_game(c0, c1, c2):\n    #calculate the amount earned from the ring toss game alone\n    ring_toss_earnings = c1 - c2\n    \n    #calculate the amount earned per day\n    earnings_per_day = ring_toss_earnings / c0\n    \n    return earnings_per_day", "mapping": {"c0": 30.0, "c1": 420.0, "c2": 22.0}}
{"question": "Dave had c0 apps and c1 files on his phone. After deleting some apps and files he had c2 apps and c3 files left.How many apps did he delete?", "answer": [11.0], "response": "def apps_deleted(c0, c1, c2, c3):\n    #calculate the number of apps and files before and after deleting\n    apps_before = c0\n    files_before = c1\n    apps_after = c2\n    files_after = c3\n\n    #calculate the number of apps deleted by subtracting the number of apps before from the number of apps after\n    apps_deleted = apps_before - apps_after\n\n    return apps_deleted", "mapping": {"c0": 16.0, "c1": 77.0, "c2": 5.0, "c3": 23.0}}
{"question": "Paco had c0 sweet cookies and c1 salty cookies. He ate c2 salty cookies and c3 sweet cookies.How many more sweet cookies than salty cookies did he eat?", "answer": [9.0], "response": "def cookie_difference(c0, c1, c2, c3):\n    #calculate how many sweet and salty cookies Paco has left after eating some\n    sweet_left = c0 - c3\n    salty_left = c1 - c2\n\n    #calculate the difference between the number of sweet and salty cookies Paco ate\n    difference = sweet_left - salty_left\n\n    return difference", "mapping": {"c0": 39.0, "c1": 6.0, "c2": 23.0, "c3": 32.0}}
{"question": "Haley grew c0 trees in her backyard. After a typhoon c1 died.How many more trees survived the typhoon than those that died?", "answer": [1.0], "response": "def typhoon(c0, c1):\n    #number of trees that survived the typhoon\n    survived = c0 - c1\n\n    #number of trees that died in the typhoon\n    died = c1\n\n    #difference between the number of trees that survived and the number that died\n    difference = survived - died\n\n    return difference", "mapping": {"c0": 13.0, "c1": 6.0}}
{"question": "Julia played tag with c0 kids on monday. She played tag with c1 kids on tuesday.How many more kids did she play with on monday than on tuesday?", "answer": [8.0], "response": "def tag_difference(c0, c1):\n    #calculate the difference between the number of kids Julia played tag with on Monday and Tuesday\n    difference = c0 - c1\n    return difference", "mapping": {"c0": 18.0, "c1": 10.0}}
{"question": "Kelly has c0 nintendo games and c1 sony games.How many sony games does she need to give away so that she will have c2 sony games left?", "answer": [101.0], "response": "def SonyGames(c0, c1, c2):\n    #Kelly has c1 sony games initially\n    sony_before = c1\n\n    #Kelly wants to have c2 sony games left\n    sony_after = c2\n\n    #Kelly needs to give away some sony games to reach her goal\n    sony_given_away = sony_before - sony_after\n\n    return sony_given_away", "mapping": {"c0": 46.0, "c1": 132.0, "c2": 31.0}}
{"question": "c0 red peaches and c1 green peaches are in the basket.How many more green peaches than red peaches are in the basket?", "answer": [6.0], "response": "def peach_difference(c0, c1):\n    #calculate the difference between the number of green and red peaches\n    difference = c1 - c0\n    \n    return difference", "mapping": {"c0": 5.0, "c1": 11.0}}
{"question": "Nell collects baseball cards. She gave c0 of her cards to Jeff and now has c1 cards left..How many cards did Nell have initially?", "answer": [455.0], "response": "def initial_cards(c0, c1):\n    # Nell gave c0 cards to Jeff and now has c1 cards left\n    # We can calculate the initial number of cards by adding the cards Nell gave away to the cards she has left\n    initial = c0 + c1\n    return initial", "mapping": {"c0": 301.0, "c1": 154.0}}
{"question": "Julia played tag with c0 kids on monday, c1 kids on tuesday and c2 kids on wednesday.How many kids did she play with on monday and tuesday?", "answer": [33.0], "response": "def Problem(c0, c1, c2):\n    #Julia played with c0 kids on Monday\n    kids_on_monday = c0\n\n    #Julia played with c1 kids on Tuesday\n    kids_on_tuesday = c1\n\n    #To find out how many kids she played with on Monday and Tuesday, we add the number of kids she played with on both days\n    total_kids_on_monday_and_tuesday = kids_on_monday + kids_on_tuesday\n\n    return total_kids_on_monday_and_tuesday", "mapping": {"c0": 15.0, "c1": 18.0, "c2": 97.0}}
{"question": "Rachel had to complete c0 pages of math homework, c1 pages of reading homework and c2 more pages of biology homework.How many more pages of math homework than reading homework did she have?", "answer": [7.0], "response": "def math_vs_reading(c0, c1, c2):\n    #calculate the total number of pages of math homework\n    math_pages = c0\n\n    #calculate the total number of pages of reading homework\n    reading_pages = c1\n\n    #calculate the difference between the number of pages of math and reading homework\n    difference = math_pages - reading_pages\n\n    return difference", "mapping": {"c0": 9.0, "c1": 2.0, "c2": 96.0}}
{"question": "c0 campers went rowing in the morning c1 campers went rowing in the afternoon and c2 campers went rowing in the evening.How many campers went rowing in all?", "answer": [98.0], "response": "def total_campers(c0, c1, c2):\n    #add up the number of campers who went rowing in the morning, afternoon, and evening\n    total = c0 + c1 + c2\n    return total", "mapping": {"c0": 36.0, "c1": 13.0, "c2": 49.0}}
{"question": "Josh had c0 marbles in his collection. He lost c1 marbles and found c2 new ones.How many more marbles did he lose than those he found?", "answer": [8.0], "response": "def marbles_lost(c0, c1, c2):\n    #calculate the total number of marbles after losing and finding\n    total_marbles = c0 - c1 + c2\n    \n    #calculate the difference between the number of marbles lost and found\n    difference = c1 - c2\n    \n    #calculate how many more marbles were lost than found\n    more_lost = abs(difference)\n    \n    return more_lost", "mapping": {"c0": 4.0, "c1": 16.0, "c2": 8.0}}
{"question": "Danny collects bottle caps and wrappers. He found c0 bottle caps and c1 wrappers at the park. Now he has c2 bottle caps and c3 wrappers in his collection.How many more wrappers than bottle caps did danny find at the park?", "answer": [17.0], "response": "def wrapper_difference(c0, c1, c2, c3):\n    #calculate the number of bottle caps and wrappers Danny found at the park\n    found_caps = c2 - c0\n    found_wrappers = c3 - c1\n\n    #calculate the difference between the number of wrappers and bottle caps found\n    wrapper_diff = found_wrappers - found_caps\n\n    return wrapper_diff", "mapping": {"c0": 11.0, "c1": 28.0, "c2": 68.0, "c3": 51.0}}
{"question": "Dave had c0 files and c1 apps on his phone. After deleting some apps and files he had c2 apps and c3 files left.How many apps did he delete?", "answer": [3.0], "response": "def deleted_apps(c0, c1, c2, c3):\n    # Dave had c0 files and c1 apps on his phone\n    files_before = c0\n    apps_before = c1\n\n    # After deleting some apps and files he had c2 apps and c3 files left\n    files_after = c3\n    apps_after = c2\n\n    # The number of apps he deleted can be calculated by subtracting the number of apps afterward from the original number of apps\n    deleted_apps = apps_before - apps_after\n\n    return deleted_apps", "mapping": {"c0": 59.0, "c1": 15.0, "c2": 12.0, "c3": 30.0}}
{"question": "Paul had c0 books. After selling some in a garage sale he bought c1 new ones. If he has c2 books nowHow many more books did he buy than he sold?", "answer": [45.0], "response": "def book_difference(c0, c1, c2):\n    #calculate how many books Paul sold\n    sold = c0 - c2 + c1\n    #calculate how many books Paul bought\n    bought = c1 - sold\n    #calculate the difference between the number of books bought and sold\n    difference = bought - sold\n    return difference", "mapping": {"c0": 71.0, "c1": 38.0, "c2": 116.0}}
{"question": "Allan brought c0 balloons and c1 balls while Jake brought c2 balloons and c3 balls to the park.How many balls did Allan and Jake have in the park?", "answer": [9.0], "response": "def total_balls(c0, c1, c2, c3):\n    #calculate the total number of balls by adding the number of balls brought by Allan and Jake\n    total_balls = c1 + c3\n    return total_balls", "mapping": {"c0": 7.0, "c1": 5.0, "c2": 6.0, "c3": 4.0}}
{"question": "You have c0 dollars.How many packs of dvds can you buy if each pack costs c1 dollars?", "answer": [4.0], "response": "def buy_dvds(c0, c1):\n    #calculate how many packs of dvds can be bought by dividing the total amount of money by the cost of each pack\n    packs = c0 // c1\n    return packs", "mapping": {"c0": 104.0, "c1": 26.0}}
{"question": "Kelly has c0 nintendo games and c1 sony games.How many nintendo games does she need to give away so that she will have c2 nintendo games left?", "answer": [8.0], "response": "def nintendo_games_left(c0, c1, c2):\n    #calculate how many nintendo games Kelly currently has\n    nintendo_games = c0\n\n    #calculate how many nintendo games Kelly will have after giving away some\n    nintendo_games_left = c2\n\n    #calculate how many nintendo games Kelly needs to give away\n    nintendo_games_given_away = nintendo_games - nintendo_games_left + c1\n\n    return nintendo_games_given_away", "mapping": {"c0": 20.0, "c1": 70.0, "c2": 12.0}}
{"question": "Julia played tag with c0 kids on monday. She played tag with c1 kids on tuesday.How many more kids did she play with on tuesday than on monday?", "answer": [1.0], "response": "def tag_difference(c0, c1):\n    #calculate the difference between the number of kids Julia played tag with on Tuesday and Monday\n    difference = c1 - c0\n    return difference", "mapping": {"c0": 11.0, "c1": 12.0}}
{"question": "Tiffany was collecting cans for recycling. On monday she had c0 bags of cans. The next day she found c1 more bags worth of cans.How many more bags did she have on monday than she found on the next day?", "answer": [1.0], "response": "def cans_difference(c0, c1):\n    #calculate the total number of bags of cans on Monday\n    monday_total = c0\n    #calculate the total number of bags of cans on Tuesday\n    tuesday_total = c0 + c1\n    #calculate the difference between the two totals\n    difference = monday_total - tuesday_total\n    #return the difference\n    return difference", "mapping": {"c0": 8.0, "c1": 7.0}}
{"question": "There are c0 skittles in Steven's skittles collection. Steven also has c1 erasers. If the erasers are organized into c2 groupsHow big is each group?", "answer": [10.0], "response": "def group_size(c0, c1, c2):\n    #calculate the total number of erasers\n    total_erasers = c1 * c2\n\n    #calculate the number of skittles per group\n    skittles_per_group = (c0 - total_erasers) / c2\n\n    return skittles_per_group", "mapping": {"c0": 3941.0, "c1": 4950.0, "c2": 495.0}}
{"question": "Because of the decision Sofia asked the students to suggest specific types of food. c0 students suggested adding mashed potatoes while others suggested adding bacon to the menu. If c1 more students suggested adding mashed potatoes than those that suggested baconHow many students suggested bacon?", "answer": [394.0], "response": "def Problem(c0, c1):\n    #number of students who suggested adding mashed potatoes\n    mashed_potatoes = c0\n\n    #number of students who suggested adding bacon\n    bacon = (c0 - c1)\n\n    return bacon", "mapping": {"c0": 457.0, "c1": 63.0}}
{"question": "The Razorback t-shirt shop sells each t-shirt for $ c0 dollars. During the Arkansas and Texas tech game they offered a discount of $ c1 per t-shirt and sold c2 t-shirts.How much money did they make from selling the t-shirts?", "answer": [5590.0], "response": "def tshirt_sales(c0, c1, c2):\n    #calculate the original price of each t-shirt\n    original_price = c0\n\n    #calculate the discount per t-shirt\n    discount = c1\n\n    #calculate the number of t-shirts sold\n    num_sold = c2\n\n    #calculate the total revenue from selling the t-shirts\n    revenue = (original_price - discount) * num_sold\n\n    return revenue", "mapping": {"c0": 51.0, "c1": 8.0, "c2": 130.0}}
{"question": "c0 storks and c1 birds were sitting on the fence. c2 more birds came to join them.How many more birds than storks are sitting on the fence?", "answer": [2.0], "response": "def fence_birds(c0, c1, c2):\n    #total number of birds after c2 more birds join\n    total_birds = c1 + c2\n    #calculate the difference between total birds and storks\n    diff = total_birds - c0\n    return diff", "mapping": {"c0": 5.0, "c1": 3.0, "c2": 4.0}}
{"question": "Matthew had c0 crackers and c1 cakes. If Matthew gave equal numbers of crackers and cakes to his c2 friendsHow many cakes did each person eat?", "answer": [15.0], "response": "def equal_distribution(c0, c1, c2):\n    #calculate the total number of items to be distributed\n    total_items = c0 + c1\n    #calculate the number of items each person will get\n    items_per_person = total_items // c2\n    #calculate the number of cakes each person will get\n    cakes_per_person = c1 // items_per_person\n    return cakes_per_person", "mapping": {"c0": 29.0, "c1": 30.0, "c2": 2.0}}
{"question": "There were c0 roses in the vase. Jessica cut c1 more roses from her flower garden and put them in the vase.How many roses are there in the vase now?", "answer": [18.0], "response": "def roses_in_vase(c0, c1):\n    #initial number of roses in the vase\n    initial_roses = c0\n\n    #number of roses Jessica cut from her garden\n    cut_roses = c1\n\n    #total number of roses in the vase now\n    total_roses = initial_roses + cut_roses\n\n    return total_roses", "mapping": {"c0": 10.0, "c1": 8.0}}
{"question": "Frank was reading through his favorite book. The book had c0 pages equally distributed over c1 chapters. It took Frank c2 days to finish the book.How many pages are in each chapter?", "answer": [111.0], "response": "def pages_per_chapter(c0, c1, c2):\n    #calculate the total number of pages in the book\n    total_pages = c0\n    #calculate the total number of chapters in the book\n    total_chapters = c1\n    #calculate the number of days it took Frank to finish the book\n    days_to_finish = c2\n    #calculate the average number of pages Frank read per day\n    pages_per_day = total_pages / days_to_finish\n    #calculate the average number of pages per chapter\n    pages_per_chapter = pages_per_day / total_chapters\n    return pages_per_chapter", "mapping": {"c0": 555.0, "c1": 5.0, "c2": 220.0}}
{"question": "Paco had c0 sweet cookies and c1 salty cookies. He ate c2 sweet cookies and c3 salty cookies.How many sweet cookies did Paco have left?", "answer": [7.0], "response": "def remaining_cookies(c0, c1, c2, c3):\n    #calculate the number of sweet cookies left after Paco ate some\n    sweet_left = c0 - c2\n\n    return sweet_left", "mapping": {"c0": 22.0, "c1": 75.0, "c2": 15.0, "c3": 54.0}}
{"question": "Mary is baking a cake. The recipe calls for c0 cups of flour and c1 cups of sugar. She already put in c2 cups of flour and c3 cups of sugar.How many more cups of flour does she need to add?", "answer": [6.0], "response": "def flour_needed(c0, c2):\n    #c0 cups of flour are needed in total\n    #c2 cups of flour have already been added\n    #the difference between the two is how much more flour is needed\n    return c0 - c2", "mapping": {"c0": 9.0, "c1": 5.0, "c2": 3.0, "c3": 62.0}}
{"question": "Each pack of dvds costs c0 dollars. If there is a discount of c1 dollars on each packHow many packs of dvds can you buy with c2 dollars?", "answer": [93.0], "response": "def buy_dvds(c0, c1, c2):\n    #calculate the discounted price of each pack\n    discounted_price = c0 - c1\n\n    #calculate the maximum number of packs that can be bought with c2 dollars\n    max_packs = c2 // discounted_price\n\n    return max_packs", "mapping": {"c0": 107.0, "c1": 106.0, "c2": 93.0}}
{"question": "There are c0 different books and c1 different movies in the ' crazy silly school ' series. If you read c2 of the books and watched c3 of the moviesHow many more movies than books are there in the ' crazy silly school ' series?", "answer": [2.0], "response": "def difference(c0, c1, c2, c3):\n    #calculate the difference between the number of movies and books\n    diff = c3 - c2 - (c1 - c0)\n    return diff", "mapping": {"c0": 8.0, "c1": 10.0, "c2": 19.0, "c3": 61.0}}
{"question": "Bobby ate c0 pieces of candy. Then he ate c1 more. He also ate c2 pieces of chocolate.How many pieces of candy and chocolate did Bobby eat altogether?", "answer": [51.0], "response": "def candy_and_chocolate(c0, c1, c2):\n    # Bobby ate c0 pieces of candy and c1 more\n    total_candy = c0 + c1\n\n    # Bobby also ate c2 pieces of chocolate\n    total_chocolate = c2\n\n    # Bobby ate candy and chocolate altogether\n    total = total_candy + total_chocolate\n\n    return total", "mapping": {"c0": 33.0, "c1": 4.0, "c2": 14.0}}
{"question": "Bryan took a look at his books as well. He has c0 bookshelves with each having the same number of books. If he has a total of c1 booksHow many books are there in each bookshelf?", "answer": [4.0], "response": "def books_per_shelf(c0, c1):\n    # calculate the total number of books\n    total_books = c1\n\n    # calculate the number of books per shelf by dividing the total number of books by the number of shelves\n    books_per_shelf = total_books / c0\n\n    return books_per_shelf", "mapping": {"c0": 7.0, "c1": 28.0}}
{"question": "Melissa scored c0 points in each game. If she scored a total of c1 pointsHow many games did she play?", "answer": [3.0], "response": "def games_played(c0, c1):\n    #each game she scores c0 points\n    points_per_game = c0\n\n    #total points scored is c1\n    total_points = c1\n\n    #number of games played can be calculated by dividing total points by points per game\n    games = total_points // points_per_game\n\n    return games", "mapping": {"c0": 12.0, "c1": 36.0}}
{"question": "Rachel had to complete c0 pages of math homework. If she had to complete c1 more pages of reading homework than math homeworkHow many pages of reading homework did she have to complete?", "answer": [14.0], "response": "def reading_homework(c0, c1):\n    # Rachel had to complete c0 pages of math homework\n    math_homework = c0\n\n    # She had to complete c1 more pages of reading homework than math homework\n    reading_homework = math_homework + c1\n\n    return reading_homework", "mapping": {"c0": 8.0, "c1": 6.0}}
{"question": "Jack received c0 emails and sent c1 letters in the morning. He then received c2 emails and sent c3 letters in the afternoon.How many emails did Jack receive in the day?", "answer": [8.0], "response": "def count_emails(c0, c1, c2, c3):\n    # Jack received c0 emails in the morning and c2 emails in the afternoon\n    total_emails = c0 + c2\n\n    return total_emails", "mapping": {"c0": 6.0, "c1": 91.0, "c2": 2.0, "c3": 74.0}}
{"question": "At the arcade Dave had won c0 tickets. He used some tickets to buy toys. If he still has c1 tickets leftHow many tickets did Dave use to buy toys?", "answer": [5.0], "response": "def tickets_used(c0, c1):\n    # Dave had c0 tickets initially\n    initial_tickets = c0\n\n    # Dave has c1 tickets left after buying toys\n    remaining_tickets = c1\n\n    # Dave used some tickets to buy toys, which can be calculated by subtracting the remaining tickets from the initial tickets\n    used_tickets = initial_tickets - remaining_tickets\n\n    return used_tickets", "mapping": {"c0": 7.0, "c1": 2.0}}
{"question": "Every day Ryan spends c0 hours on learning english and some more hours on learning chinese. If he spends c1 hours more on learning english than on learning chineseHow many hours does he spend on learning chinese?", "answer": [5.0], "response": "def chinese_hours(c0, c1):\n    # Ryan spends c0 hours on learning english\n    english_hours = c0\n\n    # Ryan spends c1 hours more on learning english than on learning chinese\n    # Therefore, the hours spent on learning chinese can be calculated by subtracting c1 from c0\n    chinese_hours = c0 - c1\n\n    return chinese_hours", "mapping": {"c0": 7.0, "c1": 2.0}}
{"question": "Katie had c0 ds games and her new friends had c1 games and old friends had c2 games.How many games do her friends have in all?", "answer": [141.0], "response": "def total_games(c0, c1, c2):\n    #add up the number of games each group of friends has\n    total = c0 + c1 + c2\n    return total", "mapping": {"c0": 91.0, "c1": 88.0, "c2": 53.0}}
{"question": "Paul got a box of some crayons for his birthday. During the school year he gave c0 crayons to his friends while he lost c1 crayons. If he only had c2 crayons leftHow many crayons had been lost or given away?", "answer": [587.0], "response": "def crayon_problem(c0, c1, c2):\n    # Paul had c0 crayons initially\n    initial_crayons = c0\n\n    # Paul gave away c0 crayons to his friends\n    given_away = c0\n\n    # Paul lost c1 crayons\n    lost = c1\n\n    # Paul has c2 crayons left\n    remaining = c2\n\n    # The total number of crayons lost or given away can be calculated by subtracting the remaining crayons from the initial number of crayons\n    total_lost_or_given_away = initial_crayons - remaining\n\n    # The number of crayons given away can be calculated by subtracting the lost crayons from the total lost or given away\n    given_away = total_lost_or_given_away - lost\n\n    return given_away, lost", "mapping": {"c0": 52.0, "c1": 535.0, "c2": 492.0}}
{"question": "Being his favorite, he saved checking on the grapevines for his last stop. He was told by c0 of the pickers that they fill c1 drums of grapes per day and c2 drums of raspberries per day.How many drums of grapes would be filled in c3 days?", "answer": [35624.0], "response": "def grapevines(c0, c1, c2, c3):\n    #c0 pickers fill c1 drums of grapes per day and c2 drums of raspberries per day\n    #we only need to calculate the number of drums of grapes filled in c3 days\n    grapes_per_day = c1\n    days = c3\n\n    #calculate the total number of drums of grapes filled in c3 days\n    total_grapes = grapes_per_day * days\n\n    return total_grapes", "mapping": {"c0": 294.0, "c1": 244.0, "c2": 47.0, "c3": 146.0}}
{"question": "Jake has c0 fewer peaches than Steven and c1 more peaches than Jill. Steven has c2 peaches.How many peaches does Jill have?", "answer": [2.0], "response": "def JillPeaches(c0, c1, c2):\n    #Jake has c0 fewer peaches than Steven\n    StevenPeaches = c0 + c1\n\n    #Steven has c2 peaches\n    StevenPeaches = c2\n\n    #Jill has c1 fewer peaches than Jake\n    JillPeaches = StevenPeaches - c1\n\n    return JillPeaches", "mapping": {"c0": 7.0, "c1": 8.0, "c2": 17.0}}
{"question": "c0 red peaches, c1 yellow peaches and c2 green peaches are in the basket.How many more green peaches than yellow peaches are in the basket?", "answer": [8.0], "response": "def peach_difference(c0, c1, c2):\n    #calculate the difference between the number of green and yellow peaches\n    difference = c2 - c1\n    \n    return difference", "mapping": {"c0": 2.0, "c1": 6.0, "c2": 14.0}}
{"question": "A book has c0 chapters. Each chapter is c1 pages long.How many pages does the book have altogether?", "answer": [1891.0], "response": "def total_pages(c0, c1):\n    #calculate the total number of pages by multiplying the number of chapters by the number of pages per chapter\n    total = c0 * c1\n    return total", "mapping": {"c0": 31.0, "c1": 61.0}}
{"question": "Brenda's mother made cookies for guests. Each guest had c0 cookies. If she prepared a total of c1 cookiesHow many guests did she prepare cookies for?", "answer": [5.0], "response": "def guests(c0, c1):\n    #each guest had c0 cookies\n    cookies_per_guest = c0\n\n    #total number of cookies prepared is c1\n    total_cookies = c1\n\n    #number of guests can be calculated by dividing the total number of cookies by the number of cookies per guest\n    num_guests = total_cookies // cookies_per_guest\n\n    return num_guests", "mapping": {"c0": 2.0, "c1": 10.0}}
{"question": "Every day Ryan spends a total of c0 hours on learning english and chinese. If he spends c1 hours on learning english everydayHow many hours does he spend on learning chinese?", "answer": [1.0], "response": "def chinese_hours(c0, c1):\n    # Ryan spends a total of c0 hours on learning english and chinese\n    # If he spends c1 hours on learning english everyday, then he spends the remaining hours on learning chinese\n    chinese_hours = c0 - c1\n\n    return chinese_hours", "mapping": {"c0": 3.0, "c1": 2.0}}
{"question": "Being his favorite, he saved checking on the grapevines for his last stop. He was told by c0 of the pickers that they fill c1 drums of raspberries per day and c2 drums of grapes per day.How many drums of grapes would be filled in c3 days?", "answer": [17017.0], "response": "def grape_drums(c0, c1, c2, c3):\n    # c0 pickers fill c1 drums of raspberries per day and c2 drums of grapes per day\n    # in c3 days, how many drums of grapes would be filled?\n    \n    # calculate the total number of drums of grapes filled in c3 days\n    total_grape_drums = c2 * c3\n    \n    return total_grape_drums", "mapping": {"c0": 235.0, "c1": 100.0, "c2": 221.0, "c3": 77.0}}
{"question": "Bobby ate c0 pieces of candy. Then he ate c1 more. He also ate c2 pieces of chocolate.How many more pieces of candy than chocolate did Bobby eat?", "answer": [58.0], "response": "def candy_vs_chocolate(c0, c1, c2):\n    #calculate total candy eaten\n    total_candy = c0 + c1\n    #calculate difference between total candy and chocolate eaten\n    candy_vs_chocolate = total_candy - c2\n    return candy_vs_chocolate", "mapping": {"c0": 38.0, "c1": 36.0, "c2": 16.0}}
{"question": "He then went to see the oranges being harvested. He found out that they harvested c0 sacks of oranges.How many days did it take to harvest them if they harvested c1 sacks of oranges per day?", "answer": [3.0], "response": "def days_to_harvest(c0, c1):\n    #calculate the number of days it took to harvest the oranges by dividing the total number of sacks by the number of sacks harvested per day\n    days = c0 / c1\n    return days", "mapping": {"c0": 54.0, "c1": 18.0}}
{"question": "A mailman has to give c0 pieces of junk mail to each block. If he gives c1 mails to each house in a blockHow many houses are there in a block?", "answer": [5.0], "response": "def Problem(c0, c1):\n    #the mailman gives c0 pieces of junk mail to each block\n    mails_per_block = c0\n\n    #he gives c1 mails to each house in a block\n    mails_per_house = c1\n\n    #the number of houses in a block can be calculated by dividing the number of mails per block by the number of mails per house\n    houses_per_block = mails_per_block / mails_per_house\n\n    return houses_per_block", "mapping": {"c0": 25.0, "c1": 5.0}}
{"question": "A waiter had c0 customers. After some left he still had c1 customers. Then he got c2 new customersHow many customers left?", "answer": [3.0], "response": "def Problem(c0, c1, c2):\n    #the waiter originally had c0 customers\n    initial_customers = c0\n\n    #after some left, he had c1 customers\n    remaining_customers = c1\n\n    #then he got c2 new customers\n    total_customers = remaining_customers + c2\n\n    #the number of customers who left can be calculated by subtracting the total number of customers from the initial number of customers\n    customers_left = initial_customers - total_customers\n\n    return customers_left", "mapping": {"c0": 8.0, "c1": 5.0, "c2": 99.0}}
{"question": "Jake has c0 fewer peaches and c1 more apples than Steven. Steven has c2 apples and c3 peaches.How many more apples than peaches does Steven have?", "answer": [4.0], "response": "def apple_peach_difference(c0, c1, c2, c3):\n    # Jake has c0 fewer peaches than Steven\n    jake_peaches = c3 - c0\n\n    # Jake has c1 more apples than Steven\n    jake_apples = c2 + c1\n\n    # Steven has c2 apples and c3 peaches\n    steven_apples = c2\n    steven_peaches = c3\n\n    # Calculate the difference between Steven's apples and peaches\n    apple_peach_diff = steven_apples - steven_peaches\n\n    return apple_peach_diff", "mapping": {"c0": 3.0, "c1": 4.0, "c2": 19.0, "c3": 15.0}}
{"question": "Every day Ryan spends c0 hours on learning english and c1 hours on learning chinese.How many more hours does he spend on learning chinese than he does on learning english?", "answer": [1.0], "response": "def language_hours(c0, c1):\n    #calculate the difference between the hours spent on learning chinese and english\n    difference = c1 - c0\n    \n    return difference", "mapping": {"c0": 6.0, "c1": 7.0}}
{"question": "c0 birds and c1 storks were sitting on the fence. c2 more birds came to join them.How many birds are sitting on the fence?", "answer": [10.0], "response": "def birds_on_fence(c0, c1, c2):\n    #total number of birds on the fence is the sum of the original number of birds and storks plus the number of new birds that joined\n    total_birds = c0 + c1 + c2\n    return total_birds", "mapping": {"c0": 4.0, "c1": 46.0, "c2": 6.0}}
{"question": "Paco had c0 cookies. He ate some of them and had c1 cookies left.How many cookies did Paco eat?", "answer": [21.0], "response": "def cookies_eaten(c0, c1):\n    # Paco had c0 cookies\n    cookies_before = c0\n\n    # After eating some cookies, he had c1 cookies left\n    cookies_after = c1\n\n    # The number of cookies he ate can be calculated by subtracting the number of cookies left from the original number of cookies\n    eaten = cookies_before - cookies_after\n\n    return eaten", "mapping": {"c0": 28.0, "c1": 7.0}}
{"question": "Matthew had c0 crackers to give to friends. If Matthew gave c1 crackers to each his friendsHow many friends did he give crackers to?", "answer": [4.0], "response": "def crackers_given(c0, c1):\n    # Matthew had c0 crackers to give\n    crackers_available = c0\n\n    # Matthew gave c1 crackers to each friend\n    crackers_per_friend = c1\n\n    # Calculate the number of friends he gave crackers to by dividing the total crackers given by the crackers per friend\n    friends_given_to = crackers_available // crackers_per_friend\n\n    return friends_given_to", "mapping": {"c0": 8.0, "c1": 2.0}}
{"question": "c0 campers went rowing and c1 campers went hiking in the morning. c2 campers went rowing in the afternoon.How many campers went rowing and hiking in all?", "answer": [71.0], "response": "def campers_activity(c0, c1, c2):\n    #total number of campers who went rowing\n    rowing = c0 + c2\n\n    #total number of campers who went hiking\n    hiking = c1\n\n    #total number of campers who went rowing and hiking\n    total = rowing + hiking\n\n    return total", "mapping": {"c0": 41.0, "c1": 4.0, "c2": 26.0}}
{"question": "Paco had c0 cookies. He ate c1 of them. Then he bought c2 more cookiesHow many more cookies did he buy than those he ate?", "answer": [34.0], "response": "def cookies_difference(c0, c1, c2):\n    # Paco had c0 cookies\n    # He ate c1 of them\n    # Then he bought c2 more cookies\n    # We need to calculate how many more cookies he bought than those he ate\n\n    # First, let's calculate how many cookies Paco has after eating c1\n    cookies_left = c0 - c1\n\n    # Then, let's calculate how many cookies Paco has after buying c2 more\n    cookies_total = cookies_left + c2\n\n    # Finally, let's calculate the difference between the cookies Paco bought and the cookies he ate\n    difference = cookies_total - cookies_left\n\n    return difference", "mapping": {"c0": 13.0, "c1": 2.0, "c2": 36.0}}
{"question": "Zachary did c0 push-ups in gym class today. David did c1 more push-ups than Zachary. John did c2 push-ups less than david.How many push-ups did David do?", "answer": [58.0], "response": "def David_pushups(c0, c1, c2):\n    #David did c1 more push-ups than Zachary\n    david_pushups = c0 + c1\n\n    #John did c2 push-ups less than David\n    john_pushups = david_pushups - c2\n\n    return john_pushups", "mapping": {"c0": 19.0, "c1": 39.0, "c2": 13.0}}
{"question": "Mary is baking a cake. The recipe calls for c0 cups of flour c1 cups of sugar and c2 cups of salt. She already put in c3 cups of flour.How many more cups of flour than cups of salt does she need to add now?", "answer": [3.0], "response": "def flour_to_salt(c0, c1, c2, c3):\n    #calculate how much flour is still needed\n    flour_needed = c0 - c3\n\n    #calculate how much salt is still needed\n    salt_needed = c2\n\n    #calculate the difference between the amount of flour and salt needed\n    difference = flour_needed - salt_needed\n\n    return difference", "mapping": {"c0": 12.0, "c1": 14.0, "c2": 7.0, "c3": 2.0}}
{"question": "There were c0 roses in the vase. Jessica threw away c1 roses from the vase and cut some more new roses from her flower garden to put in the vase. There are now c2 roses in the vase.How many more roses did she cut than those she threw away?", "answer": [2.0], "response": "def roses_cut(c0, c1, c2):\n    #calculate how many roses were thrown away\n    thrown_away = c0 - c1\n\n    #calculate how many roses were cut from the garden\n    cut_from_garden = c2 - c0\n\n    #calculate the difference between the two\n    difference = cut_from_garden - thrown_away\n\n    return difference", "mapping": {"c0": 15.0, "c1": 33.0, "c2": 17.0}}
{"question": "Last week Fred had c0 dollars and Jason had c1 dollars. Fred washed cars over the weekend and now has c2 dollars. Jason delivered newspapers and now has c3 dollars.How much money did Jason earn by delivering newspapers?", "answer": [60.0], "response": "def JasonsEarnings(c0, c1, c2, c3):\n    #Fred had c0 dollars and Jason had c1 dollars last week\n    #Fred now has c2 dollars and Jason now has c3 dollars\n    #To find out how much money Jason earned, we need to subtract his original amount from his current amount\n    Jasons_earnings = c3 - c1\n\n    return Jasons_earnings", "mapping": {"c0": 49.0, "c1": 3.0, "c2": 112.0, "c3": 63.0}}
{"question": "Jake has c0 fewer peaches than Steven and c1 more peaches than Jill. Steven has c2 peaches.How many peaches does Jake have?", "answer": [9.0], "response": "def JakePeaches(c0, c1, c2):\n    #Jake has c0 fewer peaches than Steven\n    StevenPeaches = c2\n    JakePeaches = StevenPeaches - c0\n\n    #Jake has c1 more peaches than Jill\n    JillPeaches = StevenPeaches - c1\n    JakePeaches = JillPeaches + c0\n\n    return JakePeaches", "mapping": {"c0": 7.0, "c1": 9.0, "c2": 16.0}}
{"question": "c0 campers went rowing on a day. c1 campers went rowing in the morning and some more campers went rowing in the afternoon.How many campers went rowing in the afternoon?", "answer": [3.0], "response": "def afternoon_campers(c0, c1):\n    # c0 campers went rowing in total\n    # c1 campers went rowing in the morning\n    # we need to find how many campers went rowing in the afternoon\n\n    # subtract the number of campers who went rowing in the morning from the total number of campers who went rowing\n    afternoon = c0 - c1\n\n    return afternoon", "mapping": {"c0": 46.0, "c1": 43.0}}
{"question": "The ring toss game at the carnival made c0 dollars in the first c1 days and c2 dollars in the remaining c3 days.How much did they make in all?", "answer": [756.0], "response": "def carnival_income(c0, c1, c2, c3):\n    #calculate the income for the first c1 days\n    income_first_days = c0 * c1\n\n    #calculate the income for the remaining c3 days\n    income_remaining_days = c2 * c3\n\n    #calculate the total income by adding the income for the first c1 days and the income for the remaining c3 days\n    total_income = income_first_days + income_remaining_days\n\n    return total_income", "mapping": {"c0": 382.0, "c1": 44.0, "c2": 374.0, "c3": 10.0}}
{"question": "A book has c0 chapters. The second chapter is c1 pages long. If there are a total of c2 pages in the bookHow many pages are in the first chapter?", "answer": [31.0], "response": "def first_chapter_pages(c0, c1, c2):\n    #total number of pages excluding the second chapter\n    total_pages = c2 - c1\n\n    #number of pages in the first chapter\n    first_chapter = total_pages // (c0 - 1)\n\n    return first_chapter", "mapping": {"c0": 2.0, "c1": 36.0, "c2": 67.0}}
{"question": "Carol was sending out birthday invitations to her friends. Each package of invitations she bought had c0 invitations in it and she bought c1 packs. If she wants to invite c2 friendsHow many extra invitations will she need to buy?", "answer": [3.0], "response": "def extra_invitations(c0, c1, c2):\n    #calculate the total number of invitations Carol has\n    total_invitations = c0 * c1\n\n    #calculate the number of extra invitations Carol needs to buy\n    extra_invitations = c2 - total_invitations\n\n    return extra_invitations", "mapping": {"c0": 3.0, "c1": 2.0, "c2": 9.0}}
{"question": "Zachary did c0 push-ups in gym class today. David did c1 more push-ups than Zachary. John did c2 push-ups less than David.How many more push-ups did Zachary do than John?", "answer": [30.0], "response": "def push_ups_difference(c0, c1, c2):\n    # David did c1 more push-ups than Zachary\n    david_push_ups = c0 + c1\n\n    # John did c2 push-ups less than David\n    john_push_ups = david_push_ups - c2\n\n    # Calculate the difference between Zachary's push-ups and John's push-ups\n    difference = c0 - john_push_ups\n\n    return difference", "mapping": {"c0": 15.0, "c1": 39.0, "c2": 9.0}}
{"question": "Ed had c0 more marbles than Doug. Doug lost some of his marbles at the playground. Now Ed has c1 more marbles than doug.How many marbles did Doug lose?", "answer": [17.0], "response": "def marbles_lost(c0, c1):\n    # Ed had c0 more marbles than Doug\n    ed_marbles = c0 + doug_marbles\n\n    # Now Ed has c1 more marbles than Doug\n    doug_marbles = ed_marbles - c1\n\n    # Doug lost some of his marbles at the playground\n    lost_marbles = doug_marbles - (c0 - doug_marbles)\n\n    return lost_marbles", "mapping": {"c0": 2.0, "c1": 19.0}}
{"question": "There are c0 skittles in Steven's skittles collection. Steven also has c1 erasers and c2 scales. If the skittles are organized into c3 groupsHow big is each group?", "answer": [112.0], "response": "def skittle_group_size(c0, c1, c2, c3):\n    #total number of skittles\n    total_skittles = c0\n\n    #total number of items in Steven's collection\n    total_items = c0 + c1 + c2\n\n    #number of skittles in each group\n    group_size = total_skittles // c3\n\n    return group_size", "mapping": {"c0": 896.0, "c1": 517.0, "c2": 90.0, "c3": 8.0}}
{"question": "Rebecca wants to split a collection of eggs into groups of c0. Rebecca has c1 marbles and c2 eggs.How many groups will be created?", "answer": [3.0], "response": "def egg_groups(c0, c1, c2):\n    # calculate the maximum number of groups that can be created based on the number of marbles and eggs\n    max_groups = min(c1, c2 // c0)\n    \n    return max_groups", "mapping": {"c0": 5.0, "c1": 10.0, "c2": 15.0}}
{"question": "Paul had c0 pens and c1 books. After selling some books and pens in a garage sale he had c2 books and c3 pens left.How many books did he sell in the garage sale?", "answer": [140.0], "response": "def garage_sale(c0, c1, c2, c3):\n    #Paul had c0 pens and c1 books\n    pens_before = c0\n    books_before = c1\n\n    #After selling some books and pens in a garage sale he had c2 books and c3 pens left\n    pens_after = c3\n    books_after = c2\n\n    #The number of books he sold can be calculated by subtracting the number of books before from the number of books after\n    books_sold = books_before - books_after\n\n    return books_sold", "mapping": {"c0": 95.0, "c1": 153.0, "c2": 13.0, "c3": 23.0}}
{"question": "Frank was reading through his favorite book. The book had c0 pages equally distributed over c1 chapters. It took Frank c2 days to finish the book.How many pages did he read per day?", "answer": [102.0], "response": "def pages_per_day(c0, c1, c2):\n    #calculate the total number of pages per day\n    pages_per_day = c0/c2\n\n    #calculate the number of pages per chapter\n    pages_per_chapter = c0/c1\n\n    #calculate the number of chapters per day\n    chapters_per_day = c1/c2\n\n    #calculate the number of pages Frank read per day\n    pages_read_per_day = pages_per_chapter * chapters_per_day\n\n    return pages_read_per_day", "mapping": {"c0": 612.0, "c1": 24.0, "c2": 6.0}}
{"question": "There are c0 peaches distributed equally in some baskets. If each basket has c1 red peaches and c2 green peachesHow many baskets of peaches are there?", "answer": [1.0], "response": "def num_baskets(c0, c1, c2):\n    #calculate the total number of peaches in each basket\n    total_peaches = c1 + c2\n\n    #calculate the number of baskets needed by dividing the total number of peaches by the number of peaches in each basket\n    num_baskets = c0 // total_peaches\n\n    return num_baskets", "mapping": {"c0": 10.0, "c1": 4.0, "c2": 6.0}}
{"question": "Lewis earns $ c0 every week during the harvest. If he earns a total of $ c1 How many weeks did the harvest last?", "answer": [89.0], "response": "def harvest_weeks(c0, c1):\n    #calculate the number of weeks by dividing the total earnings by the weekly earnings\n    weeks = c1 / c0\n    return weeks", "mapping": {"c0": 2.0, "c1": 178.0}}
{"question": "Danny collects bottle caps. He threw away c0 of the old ones at the park while he found c1 bottle caps new ones. Now he has c2 bottle caps in his collection.How many more bottle caps did danny throw away than those he found at the park?", "answer": [6.0], "response": "def bottle_caps(c0, c1, c2):\n    # Danny threw away c0 bottle caps and found c1 new ones\n    # So the total number of bottle caps he has now is c0 - c1 + c2\n    total_caps = c0 - c1 + c2\n\n    # The number of bottle caps he threw away is c0 - total_caps\n    thrown_away = c0 - total_caps\n\n    # The number of bottle caps he found is c1\n    found = c1\n\n    # The difference between the number of bottle caps he threw away and the number he found is the answer\n    difference = thrown_away - found\n\n    return difference", "mapping": {"c0": 54.0, "c1": 48.0, "c2": 52.0}}
{"question": "He then went to see the oranges being harvested. He found out that they harvest c0 sacks of ripe oranges and c1 sacks of unripe oranges per day.How many sacks of unripe oranges will they have after c2 days of harvest?", "answer": [1080.0], "response": "def unripe_oranges(c0, c1, c2):\n    #calculate the total number of unripe oranges harvested after c2 days\n    unripe_oranges_total = c1 * c2\n\n    #return the total number of unripe oranges\n    return unripe_oranges_total", "mapping": {"c0": 31.0, "c1": 24.0, "c2": 45.0}}
{"question": "The grasshopper and the frog had a jumping contest. The grasshopper jumped c0 inches. The grasshopper jumped c1 inches farther than the frog.How much did they jump altogether?", "answer": [66.0], "response": "def jumping_contest(c0, c1):\n    # The grasshopper jumped c0 inches\n    grasshopper_jump = c0\n\n    # The grasshopper jumped c1 inches farther than the frog\n    frog_jump = c0 + c1\n\n    # They jumped altogether by adding their jumps\n    total_jump = grasshopper_jump + frog_jump\n\n    return total_jump", "mapping": {"c0": 35.0, "c1": 4.0}}
{"question": "The Razorback shop makes $ c0 dollars off each t-shirt and $ c1 off each jersey. During the Arkansas and Texas tech game they sold c2 t-shirts and c3 jerseys.How much money did they make from selling the jerseys?", "answer": [25740.0], "response": "def jersey_profit(c0, c1, c2, c3):\n    #calculate the total profit from selling jerseys\n    jersey_profit = c1 * c3\n\n    return jersey_profit", "mapping": {"c0": 67.0, "c1": 165.0, "c2": 74.0, "c3": 156.0}}
{"question": "After resting they decided to go for a swim. The depth of the water is c0 times Ron's height. Dean is c1 feet shorter than Ron. If Ron stands at c2 feetHow deep was the water?", "answer": [60.0], "response": "def water_depth(c0, c1, c2):\n    # Ron's height\n    ron_height = c2\n\n    # Dean's height\n    dean_height = ron_height - c1\n\n    # Depth of the water\n    water_depth = c0 * ron_height\n\n    return water_depth", "mapping": {"c0": 5.0, "c1": 11.0, "c2": 12.0}}
{"question": "There are c0 pots. Each pot has c1 flowers and c2 sticks in it.How many flowers and sticks are there in all?", "answer": [109044.0], "response": "def count_flowers_and_sticks(c0, c1, c2):\n    #calculate the total number of flowers by multiplying the number of pots by the number of flowers in each pot\n    total_flowers = c0 * c1\n\n    #calculate the total number of sticks by multiplying the number of pots by the number of sticks in each pot\n    total_sticks = c0 * c2\n\n    #return a tuple containing the total number of flowers and sticks\n    return (total_flowers, total_sticks)", "mapping": {"c0": 466.0, "c1": 53.0, "c2": 181.0}}
{"question": "Paul got a box of c0 crayons for his birthday. During the school year he gave c1 crayons to his friends while he lost c2 crayons.How many more crayons did he lose than those he gave to his friends?", "answer": [322.0], "response": "def crayon_difference(c0, c1, c2):\n    #c0 is the number of crayons Paul got for his birthday\n    #c1 is the number of crayons he gave to his friends\n    #c2 is the number of crayons he lost\n\n    #calculate the total number of crayons Paul has left\n    total_crayons = c0 - c1 - c2\n\n    #calculate the difference between the number of crayons he lost and the number he gave to his friends\n    difference = c2 - c1\n\n    return difference", "mapping": {"c0": 110.0, "c1": 90.0, "c2": 412.0}}
{"question": "In a school there are c0 girls and c1 boys.How many more girls than boys does the school have?", "answer": [333.0], "response": "def girls_vs_boys(c0, c1):\n    #calculate the difference between the number of girls and boys\n    diff = c0 - c1\n\n    #return the absolute value of the difference\n    return abs(diff)", "mapping": {"c0": 569.0, "c1": 236.0}}
{"question": "He then went to see the oranges being harvested. He found out that they harvest c0 sacks of unripe oranges and c1 sacks of ripe oranges per day.How many sacks of unripe oranges will they have after c2 days of harvest?", "answer": [390.0], "response": "def unripe_oranges(c0, c1, c2):\n    #calculate the total number of unripe oranges harvested after c2 days\n    total_unripe_oranges = c0 * c2\n\n    #calculate the total number of ripe oranges harvested after c2 days\n    total_ripe_oranges = c1 * c2\n\n    #calculate the number of unripe oranges remaining after harvesting ripe oranges\n    remaining_unripe_oranges = total_unripe_oranges - total_ripe_oranges\n\n    return remaining_unripe_oranges", "mapping": {"c0": 65.0, "c1": 46.0, "c2": 6.0}}
{"question": "The Ferris wheel in paradise park has c0 seats. Each seat can hold c1 people. If there are c2 people on the wheel right nowHow many more people can join the wheel?", "answer": [68.0], "response": "def FerrisWheel(c0, c1, c2):\n    #calculate the total number of people that can fit on the Ferris wheel\n    total_capacity = c0 * c1\n\n    #calculate the number of people currently on the Ferris wheel\n    current_people = c2\n\n    #calculate the number of people that can still fit on the Ferris wheel\n    remaining_capacity = total_capacity - current_people\n\n    return remaining_capacity", "mapping": {"c0": 6.0, "c1": 14.0, "c2": 16.0}}
{"question": "Debby bought c0 water bottles when they were on sale. She drank the same number of bottles each day. If the bottles lasted for c1 daysHow many bottles did she drink each day?", "answer": [9.0], "response": "def Problem(c0, c1):\n    # Debby bought c0 water bottles\n    bottles = c0\n\n    # The bottles lasted for c1 days\n    days = c1\n\n    # Debby drank the same number of bottles each day\n    drank_per_day = bottles // days\n\n    return drank_per_day", "mapping": {"c0": 153.0, "c1": 17.0}}
{"question": "Robin has c0 packages of gum and c1 packages of candy. There are c2 pieces in each package.How many pieces of candies does Robin have?", "answer": [405.0], "response": "def candy_pieces(c0, c1, c2):\n    #calculate the total number of candies by multiplying the number of candy packages by the number of candies in each package\n    total_candies = c1 * c2\n    \n    return total_candies", "mapping": {"c0": 21.0, "c1": 45.0, "c2": 9.0}}
{"question": "After Olivia visited a supermarket there were c0 dollars left. If there were c1 dollars in her wallet initiallyHow much did she spend?", "answer": [25.0], "response": "def calculate_spending(c0, c1):\n    # Olivia had c1 dollars initially\n    initial_wallet = c1\n\n    # After visiting the supermarket, she has c0 dollars left\n    remaining_wallet = c0\n\n    # The amount she spent can be calculated by subtracting the remaining amount from the initial amount\n    spending = initial_wallet - remaining_wallet\n\n    return spending", "mapping": {"c0": 29.0, "c1": 54.0}}
{"question": "Haley grew c0 trees in her backyard. After a typhoon c1 trees were left.How many trees died in the typhoon?", "answer": [16.0], "response": "def typhoon_damage(c0, c1):\n    # Haley originally had c0 trees\n    initial_trees = c0\n\n    # After the typhoon, c1 trees were left\n    remaining_trees = c1\n\n    # The number of trees that died can be calculated by subtracting the remaining trees from the initial trees\n    trees_died = initial_trees - remaining_trees\n\n    return trees_died", "mapping": {"c0": 20.0, "c1": 4.0}}
{"question": "Jake has c0 fewer peaches than Steven who has c1 more peaches than Jill. Steven has c2 peaches.How many peaches does Jake have?", "answer": [8.0], "response": "def JakePeaches(c0, c1, c2):\n    #Steven has c2 peaches\n    steven_peaches = c2\n\n    #Jill has c1 more peaches than Steven\n    jill_peaches = steven_peaches - c1\n\n    #Jake has c0 fewer peaches than Steven\n    jake_peaches = jill_peaches - c0\n\n    return jake_peaches", "mapping": {"c0": 7.0, "c1": 14.0, "c2": 15.0}}
{"question": "Lewis earns $ c0 every week during the c1 weeks of harvest. If he has to pay $ c2 rent every weekHow much money will have at the end of the harvest season?", "answer": [324775.0], "response": "def harvest_profit(c0, c1, c2):\n    #calculate the total earnings during the harvest season\n    total_earnings = c0 * c1\n\n    #calculate the total rent paid during the harvest season\n    total_rent = c2 * c1\n\n    #calculate the profit by subtracting the total rent from the total earnings\n    profit = total_earnings - total_rent\n\n    return profit", "mapping": {"c0": 491.0, "c1": 1181.0, "c2": 216.0}}
{"question": "Paul had c0 books and c1 pens. After selling some books and pens in a garage sale he had c2 books and c3 pens left.How many pens did he sell in the garage sale?", "answer": [92.0], "response": "def garage_sale(c0, c1, c2, c3):\n    #calculate the number of books and pens sold\n    books_sold = c0 - c2\n    pens_sold = c1 - c3\n\n    #return the number of pens sold\n    return pens_sold", "mapping": {"c0": 51.0, "c1": 106.0, "c2": 82.0, "c3": 14.0}}
{"question": "Zachary did c0 push-ups and c1 crunches in gym class today. David did c2 more push-ups but c3 less crunches than zachary.How many crunches did David do?", "answer": [4.0], "response": "def crunches_david(c0, c1, c2, c3):\n    # Zachary did c1 crunches\n    zachary_crunches = c1\n\n    # David did c2 more push-ups than Zachary\n    david_pushups = c0 + c2\n\n    # David did c3 less crunches than Zachary\n    david_crunches = zachary_crunches - c3\n\n    return david_crunches", "mapping": {"c0": 44.0, "c1": 17.0, "c2": 29.0, "c3": 13.0}}
{"question": "Paul had c0 pens and c1 books. After selling some books and pens in a garage sale he had c2 books and c3 pens left.How many pens did he sell in the garage sale?", "answer": [23.0], "response": "def garage_sale(c0, c1, c2, c3):\n    #Paul had c0 pens and c1 books\n    pens_before = c0\n    books_before = c1\n\n    #After selling some books and pens in a garage sale he had c2 books and c3 pens left\n    books_after = c2\n    pens_after = c3\n\n    #The number of pens he sold can be calculated by subtracting the number of pens he has after the sale from the number of pens he had before the sale\n    pens_sold = pens_before - pens_after\n\n    return pens_sold", "mapping": {"c0": 42.0, "c1": 143.0, "c2": 113.0, "c3": 19.0}}
{"question": "Danny collects bottle caps and wrappers. He found c0 bottle caps and c1 wrappers at the park. Now he has c2 bottle caps and c3 wrappers in his collection.How many more bottle caps than wrappers does danny have now?", "answer": [12.0], "response": "def bottle_caps_vs_wrappers(c0, c1, c2, c3):\n    #calculate the number of bottle caps and wrappers Danny had before\n    total_caps_before = c0\n    total_wrappers_before = c1\n\n    #calculate the number of bottle caps and wrappers Danny has now\n    total_caps_after = c2\n    total_wrappers_after = c3\n\n    #calculate the difference between the number of bottle caps and wrappers Danny has now\n    difference = total_caps_after - total_wrappers_after\n\n    return difference", "mapping": {"c0": 71.0, "c1": 24.0, "c2": 28.0, "c3": 16.0}}
{"question": "Dan has $ c0. He bought c1 candy bar for $ c2 each one costing the same amount of money.How much money is left?", "answer": [1.0], "response": "def candy_cost(c0, c1, c2):\n    #calculate the total cost of the candy bars\n    total_cost = c1 * c2\n\n    #calculate the remaining money after buying the candy bars\n    remaining_money = c0 - total_cost\n\n    return remaining_money", "mapping": {"c0": 4.0, "c1": 99.0, "c2": 3.0}}
{"question": "c0 children were riding on the bus. At the bus stop c1 children got off the bus while some more got on the bus. Then there were c2 children altogether on the bus.How many more children got on the bus than those that got off?", "answer": [9.0], "response": "def Problem(c0, c1, c2):\n    #c0 children were originally on the bus\n    #c1 children got off the bus\n    #c2 children were left on the bus\n\n    #the number of children that got on the bus can be calculated by subtracting the number of children that got off from the total number of children on the bus\n    got_on = c2 - c1\n\n    #the number of children that got off is already given as c1\n\n    #the difference between the number of children that got on and the number of children that got off is the answer\n    answer = got_on - c1\n\n    return answer", "mapping": {"c0": 5.0, "c1": 63.0, "c2": 14.0}}
{"question": "Debby bought c0 soda bottles and c1 water bottles when they were on sale. If she drank c2 water bottles and c3 soda bottles a dayHow many days would the water bottles last?", "answer": [12.0], "response": "def water_bottle_days(c0, c1, c2, c3):\n    #calculate the total number of water bottles Debby has\n    total_water_bottles = c1\n\n    #calculate the total number of water bottles Debby will drink\n    total_water_drinks = c2\n\n    #calculate the number of days the water bottles will last\n    days = total_water_bottles // total_water_drinks\n\n    return days", "mapping": {"c0": 95.0, "c1": 180.0, "c2": 15.0, "c3": 54.0}}
{"question": "Mary is baking a cake. The recipe calls for c0 cups of sugar and c1 cups of flour. She already put in some cups of flour. If she still needs c2 more cups of flour than sugarHow many cups of flour did she put in?", "answer": [2.0], "response": "Let's think about it step by step:\n\ndef flour_used(c0, c1, c2):\n    # Mary already put in some cups of flour\n    flour_before = c1\n\n    # She still needs c2 more cups of flour than sugar\n    sugar = c0\n    flour_needed = sugar + c2\n\n    # The number of cups of flour she put in can be calculated by subtracting the amount of flour needed from the amount of flour before\n    flour_used = flour_before - flour_needed\n\n    return flour_used", "mapping": {"c0": 3.0, "c1": 10.0, "c2": 5.0}}
{"question": "Faye had c0 packs of pencils each one having c1 pencils. She was placing her pencils into rows with c2 pencils in each row.How many rows could she make?", "answer": [70.0], "response": "def pencil_rows(c0, c1, c2):\n    #calculate the total number of pencils Faye has\n    total_pencils = c0 * c1\n    \n    #calculate the number of rows she can make\n    rows = total_pencils // c2\n    \n    return rows", "mapping": {"c0": 35.0, "c1": 4.0, "c2": 2.0}}
{"question": "Each Ferris wheel in paradise park has c0 seats. Each seat in a Ferris wheel can hold c1 people.How many people can ride c2 Ferris wheels at the same time?", "answer": [5700.0], "response": "def FerrisWheelCapacity(c0, c1, c2):\n    #calculate the total number of people that can ride all the Ferris wheels at the same time\n    total_capacity = c0 * c1 * c2\n\n    return total_capacity", "mapping": {"c0": 19.0, "c1": 15.0, "c2": 20.0}}
{"question": "Bobby had c0 pieces of candy. He ate c1 pieces of candy.How many pieces of candy does he still have left?", "answer": [17.0], "response": "def candy_left(c0, c1):\n    # Bobby had c0 pieces of candy\n    candy_before = c0\n\n    # Bobby ate c1 pieces of candy\n    candy_eaten = c1\n\n    # The number of candy left can be calculated by subtracting the number of candy eaten from the original number of candy\n    candy_left = candy_before - candy_eaten\n\n    return candy_left", "mapping": {"c0": 19.0, "c1": 2.0}}
{"question": "Bobby had c0 pieces of candy. He ate c1 pieces of candy. Then he ate c2 more.How many pieces of candy did Bobby eat?", "answer": [52.0], "response": "def candy_eaten(c0, c1, c2):\n    # Bobby starts with c0 pieces of candy\n    # He eats c1 pieces of candy\n    # Then he eats c2 more pieces of candy\n    total_eaten = c1 + c2\n\n    return total_eaten", "mapping": {"c0": 20.0, "c1": 34.0, "c2": 18.0}}
{"question": "After eating a hearty meal they went to see the Buckingham palace. There, Rachel learned that c0 visitors came to the Buckingham palace that day. If there were c1 visitors the previous day and c2 visitors the day before thatHow many more visitors visited the Buckingham palace on that day than on the previous c3 days?", "answer": [57.0], "response": "def visitors_increase(c0, c1, c2, c3):\n    #calculate the total number of visitors in the previous c3 days\n    total_previous_visitors = c1 + c2 + c3\n\n    #calculate the increase in visitors on the current day\n    increase = c0 - total_previous_visitors\n\n    return increase", "mapping": {"c0": 705.0, "c1": 191.0, "c2": 457.0, "c3": 245.0}}
{"question": "Paul had c0 books and c1 pens. After selling some books and pens in a garage sale he had c2 books and c3 pens left.How many books did he sell in the garage sale?", "answer": [42.0], "response": "def garage_sale(c0, c1, c2, c3):\n    #calculate the number of books sold by subtracting the number of books left after the sale from the number of books before the sale\n    books_sold = c0 - c2\n    \n    return books_sold", "mapping": {"c0": 108.0, "c1": 55.0, "c2": 66.0, "c3": 59.0}}
{"question": "Marco and his dad went strawberry picking. Marco's dad's strawberries weighed c0 pounds. If together their strawberries weighed c1 pounds.How much did Marco's strawberries weigh?", "answer": [19.0], "response": "def strawberry_weight(c0, c1):\n    #total weight of strawberries\n    total_weight = c1\n\n    #weight of Marco's dad's strawberries\n    dad_weight = c0\n\n    #weight of Marco's strawberries can be calculated by subtracting his dad's weight from the total weight\n    marco_weight = total_weight - dad_weight\n\n    return marco_weight", "mapping": {"c0": 11.0, "c1": 30.0}}
{"question": "Julia played tag with c0 kids on monday, c1 kids on tuesday and c2 kids on wednesday.How many kids did she play with on monday and wednesday?", "answer": [20.0], "response": "def tag_players(c0, c1, c2):\n    #Julia played with c0 kids on Monday and c2 kids on Wednesday\n    monday_players = c0\n    wednesday_players = c2\n\n    #returning the total number of players Julia played with on Monday and Wednesday\n    return monday_players + wednesday_players", "mapping": {"c0": 5.0, "c1": 9.0, "c2": 15.0}}
{"question": "Marco and his dad went strawberry picking. Marco's strawberries weighed c0 pounds. If together their strawberries weighed c1 pounds.How much did his dad's strawberries weigh?", "answer": [22.0], "response": "def dad_strawberries(c0, c1):\n    # Marco's strawberries weighed c0 pounds\n    marco_strawberries = c0\n\n    # Together their strawberries weighed c1 pounds\n    total_weight = c1\n\n    # Dad's strawberries weigh can be calculated by subtracting Marco's strawberries weight from the total weight\n    dad_strawberries_weight = total_weight - marco_strawberries\n\n    return dad_strawberries_weight", "mapping": {"c0": 15.0, "c1": 37.0}}
{"question": "Shirley sold c0 boxes of trefoils.How many boxes are in each case if she needs to deliver c1 cases of boxes?", "answer": [2.0], "response": "def boxes_per_case(c0, c1):\n    #Shirley sold c0 boxes\n    boxes_sold = c0\n\n    #She needs to deliver c1 cases of boxes\n    cases_delivered = c1\n\n    #The number of boxes in each case can be calculated by dividing the total number of boxes sold by the number of cases delivered\n    boxes_per_case = boxes_sold / cases_delivered\n\n    return boxes_per_case", "mapping": {"c0": 10.0, "c1": 5.0}}
{"question": "Paul got a box of c0 crayons and c1 erasers for his birthday. At the end of the school year he only had c2 left while not having lost a single erasers.How many crayons had been lost or given away?", "answer": [367.0], "response": "def lost_crayons(c0, c1, c2):\n    #calculate the number of crayons lost or given away by subtracting the remaining crayons from the initial number of crayons\n    lost = c0 - c2\n    #since no erasers were lost, we can assume that all the missing items are crayons\n    lost_crayons = lost - c1\n    return lost_crayons", "mapping": {"c0": 521.0, "c1": 66.0, "c2": 154.0}}
{"question": "David did c0 more push-ups than Zachary in gym class today. If David did c1 push-upsHow many push-ups did Zachary and David do altogether?", "answer": [20.0], "response": "def push_ups_total(c0, c1):\n    # David did c0 more push-ups than Zachary\n    zachary_push_ups = c1 - c0\n    # Total push-ups done by both\n    total_push_ups = c1 + zachary_push_ups\n    return total_push_ups", "mapping": {"c0": 56.0, "c1": 38.0}}
{"question": "Danny collects bottle caps and wrappers. He found c0 bottle caps and c1 wrappers at the park. Now he has c2 bottle caps and c3 wrappers in his collection.How many more wrappers than bottle caps does danny have now?", "answer": [16.0], "response": "def wrapper_difference(c0, c1, c2, c3):\n    #calculate the number of wrappers and bottle caps Danny had before\n    total_caps = c0\n    total_wrappers = c1\n\n    #calculate the number of wrappers and bottle caps Danny has now\n    new_caps = c2\n    new_wrappers = c3\n\n    #calculate the difference between the number of wrappers and bottle caps Danny has now\n    wrapper_diff = new_wrappers - total_wrappers\n    cap_diff = new_caps - total_caps\n\n    #calculate the difference between the number of wrappers and bottle caps Danny had before\n    diff = wrapper_diff - cap_diff\n\n    return diff", "mapping": {"c0": 10.0, "c1": 62.0, "c2": 27.0, "c3": 43.0}}
{"question": "Tiffany was collecting cans for recycling. On monday she had c0 bags of cans. She found c1 bags of cans on the next day and c2 bags of cans the day after that.How many bags did she find after monday?", "answer": [14.0], "response": "def find_bags(c0, c1, c2):\n    #Tiffany had c0 bags of cans on Monday\n    bags_monday = c0\n\n    #She found c1 bags of cans on the next day\n    bags_tuesday = c1\n\n    #She found c2 bags of cans the day after that\n    bags_wednesday = c2\n\n    #The total number of bags she found after Monday can be calculated by adding the number of bags she found on Tuesday and Wednesday to the number of bags she had on Monday\n    total_bags = bags_monday + bags_tuesday + bags_wednesday\n\n    return total_bags", "mapping": {"c0": 8.0, "c1": 10.0, "c2": 4.0}}
{"question": "Faye was placing her pencils into rows with c0 pencils in each row. She had c1 packs of pencils each one having c2 pencils.How many rows could she make?", "answer": [42.0], "response": "def pencil_rows(c0, c1, c2):\n    #calculate the total number of pencils Faye has\n    total_pencils = c1 * c2\n\n    #calculate the number of rows she can make by dividing the total number of pencils by the number of pencils in each row\n    rows = total_pencils // c0\n\n    return rows", "mapping": {"c0": 16.0, "c1": 28.0, "c2": 24.0}}
{"question": "c0 birds and c1 storks were sitting on the fence. c2 more storks came to join them.How many more storks than birds are sitting on the fence?", "answer": [5.0], "response": "def storks_vs_birds(c0, c1, c2):\n    #calculate the total number of birds and storks before the new storks arrived\n    total_birds_storks_before = c0 + c1\n    #calculate the total number of storks after the new storks arrived\n    total_storks_after = c1 + c2\n    #calculate the difference between the total number of storks and birds after the new storks arrived\n    difference = total_storks_after - total_birds_storks_before\n    return difference", "mapping": {"c0": 4.0, "c1": 3.0, "c2": 6.0}}
{"question": "Jessie weighed c0 kilograms. After she started to go jogging everyday she lost c1 kilograms in the first week and c2 kilograms in the second week.How much does she weigh now?", "answer": [4.0], "response": "def weight_after_jogging(c0, c1, c2):\n    #calculate the weight after the first week\n    weight_after_week1 = c0 - c1\n\n    #calculate the weight after the second week\n    weight_after_week2 = weight_after_week1 - c2\n\n    return weight_after_week2", "mapping": {"c0": 114.0, "c1": 50.0, "c2": 60.0}}
{"question": "c0 packs of dvds can be bought with c1 dollars.How much does each pack cost?", "answer": [20.0], "response": "def dvd_cost(c0, c1):\n    #calculate the cost per pack by dividing the total cost by the number of packs\n    cost_per_pack = c1 / c0\n    return cost_per_pack", "mapping": {"c0": 6.0, "c1": 120.0}}
{"question": "Julia played tag with c0 kids on monday, c1 kids on tuesday and c2 kids on wednesday.How many more kids did she play with on monday than on wednesday?", "answer": [6.0], "response": "def tag_difference(c0, c1, c2):\n    #calculate the difference between c0 and c2\n    difference = c0 - c2\n    return difference", "mapping": {"c0": 14.0, "c1": 2.0, "c2": 8.0}}
{"question": "There were c0 parents, c1 pupils and c2 teachers in the program.How many people were present in the program?", "answer": [1541.0], "response": "def program_attendance(c0, c1, c2):\n    #calculate the total number of people present in the program\n    total_attendance = c0 + c1 + c2\n\n    return total_attendance", "mapping": {"c0": 73.0, "c1": 724.0, "c2": 744.0}}
{"question": "At the stop c0 more people got on the train. Initially there were c1 people on the train.How many people are there on the train now?", "answer": [19.0], "response": "def train_people(c0, c1):\n    # add the number of people who got on the train to the initial number of people\n    total_people = c0 + c1\n\n    return total_people", "mapping": {"c0": 8.0, "c1": 11.0}}
{"question": "Frank had c0 pieces of candy. He lost c1 of them. If he put the remaining pieces into bags with c2 pieces in each bagHow many bags would he have?", "answer": [1.0], "response": "def candy_bags(c0, c1, c2):\n    #calculate the number of remaining candies after Frank lost some\n    remaining_candies = c0 - c1\n\n    #calculate the number of bags needed to store the remaining candies\n    bags_needed = remaining_candies // c2\n\n    #if there are any remaining candies that cannot fit into a full bag, add one more bag\n    if remaining_candies % c2 != 0:\n        bags_needed += 1\n\n    return bags_needed", "mapping": {"c0": 33.0, "c1": 24.0, "c2": 9.0}}
{"question": "Bryan took a look at his books as well. If he has c0 books distributed equally in c1 bookshelvesHow many books are there in each bookshelf?", "answer": [17.0], "response": "def bookshelves(c0, c1):\n    #calculate the number of books in each bookshelf by dividing the total number of books by the number of bookshelves\n    books_per_shelf = c0 // c1\n\n    return books_per_shelf", "mapping": {"c0": 34.0, "c1": 2.0}}
{"question": "A waiter had c0 customers. After some more arrived he had c1 customers.How many new customers arrived?", "answer": [5.0], "response": "def new_customers(c0, c1):\n    #calculate the number of new customers by subtracting the original number of customers from the new number of customers\n    new_customers = c1 - c0\n    return new_customers", "mapping": {"c0": 3.0, "c1": 8.0}}
{"question": "Brenda's mother made cookies for guests. If she prepared c0 cookies and each of them had c1 cookiesHow many guests did she prepare cookies for?", "answer": [2.0], "response": "def guests_prepared(c0, c1):\n    #each guest gets c1 cookies\n    cookies_per_guest = c1\n\n    #total number of guests can be calculated by dividing the total number of cookies by the number of cookies per guest\n    guests = c0 // cookies_per_guest\n\n    return guests", "mapping": {"c0": 38.0, "c1": 19.0}}
{"question": "They decided to hold the party in their backyard. They have some sets of tables, each having the c0 chairs. If there are a total of c1 chairs in the backyardHow many sets of tables do they have?", "answer": [3.0], "response": "def num_tables(c0, c1):\n    #calculate the number of tables by dividing the total number of chairs by the number of chairs per table\n    num_tables = c1 // c0\n    return num_tables", "mapping": {"c0": 3.0, "c1": 9.0}}
{"question": "Luke played a trivia game and scored c0 points. If he gained the c1 points in each roundHow many rounds did he play?", "answer": [14.0], "response": "def rounds_played(c0, c1):\n    # calculate the difference between the final score and the initial score\n    score_diff = c1 - c0\n    \n    # divide the score difference by the points earned per round to get the number of rounds played\n    rounds = score_diff / c1\n    \n    # round up to the nearest whole number using the ceil function from the math module\n    import math\n    rounds = math.ceil(rounds)\n    \n    return rounds", "mapping": {"c0": 154.0, "c1": 11.0}}
{"question": "Jack received c0 emails in the afternoon, c1 emails in the morning and some more in the evening. If he received a total of c2 emails in the dayHow many emails did jack receive in the evening?", "answer": [1.0], "response": "def evening_emails(c0, c1, c2):\n    #total number of emails received in the day\n    total_emails = c2\n\n    #number of emails received in the morning and afternoon\n    morning_afternoon_emails = c0 + c1\n\n    #number of emails received in the evening can be calculated by subtracting the morning and afternoon emails from the total emails\n    evening_emails = total_emails - morning_afternoon_emails\n\n    return evening_emails", "mapping": {"c0": 3.0, "c1": 6.0, "c2": 10.0}}
{"question": "There are c0 baskets of peaches. Each basket has c1 red peaches and c2 green peaches.How many peaches are in each basket?", "answer": [10.0], "response": "def PeachCount(c0, c1, c2):\n    #each basket has c1 red peaches and c2 green peaches\n    #the total number of peaches in each basket is the sum of red and green peaches\n    total_peaches = c1 + c2\n\n    #the number of peaches in each basket can be calculated by dividing the total number of peaches by the number of baskets\n    peach_count = total_peaches / c0\n\n    return peach_count", "mapping": {"c0": 65.0, "c1": 7.0, "c2": 3.0}}
{"question": "The school is planning a field trip. The school has c0 classrooms. There are c1 students in the school and c2 seats on each school bus. If c3 students do n't want to go for the tripHow many students are going on the trip?", "answer": [3.0], "response": "def field_trip(c0, c1, c2, c3):\n    #calculate the total number of seats on all the buses\n    total_seats = c0 * c2\n\n    #subtract the number of students who don't want to go from the total number of students\n    students_going = c1 - c3\n\n    #if there are more students than seats, only count the number of seats available\n    if students_going > total_seats:\n        students_going = total_seats\n\n    return students_going", "mapping": {"c0": 102.0, "c1": 11.0, "c2": 99.0, "c3": 8.0}}
{"question": "Jesse's room is c0 feet long and c1 feet wide. If she already has c2 square feet of carpetHow much more carpet does she need to cover the whole floor?", "answer": [149.0], "response": "def carpet_needed(c0, c1, c2):\n    #calculate the total area of the room\n    room_area = c0 * c1\n\n    #calculate the remaining area of the floor that needs to be covered with carpet\n    remaining_area = room_area - c2\n\n    return remaining_area", "mapping": {"c0": 11.0, "c1": 15.0, "c2": 16.0}}
{"question": "Jake has c0 fewer peaches and c1 more apples than Steven. Steven has c2 peaches and c3 apples.How many more peaches than apples does Steven have?", "answer": [1.0], "response": "def Problem(c0, c1, c2, c3):\n    #Jake has c0 fewer peaches than Steven\n    jake_peaches = c2 - c0\n\n    #Jake has c1 more apples than Steven\n    jake_apples = c3 + c1\n\n    #Steven has c2 peaches and c3 apples\n    steven_peaches = c2\n    steven_apples = c3\n\n    #calculate the difference between Steven's peaches and apples\n    difference = steven_peaches - steven_apples\n\n    return difference", "mapping": {"c0": 6.0, "c1": 8.0, "c2": 17.0, "c3": 16.0}}
{"question": "Danny collects bottle caps. He threw away c0 of the old ones at the park while he found c1 bottle caps new ones. Now he has c2 bottle caps in his collection.How many bottle caps did danny have at first?", "answer": [69.0], "response": "def bottle_caps(c0, c1, c2):\n    # Danny threw away c0 old bottle caps and found c1 new ones\n    # So the total change in his collection is c1 - c0\n    change = c1 - c0\n\n    # To get the original number of bottle caps, we need to subtract the change from c2\n    original = c2 - change\n\n    return original", "mapping": {"c0": 60.0, "c1": 58.0, "c2": 67.0}}
{"question": "Nell collects baseball cards. She had c0 cards. She gave c1 cards to John and yet some more to Jeff. Now she has c2 cards left.How many cards did Nell give to Jeff?", "answer": [168.0], "response": "def cards_given_to_jeff(c0, c1, c2):\n    # Nell gave c1 cards to John\n    cards_given_to_john = c1\n\n    # Nell has c2 cards left after giving some to Jeff\n    cards_left = c2\n\n    # The number of cards Nell gave to Jeff can be calculated by subtracting the cards given to John and the cards left from the original number of cards\n    cards_given_to_jeff = c0 - cards_given_to_john - cards_left\n\n    return cards_given_to_jeff", "mapping": {"c0": 573.0, "c1": 195.0, "c2": 210.0}}
{"question": "Next on his checklist is wax to stick the feathers together. If he currently has c0 g of wax and the feathers require a total of c1 g of waxHow many more grams of wax does he need?", "answer": [481.0], "response": "def wax_needed(c0, c1):\n    #calculate the difference between the required amount of wax and the current amount of wax\n    wax_needed = c1 - c0\n    return wax_needed", "mapping": {"c0": 11.0, "c1": 492.0}}
{"question": "Winter is almost here and most animals are migrating to warmer countries. There are c0 bird families living near the mountain. c1 bird families flew away for winter and c2 new bird families came to live near the mountain from the arctic.How many bird families were left near the mountain?", "answer": [14.0], "response": "def bird_families(c0, c1, c2):\n    #calculate the number of bird families left near the mountain\n    left = c0 - c1 + c2\n    return left", "mapping": {"c0": 49.0, "c1": 59.0, "c2": 24.0}}
{"question": "Steven has c0 peaches. Jake has c1 fewer peaches than Steven and c2 more peaches than Jill.How many peaches does Jake have?", "answer": [7.0], "response": "def JakePeaches(c0, c1, c2):\n    #Jake has c1 fewer peaches than Steven\n    jake_peaches = c0 - c1\n\n    #Jake has c2 more peaches than Jill\n    jill_peaches = jake_peaches - c2\n\n    #The total number of peaches Jake has is the number of peaches he has plus the number of peaches Jill has\n    total_peaches = jake_peaches + jill_peaches\n\n    return total_peaches", "mapping": {"c0": 19.0, "c1": 12.0, "c2": 72.0}}
{"question": "Josh had some marbles in his collection. He lost c0 marbles. If he has c1 marbles nowHow many marbles did he have in his collection?", "answer": [33.0], "response": "def marbles_in_collection(c0, c1):\n    # Josh had c1 marbles after losing c0 marbles\n    # So, the total number of marbles he had in his collection before losing any would be c1 + c0\n    total_marbles = c1 + c0\n    return total_marbles", "mapping": {"c0": 21.0, "c1": 12.0}}
{"question": "He had c0 aquariums for saltwater animals and c1 aquariums for freshwater animals. Each aquarium has c2 animals in it.How many animals does he have in total?", "answer": [1463.0], "response": "def total_animals(c0, c1, c2):\n    #calculate the total number of animals in saltwater aquariums\n    saltwater_animals = c0 * c2\n\n    #calculate the total number of animals in freshwater aquariums\n    freshwater_animals = c1 * c2\n\n    #calculate the total number of animals\n    total_animals = saltwater_animals + freshwater_animals\n\n    return total_animals", "mapping": {"c0": 15.0, "c1": 62.0, "c2": 19.0}}
{"question": "Jessie currently weighs c0 kilograms. After she started to go jogging everyday she lost c1 kilograms.How much did she weigh before starting to jog?", "answer": [128.0], "response": "def weight_before_jogging(c0, c1):\n    # Jessie currently weighs c0 kilograms\n    current_weight = c0\n\n    # After she started to go jogging everyday she lost c1 kilograms\n    weight_loss = c1\n\n    # Her weight before starting to jog can be calculated by adding the weight loss to her current weight\n    weight_before_jogging = current_weight + weight_loss\n\n    return weight_before_jogging", "mapping": {"c0": 27.0, "c1": 101.0}}
{"question": "Dan has $ c0 left with him after he bought a candy bar for $ 2.How much money did he have initially?", "answer": [5.0], "response": "def initial_money(c0):\n    # Dan spent $2 on a candy bar\n    spent = 2\n\n    # Dan's initial money can be calculated by adding the amount he spent on the candy bar to the money he has left\n    initial = c0 + spent\n\n    return initial", "mapping": {"c0": 3.0}}
{"question": "Zachary did c0 push-ups and c1 crunches in gym class today. David did c2 more push-ups but c3 less crunches than zachary.How many push-ups and crunches did Zachary do?", "answer": [67.0], "response": "def gym_class(c0, c1, c2, c3):\n    # Zachary did c0 push-ups and c1 crunches\n    zachary_pushups = c0\n    zachary_crunches = c1\n\n    # David did c2 more push-ups but c3 less crunches than Zachary\n    david_pushups = c0 + c2\n    david_crunches = c1 - c3\n\n    # Calculate Zachary's total push-ups and crunches\n    total_pushups = zachary_pushups + david_pushups\n    total_crunches = zachary_crunches + david_crunches\n\n    return total_pushups, total_crunches", "mapping": {"c0": 53.0, "c1": 14.0, "c2": 17.0, "c3": 10.0}}
{"question": "A book has c0 chapters. The first chapter is c1 pages long the second chapter is c2 pages long and the third chapter is c3 pages long.How many more pages does the first chapter have than the second chapter?", "answer": [68.0], "response": "def chapter_pages(c0, c1, c2, c3):\n    #calculate the total number of pages in the book\n    total_pages = c1 + c2 + c3\n\n    #calculate the average number of pages per chapter\n    avg_pages = total_pages / c0\n\n    #calculate the number of pages in the second chapter\n    second_chapter_pages = avg_pages * 2\n\n    #calculate the number of pages in the first chapter\n    first_chapter_pages = c1\n\n    #calculate the difference in pages between the first and second chapter\n    difference = first_chapter_pages - second_chapter_pages\n\n    return difference", "mapping": {"c0": 3.0, "c1": 91.0, "c2": 23.0, "c3": 25.0}}
{"question": "Danny collects bottle caps. He found c0 bottle caps at the park while he threw away c1 old ones. Now he has c2 bottle caps in his collection.How many more bottle caps did danny find at the park than those he threw away?", "answer": [1.0], "response": "def BottleCaps(c0, c1, c2):\n    #Danny found c0 bottle caps at the park\n    found = c0\n\n    #He threw away c1 old ones\n    thrown_away = c1\n\n    #Now he has c2 bottle caps in his collection\n    total = c2\n\n    #The difference between the number of bottle caps he found and the number he threw away is the number of bottle caps he kept\n    kept = found - thrown_away\n\n    #The number of additional bottle caps he found is the difference between the total number of bottle caps he has now and the number he kept\n    additional = total - kept\n\n    return additional", "mapping": {"c0": 36.0, "c1": 35.0, "c2": 22.0}}
{"question": "Dan has $ c0. For a total of $ c1 he bought c2 candy bar each one costing the same amount of money.How much money is left?", "answer": [1.0], "response": "def remaining_money(c0, c1, c2):\n    #calculate the total cost of the candy bars\n    total_cost = c1\n\n    #calculate the cost of one candy bar\n    cost_per_bar = total_cost / c2\n\n    #calculate how much money is left after buying the candy bars\n    remaining = c0 - total_cost\n\n    return remaining", "mapping": {"c0": 4.0, "c1": 3.0, "c2": 10.0}}
{"question": "Mary is baking a cake. The recipe calls for c0 cups of sugar and c1 cups of flour. She already put in c2 cups of flour.How many more cups of flour than cups of sugar does she need to add now?", "answer": [1.0], "response": "def flour_to_sugar(c0, c1, c2):\n    #calculate how much more flour is needed\n    flour_needed = c1 - c2\n\n    #calculate how much sugar is needed\n    sugar_needed = c0\n\n    #calculate the difference between the amount of flour needed and the amount of sugar needed\n    difference = flour_needed - sugar_needed\n\n    return difference", "mapping": {"c0": 6.0, "c1": 9.0, "c2": 2.0}}
{"question": "At the zoo, a cage had c0 snakes and c1 alligators. If c2 snakes were hidingHow many snakes were not hiding?", "answer": [31.0], "response": "def num_snakes_not_hiding(c0, c1, c2):\n    #total number of snakes in the cage\n    total_snakes = c0\n\n    #total number of alligators in the cage\n    total_alligators = c1\n\n    #number of snakes hiding\n    snakes_hiding = c2\n\n    #number of snakes not hiding can be calculated by subtracting the number of snakes hiding from the total number of snakes\n    snakes_not_hiding = total_snakes - snakes_hiding\n\n    return snakes_not_hiding", "mapping": {"c0": 95.0, "c1": 61.0, "c2": 64.0}}
{"question": "Emily is making bead necklaces for her friends. She was able to make c0 necklaces and she had c1 beads.How many beads did each necklace need?", "answer": [3.0], "response": "def beads_per_necklace(c0, c1):\n    # calculate the number of beads per necklace by dividing the total number of beads by the number of necklaces\n    beads_per_necklace = c1 / c0\n    return beads_per_necklace", "mapping": {"c0": 6.0, "c1": 18.0}}
{"question": "Tiffany was collecting cans for recycling. On monday she had c0 bags of cans. The next day she found c1 more bags of cans and c2 bags of bottles.How many bags of cans did she have altogether?", "answer": [10.0], "response": "def total_bags(c0, c1, c2):\n    # add the number of bags of cans she had on Monday with the number of bags she found the next day\n    total_cans = c0 + c1\n    # add the number of bags of bottles she found the next day\n    total_bottles = c2\n    # add the total number of bags of cans and bottles\n    total_bags = total_cans + total_bottles\n    return total_bags", "mapping": {"c0": 3.0, "c1": 7.0, "c2": 44.0}}
{"question": "Robin has some packages of gum. There are c0 pieces in each package. Robin has c1 extra pieces of gum. In all the number of pieces of gums robin has is 41.How many packages does Robin have?", "answer": [5.0], "response": "def gum_packages(c0, c1):\n    #total number of gum pieces\n    total_gum = 41\n\n    #number of extra pieces of gum\n    extra_gum = c1\n\n    #number of gum pieces in each package\n    gum_per_package = c0\n\n    #total number of packages\n    num_packages = (total_gum - extra_gum) // gum_per_package\n\n    return num_packages", "mapping": {"c0": 7.0, "c1": 6.0}}
{"question": "Baker made c0 cakes. If his friend bought c1 cakes from himHow many cakes would baker still have?", "answer": [15.0], "response": "def cakes_left(c0, c1):\n    #Baker made c0 cakes\n    cakes_made = c0\n\n    #His friend bought c1 cakes from him\n    cakes_bought = c1\n\n    #The number of cakes he would still have can be calculated by subtracting the number of cakes bought from the number of cakes made\n    cakes_left = cakes_made - cakes_bought\n\n    return cakes_left", "mapping": {"c0": 155.0, "c1": 140.0}}
{"question": "c0 children were riding on the bus. At the bus stop some more children got on the bus. Then there were c1 children altogether on the bus.How many more children are on the bus now than there were before the bus stop?", "answer": [8.0], "response": "def children_on_bus(c0, c1):\n    #calculate the difference between the number of children before and after the bus stop\n    difference = c1 - c0\n    return difference", "mapping": {"c0": 2.0, "c1": 10.0}}
{"question": "Danny collects bottle caps and wrappers. He found c0 bottle caps and c1 wrappers at the park. Now he has c2 bottle caps and c3 wrappers in his collection.How many bottle caps did danny have at first?", "answer": [6.0], "response": "def initial_caps(c0, c1, c2, c3):\n    # Danny found c0 bottle caps and c1 wrappers at the park\n    found_caps = c0\n\n    # Now he has c2 bottle caps and c3 wrappers in his collection\n    total_caps = c2\n\n    # Danny's initial number of bottle caps can be calculated by subtracting the number of found caps from the total number of caps in his collection\n    initial = total_caps - found_caps\n\n    return initial", "mapping": {"c0": 22.0, "c1": 8.0, "c2": 28.0, "c3": 63.0}}
{"question": "For the walls of the house he would use c0 large planks of wood. If each plank of wood needs c1 pieces of nails to be securedHow many planks does John need for the house wall?", "answer": [8.0], "response": "def num_planks(c0, c1):\n    #each plank needs c1 pieces of nails\n    nails_per_plank = c1\n\n    #calculate the total number of nails needed for all planks\n    total_nails = c0 * nails_per_plank\n\n    #calculate the number of planks needed by dividing the total number of nails by the number of nails per plank\n    num_planks = total_nails // nails_per_plank\n\n    return num_planks", "mapping": {"c0": 8.0, "c1": 74.0}}
{"question": "Paco ate c0 cookies. If he had c1 cookies initiallyHow many cookies did Paco have left?", "answer": [1.0], "response": "def cookies_left(c0, c1):\n    # Paco initially had c1 cookies\n    initial_cookies = c1\n\n    # Paco ate c0 cookies\n    cookies_eaten = c0\n\n    # The number of cookies Paco has left can be calculated by subtracting the number of cookies he ate from the initial number of cookies\n    cookies_left = initial_cookies - cookies_eaten\n\n    return cookies_left", "mapping": {"c0": 36.0, "c1": 37.0}}
{"question": "Bobby had c0 pieces of candy. He ate c1 pieces of candy. Then he ate c2 more.How many pieces of candy does he still have left?", "answer": [7.0], "response": "def candy_left(c0, c1, c2):\n    # Bobby starts with c0 pieces of candy\n    # He eats c1 pieces of candy\n    # Then he eats c2 more pieces of candy\n    # The total number of pieces he ate is c1 + c2\n    eaten = c1 + c2\n\n    # The number of pieces he has left is c0 minus the number he ate\n    left = c0 - eaten\n\n    return left", "mapping": {"c0": 21.0, "c1": 5.0, "c2": 9.0}}
{"question": "Baker made c0 cakes. He sold some of them. If he still has c1 cakes leftHow many cakes did baker sell?", "answer": [41.0], "response": "def cakes_sold(c0, c1):\n    # Baker made c0 cakes\n    cakes_before = c0\n\n    # After selling some cakes, he has c1 cakes left\n    cakes_after = c1\n\n    # The number of cakes he sold can be calculated by subtracting the number of cakes left from the original number of cakes\n    sold = cakes_before - cakes_after\n\n    return sold", "mapping": {"c0": 54.0, "c1": 13.0}}
{"question": "During summer break c0 kids from Lawrence county go to camp and the other c1 kids stay home.How many more kids spent their summer break at the camp compared to those who stayed home?", "answer": [150780.0], "response": "def summer_camp(c0, c1):\n    #calculate the difference between the number of kids who went to camp and those who stayed home\n    difference = c0 - c1\n\n    return difference", "mapping": {"c0": 819058.0, "c1": 668278.0}}
{"question": "Randy has c0 blocks. He uses c1 blocks to build a tower and c2 blocks to build a house.How many blocks are left?", "answer": [54.0], "response": "def blocks_left(c0, c1, c2):\n    # Randy starts with c0 blocks\n    blocks_start = c0\n\n    # Randy uses c1 blocks to build a tower\n    blocks_tower = c1\n\n    # Randy uses c2 blocks to build a house\n    blocks_house = c2\n\n    # The number of blocks left can be calculated by subtracting the total number of blocks used from the starting number of blocks\n    blocks_left = blocks_start - (blocks_tower + blocks_house)\n\n    return blocks_left", "mapping": {"c0": 79.0, "c1": 14.0, "c2": 11.0}}
{"question": "Every day Ryan spends c0 hours on learning english c1 hours on learning chinese and c2 hours on learning spanish.How many hours does he spend on learning english, chinese and spanish in all?", "answer": [16.0], "response": "def total_hours(c0, c1, c2):\n    #add up the hours spent on each language\n    total = c0 + c1 + c2\n    return total", "mapping": {"c0": 6.0, "c1": 7.0, "c2": 3.0}}
{"question": "c0 birds were sitting on the fence. Some more birds came to join them. If there are a total of c1 birds on the fence nowHow many more birds had come to sit on the fence?", "answer": [4.0], "response": "def bird_problem(c0, c1):\n    #calculate the number of birds that joined the original group\n    new_birds = c1 - c0\n    return new_birds", "mapping": {"c0": 2.0, "c1": 6.0}}
{"question": "In a school there are c0 girls and the rest are boys. If there are c1 more boys than girlsHow many boys are there in that school?", "answer": [1145.0], "response": "def boys_in_school(c0, c1):\n    #total number of students in the school\n    total_students = c0 + c1\n\n    #number of boys in the school\n    boys = total_students - c0\n\n    return boys", "mapping": {"c0": 635.0, "c1": 510.0}}
{"question": "Jesse's room is c0 feet long and c1 feet wide.How much longer is her room than it is wide?", "answer": [1.0], "response": "def room_difference(c0, c1):\n    #calculate the difference between the length and width of the room\n    difference = c0 - c1\n    return difference", "mapping": {"c0": 12.0, "c1": 11.0}}
{"question": "There are c0 different books and c1 different movies in the ' crazy silly school ' series. If you read c2 of the books and watched c3 of the moviesHow many more books than movies are there in the ' crazy silly school ' series?", "answer": [2.0], "response": "def book_movie_difference(c0, c1, c2, c3):\n    #calculate the number of books and movies left after reading/watching\n    books_left = c0 - c2\n    movies_left = c1 - c3\n\n    #calculate the difference between the number of books and movies left\n    difference = books_left - movies_left\n\n    return difference", "mapping": {"c0": 16.0, "c1": 14.0, "c2": 19.0, "c3": 13.0}}
{"question": "You had c0 bags with equal number of cookies. If you had c1 cookies and c2 candies in totalHow many bags of cookies do you have?", "answer": [2.0], "response": "def bags_of_cookies(c0, c1, c2):\n    #calculate the total number of cookies\n    total_cookies = c1\n\n    #calculate the number of cookies in each bag\n    cookies_per_bag = total_cookies // c0\n\n    #calculate the total number of bags of cookies\n    bags_of_cookies = c2 // cookies_per_bag\n\n    return bags_of_cookies", "mapping": {"c0": 14.0, "c1": 28.0, "c2": 86.0}}
{"question": "Jerry had c0 action figures and c1 books on a shelf in his room. Later he added c2 more action figures to the shelf.How many more books than action figures were on his shelf?", "answer": [4.0], "response": "def book_vs_action(c0, c1, c2):\n    #calculate the total number of action figures on the shelf after adding c2 more\n    total_action_figures = c0 + c2\n\n    #calculate the difference between the number of books and the total number of action figures\n    difference = c1 - total_action_figures\n\n    return difference", "mapping": {"c0": 2.0, "c1": 10.0, "c2": 4.0}}
{"question": "Mary is baking a cake. The recipe calls for c0 cups of sugar and c1 cups of flour. She already put in some cups of flour. If she still needs c2 more cups of flourHow many cups of flour did she put in?", "answer": [1.0], "response": "def flour_used(c0, c1, c2):\n    #calculate the remaining cups of flour needed\n    remaining_flour = c1 + c2\n\n    #calculate the cups of flour already used\n    used_flour = remaining_flour - c0\n\n    return used_flour", "mapping": {"c0": 5.0, "c1": 13.0, "c2": 12.0}}
{"question": "Rachel had to complete c0 pages of math homework, c1 pages of reading homework and c2 more pages of biology homework.How many pages of math and reading homework did she have to complete?", "answer": [20.0], "response": "def homework_pages(c0, c1, c2):\n    # Rachel had to complete c0 pages of math homework\n    math_pages = c0\n\n    # Rachel had to complete c1 pages of reading homework\n    reading_pages = c1\n\n    # Rachel had to complete c2 more pages of biology homework\n    biology_pages = c2\n\n    # Rachel had to complete math and reading homework\n    math_reading_pages = math_pages + reading_pages\n\n    return math_reading_pages", "mapping": {"c0": 9.0, "c1": 11.0, "c2": 29.0}}
{"question": "Paige was helping her mom plant flowers in c0 flowerbeds. They planted c1 seeds altogether. If they put same number of seeds in each flower bedHow many seeds did they plant in each flowerbed?", "answer": [4.0], "response": "def Problem(c0, c1):\n    #they planted c1 seeds altogether\n    total_seeds = c1\n\n    #they planted the same number of seeds in each flower bed\n    seeds_per_bed = total_seeds / c0\n\n    return seeds_per_bed", "mapping": {"c0": 8.0, "c1": 32.0}}
{"question": "He then went to see the oranges being harvested. He found out that they harvest c0 sacks of unripe oranges and c1 sacks of ripe oranges per day.How many sacks of ripe oranges will they have after c2 days of harvest?", "answer": [365.0], "response": "def ripe_oranges(c0, c1, c2):\n    #calculate the total number of ripe oranges after c2 days of harvest\n    total_ripe_oranges = c1 * c2\n\n    return total_ripe_oranges", "mapping": {"c0": 25.0, "c1": 5.0, "c2": 73.0}}
{"question": "Paul had c0 books. After giving c1 books to his friend and selling some books in a garage sale he had c2 books left.How many books did he sell in the garage sale?", "answer": [27.0], "response": "def books_sold(c0, c1, c2):\n    #Paul had c0 books\n    books_before = c0\n\n    #After giving c1 books to his friend, he had c0 - c1 books left\n    books_left = c0 - c1\n\n    #He sold some books in a garage sale and had c2 books left\n    books_after = c2\n\n    #The number of books he sold can be calculated by subtracting the number of books left after giving some to his friend from the number of books he had after the garage sale\n    sold = books_left - books_after\n\n    return sold", "mapping": {"c0": 134.0, "c1": 39.0, "c2": 68.0}}
{"question": "Paco had c0 salty cookies and c1 sweet cookies. He ate c2 sweet cookies and c3 salty cookies.How many sweet cookies did Paco have left?", "answer": [19.0], "response": "def remaining_sweet_cookies(c0, c1, c2, c3):\n    #calculate the number of sweet cookies left after Paco ate some\n    sweet_left = c1 - c2\n\n    return sweet_left", "mapping": {"c0": 97.0, "c1": 34.0, "c2": 15.0, "c3": 56.0}}
{"question": "The school is planning a field trip. The school has c0 classrooms. c1 school buses are fully filled with c2 seats on each school bus.How many students are in the school?", "answer": [11210.0], "response": "def num_students(c0, c1, c2):\n    #calculate the total number of seats on all the school buses\n    total_seats = c1 * c2\n\n    #calculate the maximum number of students that can fit in all the classrooms\n    max_students = c0 * 30 #assuming each classroom can fit 30 students\n\n    #return the minimum of the total number of seats and the maximum number of students\n    return min(total_seats, max_students)", "mapping": {"c0": 84.0, "c1": 95.0, "c2": 118.0}}
{"question": "Faye was placing her pencils and crayons into c0 rows with c1 crayons and c2 pencils in each row.How many pencils does she have?", "answer": [720.0], "response": "def count_pencils(c0, c1, c2):\n    #calculate the total number of rows\n    total_rows = c0\n\n    #calculate the total number of pencils\n    total_pencils = total_rows * c2\n\n    return total_pencils", "mapping": {"c0": 30.0, "c1": 71.0, "c2": 24.0}}
{"question": "Faye was placing c0 pencils equally into c1 rows.How many pencils did she place in each row?", "answer": [4.0], "response": "def pencils_per_row(c0, c1):\n    #divide the total number of pencils by the number of rows to get the number of pencils per row\n    pencils_per_row = c0 / c1\n    return pencils_per_row", "mapping": {"c0": 12.0, "c1": 3.0}}
{"question": "Julia played tag with c0 kids on monday, c1 kids on tuesday and c2 kids on wednesday.How many more kids did she play with on monday and tuesday than on wednesday?", "answer": [26.0], "response": "def tag_game(c0, c1, c2):\n    #calculate the total number of kids Julia played with on Monday and Tuesday\n    total_mon_tue = c0 + c1\n    #calculate the difference between the total number of kids on Monday and Tuesday and the number of kids on Wednesday\n    difference = total_mon_tue - c2\n    return difference", "mapping": {"c0": 15.0, "c1": 18.0, "c2": 7.0}}
{"question": "Baker made c0 cakes. If he sold c1 of themHow many more cakes did baker make than those he sold?", "answer": [82.0], "response": "def cakes_difference(c0, c1):\n    #calculate the difference between the number of cakes made and the number of cakes sold\n    difference = c0 - c1\n    return difference", "mapping": {"c0": 133.0, "c1": 51.0}}
{"question": "There are c0 bananas in Philip's banana collection. If the bananas are organized into groups of size c1 How many groups are there?", "answer": [9.0], "response": "def banana_groups(c0, c1):\n    #calculate the number of groups by dividing the total number of bananas by the size of each group\n    groups = c0 // c1\n    return groups", "mapping": {"c0": 18.0, "c1": 2.0}}
{"question": "Olivia spent c0 dollars at a supermarket. If there were c1 dollars in her wallet initiallyHow much money does she have left?", "answer": [90.0], "response": "def remaining_money(c0, c1):\n    # Olivia spent c0 dollars at the supermarket\n    spent = c0\n\n    # There were c1 dollars in her wallet initially\n    initial_money = c1\n\n    # Calculate how much money she has left by subtracting the amount spent from the initial amount\n    remaining = initial_money - spent\n\n    return remaining", "mapping": {"c0": 38.0, "c1": 128.0}}
{"question": "Baker sold c0 cakes. If he had made c1 cakes initiallyHow many cakes would baker still have?", "answer": [4.0], "response": "def cakes_left(c0, c1):\n    # Baker sold c0 cakes\n    cakes_sold = c0\n\n    # If he had made c1 cakes initially\n    initial_cakes = c1\n\n    # Calculate how many cakes baker still has\n    cakes_left = initial_cakes - cakes_sold\n\n    return cakes_left", "mapping": {"c0": 44.0, "c1": 48.0}}
{"question": "Every day Ryan spends c0 hours on learning chinese and some more hours on learning english. If he spends c1 hours more on learning english than on learning chineseHow many hours does he spend on learning english?", "answer": [7.0], "response": "def EnglishHours(c0, c1):\n    #Ryan spends c0 hours on learning chinese\n    chinese_hours = c0\n\n    #Ryan spends c1 hours more on learning english than on learning chinese\n    english_hours = chinese_hours + c1\n\n    return english_hours", "mapping": {"c0": 5.0, "c1": 2.0}}
{"question": "Rachel had to complete c0 pages of math homework. If she had to complete c1 more pages of math homework than reading homeworkHow many pages did she have to complete in all?", "answer": [13.0], "response": "def total_pages(c0, c1):\n    # Rachel had to complete c0 pages of math homework\n    math_pages = c0\n\n    # Rachel had to complete c1 more pages of math homework than reading homework\n    reading_pages = c1 - math_pages\n\n    # Total pages Rachel had to complete\n    total = math_pages + reading_pages\n\n    return total", "mapping": {"c0": 8.0, "c1": 3.0}}
{"question": "Dan has $ c0. He bought a chocolate for $ c1 and a candy bar for $ 7.How much money did he spend to buy candy bar than he did to buy chocolate?", "answer": [4.0], "response": "def candy_cost(c0, c1):\n    # Dan bought a chocolate for c1 dollars\n    chocolate_cost = c1\n\n    # Dan bought a candy bar for 7 dollars\n    candy_bar_cost = 7\n\n    # Dan spent more money on the candy bar than on the chocolate by the difference between the two costs\n    difference = candy_bar_cost - chocolate_cost\n\n    return difference", "mapping": {"c0": 5.0, "c1": 3.0}}
{"question": "Jessie weighed c0 kilograms. After she started to go jogging everyday she lost c1 kilograms in the first week and c2 kilograms in the second week.How much did she weigh after the first week of jogging?", "answer": [36.0], "response": "def weight_after_first_week(c0, c1):\n    #Jessie weighed c0 kilograms before jogging\n    weight_before = c0\n\n    #She lost c1 kilograms in the first week of jogging\n    weight_loss_first_week = c1\n\n    #Her weight after the first week can be calculated by subtracting the weight loss from her original weight\n    weight_after_first_week = weight_before - weight_loss_first_week\n\n    return weight_after_first_week", "mapping": {"c0": 92.0, "c1": 56.0, "c2": 99.0}}
{"question": "Julia played tag with c0 kids on monday, c1 kids on tuesday and c2 kids on wednesday.How many kids did she play with on tuesday and wednesday?", "answer": [30.0], "response": "def tag_players(c0, c1, c2):\n    #Julia played with c1 kids on Tuesday and c2 kids on Wednesday\n    tuesday_players = c1\n    wednesday_players = c2\n\n    #return the total number of kids Julia played with on Tuesday and Wednesday\n    return tuesday_players + wednesday_players", "mapping": {"c0": 2.0, "c1": 14.0, "c2": 16.0}}
{"question": "c0 children were riding on the bus. At the bus stop c1 children got off the bus while some more got on the bus. Then there were c2 children altogether on the bus.How many children got on the bus at the bus stop?", "answer": [5.0], "response": "def Problem(c0, c1, c2):\n    #c0 children were originally on the bus\n    #c1 children got off the bus at the bus stop\n    #c2 children were left on the bus after some more got on\n\n    #The number of children who got on the bus can be calculated by subtracting the number of children who got off from the original number of children and then subtracting that from the final number of children\n    got_on = c2 - (c0 - c1)\n\n    return got_on", "mapping": {"c0": 21.0, "c1": 10.0, "c2": 16.0}}
{"question": "Baker made c0 cakes. Then he made c1 more cakes. He sold c2 of them.How many cakes would baker still have?", "answer": [67.0], "response": "def cakes_left(c0, c1, c2):\n    #Baker made c0 cakes and then made c1 more cakes\n    total_cakes = c0 + c1\n\n    #Baker sold c2 cakes\n    sold_cakes = c2\n\n    #The number of cakes baker would still have can be calculated by subtracting the number of sold cakes from the total number of cakes\n    cakes_left = total_cakes - sold_cakes\n\n    return cakes_left", "mapping": {"c0": 62.0, "c1": 149.0, "c2": 144.0}}
{"question": "Paul got a box of some crayons for his birthday. By the end of the school year he only had c0 crayons left since he had either lost or given away c1 of them.How many crayons did he get for his birthday?", "answer": [606.0], "response": "def crayons_received(c0, c1):\n    # Paul started with c0 crayons\n    starting_crayons = c0\n\n    # By the end of the school year, he only had c1 crayons left\n    ending_crayons = c1\n\n    # The number of crayons he lost or gave away can be calculated by subtracting the ending number from the starting number\n    lost_or_given_away = starting_crayons - ending_crayons\n\n    # The number of crayons he received for his birthday can be calculated by adding the lost/given away crayons to the ending number\n    received = starting_crayons + lost_or_given_away\n\n    return received", "mapping": {"c0": 291.0, "c1": 315.0}}
{"question": "Jack received c0 emails and c1 letters in the morning. He then received c2 emails and c3 letters in the afternoon.How many letters did jack receive in the day?", "answer": [13.0], "response": "def count_letters(c0, c1, c2, c3):\n    # add up the number of letters received in the morning and afternoon\n    total_letters = c1 + c3\n    return total_letters", "mapping": {"c0": 5.0, "c1": 6.0, "c2": 9.0, "c3": 7.0}}
{"question": "Lewis earns $ c0 every week during the c1 weeks of harvest. If he has to pay $ c2 rent every weekHow much money does he earn during harvest season?", "answer": [93899.0], "response": "def harvest_earnings(c0, c1, c2):\n    #calculate total earnings before rent\n    total_earnings = c0 * c1\n    #calculate total rent paid\n    total_rent = c2 * c1\n    #calculate earnings after rent\n    earnings_after_rent = total_earnings - total_rent\n    return earnings_after_rent", "mapping": {"c0": 403.0, "c1": 233.0, "c2": 49.0}}
{"question": "He then went to see the oranges being harvested. He found out that they harvest c0 sacks per day and that each sack containes c1 oranges.How many days will it take to harvest c2 sacks of oranges?", "answer": [5.0], "response": "def harvest_time(c0, c1, c2):\n    #calculate the total number of oranges in c2 sacks\n    total_oranges = c1 * c2\n\n    #calculate the number of days it will take to harvest c2 sacks\n    days = total_oranges // c0\n\n    #if there are any remaining oranges, add an extra day\n    if total_oranges % c0 != 0:\n        days += 1\n\n    return days", "mapping": {"c0": 16.0, "c1": 57.0, "c2": 80.0}}
{"question": "Robin has some packages of gum. There are c0 pieces in each package and a total of c1 pieces of gum.How many packages does Robin have?", "answer": [14.0], "response": "def gum_packages(c0, c1):\n    #calculate the number of packages by dividing the total number of gum pieces by the number of pieces in each package\n    packages = c1 // c0\n    return packages", "mapping": {"c0": 3.0, "c1": 42.0}}
{"question": "During the Arkansas and Texas tech game the Razorback t-shirt shop made $ c0 by selling c1 t-shirts.What is the cost of each t-shirt?", "answer": [43.0], "response": "def cost_per_shirt(c0, c1):\n    #calculate the cost per shirt by dividing the total revenue by the number of shirts sold\n    cost = c0/c1\n    return cost", "mapping": {"c0": 215.0, "c1": 5.0}}
{"question": "The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped c0 inches. The frog jumped c1 inches farther than the grasshopper and the mouse jumped c2 inches lesser than the frog.How far did the mouse jump?", "answer": [31.0], "response": "def jumping_contest(c0, c1, c2):\n    # The frog jumped c1 inches farther than the grasshopper\n    frog_jump = c0 + c1\n\n    # The mouse jumped c2 inches lesser than the frog\n    mouse_jump = frog_jump - c2\n\n    return mouse_jump", "mapping": {"c0": 25.0, "c1": 32.0, "c2": 26.0}}
{"question": "He then went to see the oranges being harvested. He found out that they harvest c0 sacks per day and discard c1 of them.How many oranges do they harvest per day if each sack contains c2 oranges?", "answer": [600.0], "response": "def oranges_harvested(c0, c1, c2):\n    #calculate the number of oranges harvested per day by multiplying the number of sacks harvested by the number of oranges per sack\n    oranges_per_day = (c0 - c1) * c2\n    return oranges_per_day", "mapping": {"c0": 76.0, "c1": 64.0, "c2": 50.0}}
{"question": "Jesse's room is c0 feet wide. If she needs a carpet of size c1 square feetWhat is the length of her room?", "answer": [2.0], "response": "def room_length(c0, c1):\n    #calculate the length of the room by dividing the area of the carpet by the width of the room\n    length = c1/c0\n    return length", "mapping": {"c0": 7.0, "c1": 14.0}}
{"question": "Every day Ryan spends c0 hours on learning english and c1 hours on learning chinese. If he learns for c2 daysHow many hours does he spend on learning english in all?", "answer": [12.0], "response": "def total_hours(c0, c1, c2):\n    #calculate the total hours spent on learning english by multiplying the daily hours by the number of days\n    english_hours = c0 * c2\n    return english_hours", "mapping": {"c0": 6.0, "c1": 5.0, "c2": 2.0}}
{"question": "Ed had c0 more marbles than Doug. Doug lost c1 of his marbles at the playground. If Ed had c2 marblesHow many more marbles did Ed have than Doug then?", "answer": [21.0], "response": "def marbles_difference(c0, c1, c2):\n    # Ed had c0 more marbles than Doug\n    ed_marbles = c0 + c2\n    doug_marbles = ed_marbles - c0\n\n    # Doug lost c1 of his marbles at the playground\n    doug_marbles -= c1\n\n    # Calculate the difference in marbles between Ed and Doug\n    difference = ed_marbles - doug_marbles\n\n    return difference", "mapping": {"c0": 10.0, "c1": 11.0, "c2": 45.0}}
{"question": "Carol was sending out birthday invitations to her friends. Each package of invitations she bought had c0 invitations in it and she bought c1 packs. If she sends invitations to only c2 friendsHow many invitations will be left?", "answer": [68.0], "response": "def leftover_invitations(c0, c1, c2):\n    #calculate the total number of invitations\n    total_invitations = c0 * c1\n\n    #subtract the number of invitations sent to friends from the total number of invitations\n    leftover = total_invitations - c2\n\n    return leftover", "mapping": {"c0": 10.0, "c1": 7.0, "c2": 2.0}}
{"question": "Rachel's tree had c0 apples initially. She picked some apples and now there are c1 apples left on the tree.How many apples did rachel pick?", "answer": [2.0], "response": "def apples_picked(c0, c1):\n    #initially there were c0 apples\n    initial_apples = c0\n\n    #now there are c1 apples left on the tree\n    remaining_apples = c1\n\n    #the number of apples picked can be calculated by subtracting the remaining apples from the initial apples\n    picked_apples = initial_apples - remaining_apples\n\n    return picked_apples", "mapping": {"c0": 4.0, "c1": 2.0}}
{"question": "Bobby ate c0 pieces of candy. Then he ate c1 more. He also ate c2 pieces of chocolate.How many pieces of candy did Bobby eat?", "answer": [70.0], "response": "def candy_eaten(c0, c1, c2):\n    # Bobby ate c0 pieces of candy initially\n    total_candy = c0\n\n    # Bobby ate c1 more pieces of candy\n    total_candy += c1\n\n    # Bobby also ate c2 pieces of chocolate\n    # We only want to count the candy, so we subtract c2 from the total\n    total_candy -= c2\n\n    return total_candy", "mapping": {"c0": 28.0, "c1": 42.0, "c2": 63.0}}
{"question": "The Razorback shop makes $ c0 dollars off each jersey and $ c1 off each t-shirt. During the Arkansas and Texas tech game they sold c2 t-shirts and c3 jerseys.How much more does a jersey cost than a t-shirt?", "answer": [90.0], "response": "def jersey_cost_difference(c0, c1, c2, c3):\n    #calculate the total revenue from selling jerseys and t-shirts\n    total_revenue = (c0 * c3) + (c1 * c2)\n\n    #calculate the average cost per item sold\n    average_cost = total_revenue / (c2 + c3)\n\n    #calculate the difference in cost between a jersey and a t-shirt\n    cost_difference = c0 - c1\n\n    #calculate the difference in price between a jersey and a t-shirt\n    price_difference = cost_difference / average_cost\n\n    return price_difference", "mapping": {"c0": 115.0, "c1": 25.0, "c2": 113.0, "c3": 78.0}}
{"question": "Bobby had c0 pieces of candy. He ate some pieces of candy. Then he ate c1 more. If he still has c2 pieces of candy leftHow many pieces of candy had he eaten at the start?", "answer": [9.0], "response": "def candy_eaten(c0, c1, c2):\n    # Bobby had c0 pieces of candy\n    # He ate some pieces of candy, so the number of pieces he had left is c0 - eaten\n    # Then he ate c1 more, so the number of pieces he had left is c0 - eaten + c1\n    # If he still has c2 pieces of candy left, then the number of pieces he ate is c0 - eaten + c1 - c2\n    eaten = c0 - c2 - c1\n    return eaten", "mapping": {"c0": 22.0, "c1": 5.0, "c2": 8.0}}
{"question": "If each pack costs c0 dollarsHow much will it cost to buy c1 packs of dvds?", "answer": [2673.0], "response": "def cost_of_packs(c0, c1):\n    #calculate the total cost by multiplying the cost of one pack by the number of packs\n    total_cost = c0 * c1\n    return total_cost", "mapping": {"c0": 81.0, "c1": 33.0}}
{"question": "There were c0 parents in the program and c1 pupils too. The program could seat c2 peopleHow many people were present in the program?", "answer": [238.0], "response": "def program_attendance(c0, c1, c2):\n    #calculate the total number of people present in the program\n    total_attendance = c0 + c1\n\n    #check if the program could seat all the attendees\n    if total_attendance <= c2:\n        return total_attendance\n    else:\n        return c2 #if the program could not seat all attendees, return the maximum capacity of the program.", "mapping": {"c0": 61.0, "c1": 177.0, "c2": 44.0}}
{"question": "Every day Ryan spends c0 hours on learning english and c1 hours on learning chinese. If he learns for c2 daysHow many hours does he spend on learning english and chinese each day?", "answer": [10.0], "response": "def daily_hours(c0, c1, c2):\n    #calculate the total hours spent on learning each language\n    total_english_hours = c0 * c2\n    total_chinese_hours = c1 * c2\n\n    #calculate the daily hours spent on learning each language\n    daily_english_hours = total_english_hours / c2\n    daily_chinese_hours = total_chinese_hours / c2\n\n    return daily_english_hours, daily_chinese_hours", "mapping": {"c0": 4.0, "c1": 6.0, "c2": 86.0}}
{"question": "Baker made c0 cakes and c1 pastries. If he sold c2 cakes and c3 pastriesHow many more cakes than pastries did baker make?", "answer": [78.0], "response": "def cake_vs_pastries(c0, c1, c2, c3):\n    #calculate the number of cakes and pastries made\n    cakes_made = c0\n    pastries_made = c1\n\n    #calculate the number of cakes and pastries sold\n    cakes_sold = c2\n    pastries_sold = c3\n\n    #calculate the difference between the number of cakes and pastries made and sold\n    cake_difference = cakes_made - cakes_sold\n    pastry_difference = pastries_made - pastries_sold\n\n    #calculate the difference between the number of cakes and pastries made\n    difference = cake_difference - pastry_difference\n\n    return difference", "mapping": {"c0": 126.0, "c1": 48.0, "c2": 115.0, "c3": 81.0}}
{"question": "At the arcade Dave had won c0 tickets. If he used c1 to buy some toys and c2 more to buy some clothesHow many more tickets did Dave use to buy toys than he did to buy clothes?", "answer": [5.0], "response": "def tickets_used(c0, c1, c2):\n    # Dave had c0 tickets\n    # He used c1 tickets to buy toys\n    # He used c2 tickets to buy clothes\n    # We need to find the difference between c1 and c2\n\n    toys_used = c1\n    clothes_used = c2\n\n    # Difference between tickets used for toys and clothes\n    difference = toys_used - clothes_used\n\n    return difference", "mapping": {"c0": 19.0, "c1": 12.0, "c2": 7.0}}
{"question": "A grocery store had c0 bottles of regular soda, c1 bottles of diet soda and c2 apples.How many bottles did they have total?", "answer": [38.0], "response": "def total_bottles_and_apples(c0, c1, c2):\n    #calculate the total number of bottles by adding the number of regular and diet soda bottles\n    total_bottles = c0 + c1\n    #add the number of apples to the total number of bottles\n    total = total_bottles + c2\n    return total", "mapping": {"c0": 30.0, "c1": 8.0, "c2": 41.0}}
{"question": "There are c0 baskets of peaches. Each basket has c1 red peaches and c2 green peaches.How many peaches are in the baskets altogether?", "answer": [308.0], "response": "def total_peaches(c0, c1, c2):\n    #calculate the total number of peaches by adding the number of red and green peaches in each basket and multiplying by the total number of baskets\n    total = (c1 + c2) * c0\n    return total", "mapping": {"c0": 11.0, "c1": 10.0, "c2": 18.0}}
{"question": "Paul got a box of c0 crayons for his birthday. During the school year he gave c1 crayons to his friends while he lost c2 crayons.How many crayons did he have left?", "answer": [223.0], "response": "def crayons_left(c0, c1, c2):\n    # Paul starts with c0 crayons\n    total_crayons = c0\n\n    # He gives c1 crayons to his friends\n    total_crayons -= c1\n\n    # He loses c2 crayons\n    total_crayons -= c2\n\n    # Return the number of crayons he has left\n    return total_crayons", "mapping": {"c0": 440.0, "c1": 111.0, "c2": 106.0}}
{"question": "Some campers went rowing in the morning while c0 campers went rowing in the afternoon. If a total of c1 campers went rowing that dayHow many campers went rowing in the morning?", "answer": [53.0], "response": "def morning_campers(c0, c1):\n    #total number of campers who went rowing\n    total_campers = c1\n\n    #number of campers who went rowing in the afternoon\n    afternoon_campers = c0\n\n    #number of campers who went rowing in the morning can be calculated by subtracting the number of afternoon campers from the total number of campers\n    morning_campers = total_campers - afternoon_campers\n\n    return morning_campers", "mapping": {"c0": 7.0, "c1": 60.0}}
{"question": "He then went to see the oranges being harvested. He found out that they harvest c0 sacks per day and discard c1 of them.How many sacks of oranges will they have after c2 days of harvest?", "answer": [153.0], "response": "def orange_sacks(c0, c1, c2):\n    #calculate the number of sacks harvested per day after discarding c1 sacks\n    sacks_per_day = c0 - c1\n\n    #calculate the total number of sacks harvested after c2 days\n    total_sacks = sacks_per_day * c2\n\n    return total_sacks", "mapping": {"c0": 74.0, "c1": 71.0, "c2": 51.0}}
{"question": "Next on his checklist is wax to stick the feathers together. If he has c0 g of wax and right now he just needs c1 gTotal how many grams of wax do the feathers require?", "answer": [574.0], "response": "def wax_required(c0, c1):\n    #subtract the amount of wax he has from the amount he needs\n    wax_needed = c1 - c0\n    \n    return wax_needed", "mapping": {"c0": 557.0, "c1": 17.0}}
{"question": "Jerry had c0 books and c1 action figures on a shelf in his room. Later he added c2 more action figures to the shelf.How many more books than action figures were on his shelf?", "answer": [2.0], "response": "def book_vs_action(c0, c1, c2):\n    #calculate the total number of action figures on the shelf after adding c2 more\n    total_action_figures = c1 + c2\n\n    #calculate the difference between the number of books and the total number of action figures\n    difference = c0 - total_action_figures\n\n    return difference", "mapping": {"c0": 7.0, "c1": 3.0, "c2": 2.0}}
{"question": "Matthew gave c0 crackers to each his friends. If he had c1 crackersHow many friends did he give crackers to?", "answer": [6.0], "response": "def crackers_friends(c0, c1):\n    # Matthew gave c0 crackers to each friend\n    crackers_per_friend = c0\n\n    # Matthew had c1 crackers in total\n    total_crackers = c1\n\n    # The number of friends he gave crackers to can be calculated by dividing the total number of crackers by the number of crackers per friend\n    num_friends = total_crackers // crackers_per_friend\n\n    return num_friends", "mapping": {"c0": 6.0, "c1": 36.0}}
{"question": "Katie had c0 new games and c1 old games. Her friends had c2 new games.How many more games does Katie have than her friends?", "answer": [62.0], "response": "def game_difference(c0, c1, c2):\n    #calculate the total number of games Katie has\n    katie_total = c0 + c1\n    #calculate the total number of games her friends have\n    friends_total = c2\n    #calculate the difference between the two totals\n    difference = katie_total - friends_total\n    return difference", "mapping": {"c0": 57.0, "c1": 39.0, "c2": 34.0}}
{"question": "c0 children were riding on the bus. At the bus stop c1 more children got on the bus.How many children are on the bus now?", "answer": [64.0], "response": "def children_on_bus(c0, c1):\n    #initially there were c0 children on the bus\n    children_before = c0\n\n    #c1 more children got on the bus\n    children_after = children_before + c1\n\n    return children_after", "mapping": {"c0": 26.0, "c1": 38.0}}
{"question": "Josh had c0 marbles in his collection. He found c1 marbles.How many marbles does he have now?", "answer": [28.0], "response": "def marbles_total(c0, c1):\n    total_marbles = c0 + c1\n    return total_marbles", "mapping": {"c0": 21.0, "c1": 7.0}}
{"question": "Jake brought c0 balloons to the park. If Jake brought c1 more balloons than the number of balloons that Allan broughtHow many balloons did Allan bring to the park?", "answer": [2.0], "response": "def Allan_balloons(c0, c1):\n    #Jake brought c0 balloons\n    jake_balloons = c0\n\n    #Jake brought c1 more balloons than Allan\n    allan_balloons = jake_balloons - c1\n\n    return allan_balloons", "mapping": {"c0": 6.0, "c1": 4.0}}
{"question": "At the arcade Dave had won c0 tickets and lost c1 tickets. If he used c2 to buy some toysHow many tickets did Dave have left?", "answer": [2.0], "response": "def tickets_left(c0, c1, c2):\n    # Dave had c0 tickets initially\n    initial_tickets = c0\n\n    # Dave lost c1 tickets\n    lost_tickets = c1\n\n    # Dave used c2 tickets to buy toys\n    used_tickets = c2\n\n    # The number of tickets Dave has left can be calculated by subtracting the lost and used tickets from the initial tickets\n    tickets_left = initial_tickets - lost_tickets - used_tickets\n\n    return tickets_left", "mapping": {"c0": 14.0, "c1": 2.0, "c2": 10.0}}
{"question": "During summer break c0 kids from Lawrence county go to camp and the other c1 kids stay home. An additional c2 kids from outside the county attended the camp.About how many kids are in Lawrence county?", "answer": [1201565.0], "response": "def summer_camp(c0, c1, c2):\n    #total number of kids in Lawrence county is the sum of kids who went to camp and kids who stayed home, plus the additional kids from outside the county\n    total_kids = c0 + c1 + c2\n    return total_kids", "mapping": {"c0": 610769.0, "c1": 590796.0, "c2": 22.0}}
{"question": "Edward had $ c0. He spent $ 16.How much money does Edward have now?", "answer": [2.0], "response": "def remaining_money(c0):\n    # Edward had c0 dollars\n    initial_money = c0\n\n    # Edward spent 16 dollars\n    spent_money = 16\n\n    # The remaining money can be calculated by subtracting the spent money from the initial money\n    remaining = initial_money - spent_money\n\n    return remaining", "mapping": {"c0": 18.0}}
{"question": "For Gwen's birthday she received c0 dollars from her dad. Her mom gave her c1 more dollars. If she spent c2 dollars.How much more money did she receive from her dad than she did from her mom?", "answer": [3.0], "response": "def birthday_money(c0, c1, c2):\n    #calculate total money received\n    total_received = c0 + c1\n    #calculate difference between total received and money spent\n    difference = total_received - c2\n    #calculate difference between money received from dad and mom\n    dad_difference = c0 - (difference/2)\n    mom_difference = c1 - (difference/2)\n    return dad_difference - mom_difference", "mapping": {"c0": 5.0, "c1": 2.0, "c2": 6.0}}
{"question": "Robin's hair was c0 inches long. It grew by c1 inches. Then he cut off c2 inches.How long is his hair now?", "answer": [2.0], "response": "def hair_length(c0, c1, c2):\n    # Robin's hair was originally c0 inches long\n    hair_before = c0\n\n    # His hair grew by c1 inches\n    hair_grew = c1\n\n    # He then cut off c2 inches\n    hair_cut = c2\n\n    # His hair length now can be calculated by adding the growth and subtracting the cut from the original length\n    hair_now = hair_before + hair_grew - hair_cut\n\n    return hair_now", "mapping": {"c0": 14.0, "c1": 8.0, "c2": 20.0}}
{"question": "Edward spent $ c0 to buy c1 books each book costing him the same amount of money. Now he has $ 6.How much did Edward have before he spent his money?", "answer": [22.0], "response": "def EdwardMoney(c0, c1):\n    #calculate the total amount spent on books\n    total_spent = c0 * c1\n\n    #calculate the amount Edward has left\n    remaining_money = 6\n\n    #calculate the amount Edward had before spending his money\n    initial_money = total_spent + remaining_money\n\n    return initial_money", "mapping": {"c0": 16.0, "c1": 92.0}}
{"question": "During summer break c0 kids from Lawrence county go to camp and the other c1 kids stay home. An additional c2 kids from outside the county attended the camp.How many kids in total attended the camp?", "answer": [458988.0], "response": "def summer_camp(c0, c1, c2):\n    #c0 kids from Lawrence county go to camp\n    #c1 kids stay home\n    #c2 kids from outside the county attended the camp\n    total_attendees = c0 + c1 + c2\n\n    return total_attendees", "mapping": {"c0": 34044.0, "c1": 134867.0, "c2": 424944.0}}
{"question": "Baker made c0 cakes and c1 pastries. If he sold c2 pastries and c3 cakesHow many more cakes than pastries did baker sell?", "answer": [89.0], "response": "def cake_vs_pastries(c0, c1, c2, c3):\n    #calculate the number of cakes sold\n    cakes_sold = c3\n\n    #calculate the number of pastries sold\n    pastries_sold = c2\n\n    #calculate the difference between the number of cakes and pastries sold\n    difference = cakes_sold - pastries_sold\n\n    return difference", "mapping": {"c0": 14.0, "c1": 153.0, "c2": 8.0, "c3": 97.0}}
{"question": "After a typhoon, c0 trees in Haley's backyard died. If she had grown c1 trees initiallyHow many trees does she have left?", "answer": [10.0], "response": "def trees_left(c0, c1):\n    # Haley initially had c1 trees\n    initial_trees = c1\n\n    # After the typhoon, c0 trees died\n    trees_died = c0\n\n    # The number of trees left can be calculated by subtracting the number of trees that died from the initial number of trees\n    trees_left = initial_trees - trees_died\n\n    return trees_left", "mapping": {"c0": 2.0, "c1": 12.0}}
{"question": "Paco had c0 sweet cookies and c1 salty cookies. He ate c2 sweet cookies and c3 salty cookies.How many more salty cookies than sweet cookies did he eat?", "answer": [14.0], "response": "def cookie_problem(c0, c1, c2, c3):\n    #calculate how many sweet cookies Paco ate\n    sweet_cookies_eaten = c0 - c2\n\n    #calculate how many salty cookies Paco ate\n    salty_cookies_eaten = c1 - c3\n\n    #calculate the difference between the number of salty and sweet cookies Paco ate\n    difference = salty_cookies_eaten - sweet_cookies_eaten\n\n    return difference", "mapping": {"c0": 8.0, "c1": 6.0, "c2": 20.0, "c3": 34.0}}
{"question": "A grocery store had c0 bottles of regular soda, c1 bottles of diet soda and c2 apples.How many more bottles of regular soda than diet soda did they have?", "answer": [26.0], "response": "def soda_difference(c0, c1):\n    #calculate the difference between the number of regular soda and diet soda bottles\n    difference = c0 - c1\n    return difference", "mapping": {"c0": 79.0, "c1": 53.0, "c2": 42.0}}
{"question": "Carol was sending out birthday invitations to c0 friends. She bought c1 packs each one having the same number of invitations.How many invitations are in each pack?", "answer": [4.0], "response": "def invitations_per_pack(c0, c1):\n    # Carol bought c1 packs of invitations\n    num_packs = c1\n\n    # Each pack has the same number of invitations\n    # To find out how many invitations are in each pack, we divide the total number of invitations by the number of packs\n    invitations_per_pack = c0 / num_packs\n\n    return invitations_per_pack", "mapping": {"c0": 12.0, "c1": 3.0}}
{"question": "Jake has c0 fewer peaches and c1 more apples than Steven. Steven has c2 peaches and c3 apples.How many apples does Jake have?", "answer": [11.0], "response": "def JakeApples(c0, c1, c2, c3):\n    #Steven has c3 apples, so Jake has c3 + c1 apples\n    jake_apples = c3 + c1\n\n    #Steven has c2 peaches, so Jake has c2 - c0 peaches\n    jake_peaches = c2 - c0\n\n    #Jake has c3 + c1 apples and c2 - c0 peaches\n    #We only care about the number of apples Jake has, so we return that value\n    return jake_apples", "mapping": {"c0": 13.0, "c1": 3.0, "c2": 9.0, "c3": 8.0}}
{"question": "Josh had c0 marbles in his collection. Jack gave him c1 marbles.How many marbles does Josh have now?", "answer": [42.0], "response": "def marbles_total(c0, c1):\n    total_marbles = c0 + c1\n    return total_marbles", "mapping": {"c0": 22.0, "c1": 20.0}}
{"question": "Faye had c0 packs of pencils each one having c1 pencils. She was placing her pencils into rows with c2 pencils in each row.How many pencils does she have?", "answer": [186.0], "response": "def total_pencils(c0, c1, c2):\n    #calculate the total number of pencils\n    total_pencils = c0 * c1\n\n    #calculate the number of rows\n    rows = total_pencils // c2\n\n    #calculate the remaining pencils\n    remaining_pencils = total_pencils % c2\n\n    #add the remaining pencils to the last row\n    if remaining_pencils > 0:\n        rows += 1\n\n    #calculate the total number of pencils including the partially filled row\n    total_with_partial_row = rows * c2\n\n    return total_with_partial_row", "mapping": {"c0": 31.0, "c1": 6.0, "c2": 19.0}}
{"question": "Jake has c0 more apples and c1 fewer peaches than Steven. Steven has c2 peaches and c3 apples.How many peaches does Jake have?", "answer": [3.0], "response": "def JakePeaches(c0, c1, c2, c3):\n    #Steven has c2 peaches\n    steven_peaches = c2\n\n    #Steven has c3 apples\n    steven_apples = c3\n\n    #Jake has c0 more apples than Steven\n    jake_apples = steven_apples + c0\n\n    #Jake has c1 fewer peaches than Steven\n    jake_peaches = steven_peaches - c1\n\n    return jake_peaches", "mapping": {"c0": 84.0, "c1": 10.0, "c2": 13.0, "c3": 52.0}}
{"question": "Rebecca wants to split a collection of eggs into c0 groups. Rebecca has c1 eggs and c2 marbles.How many eggs will each group have?", "answer": [2.0], "response": "def egg_groups(c0, c1, c2):\n    # calculate the total number of eggs after subtracting the number of marbles\n    total_eggs = c1 - c2\n    \n    # calculate the number of eggs in each group by dividing the total number of eggs by the number of groups\n    eggs_per_group = total_eggs / c0\n    \n    return eggs_per_group", "mapping": {"c0": 4.0, "c1": 8.0, "c2": 6.0}}
{"question": "Jack received c0 emails and sent c1 letters in the morning. He then received c2 emails and sent c3 letters in the afternoon.How many emails did Jack send in the day?", "answer": [10.0], "response": "def calculate_emails_sent(c0, c1, c2, c3):\n    #calculate the total number of emails sent by subtracting the number of emails received from the number of emails sent\n    total_emails_sent = (c1 + c3) - (c0 + c2)\n    return total_emails_sent", "mapping": {"c0": 4.0, "c1": 2.0, "c2": 6.0, "c3": 8.0}}
{"question": "Rachel had to complete c0 pages of math homework, c1 pages of reading homework and c2 more pages of biology homework.How many more pages of reading homework than biology homework did she have?", "answer": [3.0], "response": "def homework_difference(c0, c1, c2):\n    # Rachel had to complete c1 pages of reading homework\n    reading_homework = c1\n\n    # Rachel had to complete c2 more pages of biology homework than the original amount\n    biology_homework = c0 + c2\n\n    # The difference between the number of pages of reading and biology homework can be calculated by subtracting the number of biology pages from the number of reading pages\n    difference = reading_homework - biology_homework\n\n    return difference", "mapping": {"c0": 7.0, "c1": 11.0, "c2": 8.0}}
{"question": "Dan has $ c0. He bought some candy bar for $ c1 each one costing $ 3.How many candy bar did he buy?", "answer": [2.0], "response": "def candy_bars(c0, c1):\n    #calculate how much money Dan spent on candy bars\n    spent = c0 - c1*3\n\n    #calculate how many candy bars Dan bought\n    bought = spent // c1\n\n    return bought", "mapping": {"c0": 2.0, "c1": 6.0}}
{"question": "Lucy went to the grocery store. She bought c0 packs of cookie, c1 packs of cake and c2 packs of chocolate.How many packs of groceries did she buy in all?", "answer": [42.0], "response": "def total_packs(c0, c1, c2):\n    # add up the number of packs of each item\n    total = c0 + c1 + c2\n    return total", "mapping": {"c0": 4.0, "c1": 22.0, "c2": 16.0}}
{"question": "The school has c0 grades and each grade has c1 studentsHow many students were there in total?", "answer": [22800.0], "response": "def total_students(c0, c1):\n    # multiply the number of grades by the number of students in each grade\n    total = c0 * c1\n    return total", "mapping": {"c0": 304.0, "c1": 75.0}}
{"question": "The cave is c0 feet deep and they are already at c1 feet. If they are travelling at speed of c2 How much farther until they reach the end of the cave?", "answer": [369.0], "response": "def cave_distance(c0, c1, c2):\n    #calculate the distance remaining in the cave\n    distance_remaining = c0 - c1\n\n    #calculate the time it will take to travel the remaining distance\n    time = distance_remaining / c2\n\n    #calculate the distance that will be travelled in that time\n    distance_travelled = time * c2\n\n    #calculate the distance remaining after travelling for that time\n    distance_remaining = distance_remaining - distance_travelled\n\n    return distance_remaining", "mapping": {"c0": 1218.0, "c1": 849.0, "c2": 17.0}}
{"question": "Bobby had c0 pieces of candy. He ate some pieces of candy. If he has c1 pieces of candy leftHow many pieces of candy did Bobby eat?", "answer": [12.0], "response": "def candy_eaten(c0, c1):\n    # Bobby originally had c0 pieces of candy\n    candy_before = c0\n\n    # Bobby now has c1 pieces of candy left\n    candy_after = c1\n\n    # The number of candy Bobby ate can be calculated by subtracting the number of candy left from the original number of candy\n    eaten = candy_before - candy_after\n\n    return eaten", "mapping": {"c0": 32.0, "c1": 20.0}}
{"question": "Baker sold c0 cakes. If he had made c1 cakes initiallyHow many more cakes did baker make than those he sold?", "answer": [32.0], "response": "def Problem(c0, c1):\n    #Baker initially made c1 cakes\n    initial_cakes = c1\n\n    #Baker sold c0 cakes\n    sold_cakes = c0\n\n    #The number of cakes he made more than those he sold can be calculated by subtracting the number of sold cakes from the initial number of cakes\n    more_cakes = initial_cakes - sold_cakes\n\n    return more_cakes", "mapping": {"c0": 8.0, "c1": 40.0}}
{"question": "After eating a hearty meal they went to see the Buckingham palace. There, Rachel learned that c0 visitors came to the Buckingham palace that day. If there were c1 visitors the previous day and c2 visitors the day before thatHow many visited the Buckingham palace before that day?", "answer": [522.0], "response": "def previous_visitors(c0, c1, c2):\n    #total number of visitors before today is the sum of visitors from the previous two days\n    total_visitors_before = c1 + c2\n\n    #number of visitors before today can be calculated by subtracting the total visitors before today from the visitors today\n    visitors_before = c0 - total_visitors_before\n\n    return visitors_before", "mapping": {"c0": 92.0, "c1": 419.0, "c2": 103.0}}
{"question": "After eating a hearty meal they went to see the Buckingham palace. There, Rachel learned that c0 visitors came to the Buckingham palace on the previous day. If there were c1 visitors on that dayHow many more visitors visited the Buckingham palace on that day than on the previous day?", "answer": [566.0], "response": "def visitors_increase(c0, c1):\n    #calculate the difference between the number of visitors on the current day and the previous day\n    increase = c1 - c0\n    return increase", "mapping": {"c0": 100.0, "c1": 666.0}}
{"question": "In Haley's class c0 are boys who love to play marbles. If Haley has c1 marbles and wants to keep c2 marbles for herselfHow many will each of the boys receive?", "answer": [2.0], "response": "def marbles_per_boy(c0, c1, c2):\n    #calculate the total number of marbles to be distributed among the boys\n    total_marbles = c1 - c2\n\n    #calculate the number of boys\n    num_boys = c0\n\n    #calculate the number of marbles each boy will receive\n    marbles_per_boy = total_marbles / num_boys\n\n    return marbles_per_boy", "mapping": {"c0": 4.0, "c1": 23.0, "c2": 15.0}}
{"question": "Matthew had c0 crackers and c1 cakes. If Matthew gave equal numbers of crackers and cakes to his c2 friendsHow many crackers did each person eat?", "answer": [2.0], "response": "def crackers_per_person(c0, c1, c2):\n    #calculate the total number of items (crackers + cakes)\n    total_items = c0 + c1\n    \n    #calculate the number of items each person will receive\n    items_per_person = total_items / c2\n    \n    #calculate the number of crackers each person will receive\n    crackers_per_person = c0 / items_per_person\n    \n    return crackers_per_person", "mapping": {"c0": 22.0, "c1": 34.0, "c2": 11.0}}
{"question": "Rachel has c0 apple trees. She picked c1 apples from each of her trees. Now the trees have a total c2 apples still on them.How many apples were there on all trees initially?", "answer": [33.0], "response": "def total_apples(c0, c1, c2):\n    #calculate the total number of apples picked\n    total_picked = c0 * c1\n\n    #calculate the total number of apples still on the trees\n    total_on_trees = c2 - total_picked\n\n    #calculate the total number of apples initially\n    total_initial = total_picked + total_on_trees\n\n    return total_initial", "mapping": {"c0": 3.0, "c1": 8.0, "c2": 9.0}}
{"question": "Mary is baking a cake. The recipe calls for c0 cups of flour and c1 cups of sugar. She already put in c2 cups of flour.How many more cups of sugar than cups of flour does she need to add now?", "answer": [6.0], "response": "def sugar_needed(c0, c1, c2):\n    #calculate how much flour is still needed\n    flour_needed = c0 - c2\n\n    #calculate how much sugar is needed\n    sugar_needed = c1 - flour_needed\n\n    #return the difference between sugar_needed and flour_needed\n    return sugar_needed - flour_needed", "mapping": {"c0": 9.0, "c1": 11.0, "c2": 4.0}}
{"question": "The school is planning a field trip. The school has c0 classrooms. There are c1 school buses and a total of c2 students in the school. If all buses are fullHow many seats are in each bus?", "answer": [2.0], "response": "def field_trip(c0, c1, c2):\n    #calculate the total number of seats available on all buses\n    total_seats = c1 * 50\n\n    #calculate the number of students that need to be transported\n    students = c2 - c0\n\n    #calculate the number of seats needed for all students\n    seats_needed = students\n\n    #calculate the number of seats per bus\n    seats_per_bus = seats_needed // c1\n\n    return seats_per_bus", "mapping": {"c0": 17.0, "c1": 46.0, "c2": 92.0}}
{"question": "For Gwen's birthday she received some dollars. She spent c0 dollars and has c1 dollars left with her.How much money did Gwen receive for her birthday?", "answer": [14.0], "response": "def birthday_money(c0, c1):\n    #Gwen received some dollars for her birthday\n    birthday_money = c0 + c1\n\n    return birthday_money", "mapping": {"c0": 8.0, "c1": 6.0}}
{"question": "Danny collects bottle caps. He lost c0 bottle caps at the park. Now he has c1 bottle caps in his collection.How many bottle caps did danny have at first?", "answer": [91.0], "response": "def initial_caps(c0, c1):\n    # Danny lost c0 bottle caps\n    lost_caps = c0\n\n    # Danny now has c1 bottle caps\n    current_caps = c1\n\n    # The number of bottle caps Danny had at first can be calculated by adding the lost bottle caps to the current number of bottle caps\n    initial_caps = lost_caps + current_caps\n\n    return initial_caps", "mapping": {"c0": 66.0, "c1": 25.0}}
{"question": "Jake has c0 fewer peaches than Steven. Steven has c1 more peaches than Jill. If jill has c2 peachesHow many peaches does Jake have?", "answer": [17.0], "response": "def JakePeaches(c0, c1, c2):\n    # Jill has c2 peaches\n    jill_peaches = c2\n\n    # Steven has c1 more peaches than Jill\n    steven_peaches = jill_peaches + c1\n\n    # Jake has c0 fewer peaches than Steven\n    jake_peaches = steven_peaches - c0\n\n    return jake_peaches", "mapping": {"c0": 6.0, "c1": 18.0, "c2": 5.0}}
{"question": "During summer break c0 kids from Lawrence county stay home and the other c1 kids go to camp.About how many kids are in Lawrence county?", "answer": [1363293.0], "response": "def summer_break(c0, c1):\n    #total number of kids in Lawrence county is the sum of kids who stay home and kids who go to camp\n    total_kids = c0 + c1\n    return total_kids", "mapping": {"c0": 907611.0, "c1": 455682.0}}
{"question": "Jerry had c0 action figures and c1 books on a shelf in his room. Later he added c2 more books to the shelf.How many books were on his shelf in all?", "answer": [19.0], "response": "def total_books(c0, c1, c2):\n    #calculate the total number of books by adding the initial number of books and the additional books\n    total = c1 + c2\n    return total", "mapping": {"c0": 8.0, "c1": 9.0, "c2": 10.0}}
{"question": "c0 birds and c1 storks were sitting on the fence. c2 more storks came to join them.How many storks are sitting on the fence?", "answer": [8.0], "response": "def storks_on_fence(c0, c1, c2):\n    #total number of storks on the fence is the sum of initial storks and the new storks that joined\n    total_storks = c1 + c2\n    return total_storks", "mapping": {"c0": 4.0, "c1": 6.0, "c2": 2.0}}
{"question": "Allan brought c0 balloons and Jake brought c1 balloons to the park. Jake then bought c2 more balloons at the park.How many more balloons did Allan have than Jake in the park?", "answer": [1.0], "response": "def balloon_difference(c0, c1, c2):\n    #total number of balloons Jake has at the park\n    jake_balloons = c1 + c2\n\n    #difference between Allan's and Jake's balloons at the park\n    difference = c0 - jake_balloons\n\n    return difference", "mapping": {"c0": 6.0, "c1": 2.0, "c2": 3.0}}
{"question": "Faye was placing her pencils and crayons into c0 rows with c1 pencils and c2 crayons in each row.How many pencils does she have?", "answer": [76.0], "response": "def count_pencils(c0, c1, c2):\n    #calculate the total number of pencils by multiplying the number of rows by the number of pencils in each row\n    total_pencils = c0 * c1\n    return total_pencils", "mapping": {"c0": 19.0, "c1": 4.0, "c2": 27.0}}
{"question": "The Razorback t-shirt shop sells each t-shirt for $ c0 dollars. During the Arkansas and Texas tech game they increased the prices by $ c1 per t-shirt and sold c2 t-shirts.How much money did they make from selling the t-shirts?", "answer": [5852.0], "response": "def calculate_profit(c0, c1, c2):\n    #calculate the new price per t-shirt\n    new_price = c0 + c1\n\n    #calculate the total revenue from selling the t-shirts\n    revenue = new_price * c2\n\n    return revenue", "mapping": {"c0": 201.0, "c1": 217.0, "c2": 14.0}}
{"question": "Ed had c0 more marbles than Doug. Ed lost c1 of his marbles at the playground. If Ed had c2 marblesHow many marbles does Doug have now?", "answer": [5.0], "response": "def DougMarbles(c0, c1, c2):\n    #Ed had c0 more marbles than Doug\n    DougMarbles = c2 - c0\n\n    #Ed lost c1 of his marbles at the playground\n    EdMarbles = c2 - c1\n\n    #Now we can calculate how many marbles Doug has\n    DougMarblesNow = DougMarbles + (EdMarbles - DougMarbles - c1)\n\n    return DougMarblesNow", "mapping": {"c0": 12.0, "c1": 20.0, "c2": 17.0}}
{"question": "Lawrence county has c0 kids. During summer break c1 kids stay home and the rest go to camp.How many kids go to the camp during the break?", "answer": [38608.0], "response": "def summer_camp(c0, c1):\n    #calculate the number of kids who stay home\n    stay_home = c1\n\n    #calculate the number of kids who go to camp\n    go_to_camp = c0 - stay_home\n\n    return go_to_camp", "mapping": {"c0": 313473.0, "c1": 274865.0}}
{"question": "The Razorback shop makes $ c0 dollars off each jersey and $ c1 off each t-shirt. During the Arkansas and Texas tech game they sold c2 t-shirts and c3 jerseys.How much more does a t-shirt cost than a jersey?", "answer": [30.0], "response": "def CostDifference(c0, c1, c2, c3):\n    #calculate the total revenue from selling t-shirts and jerseys\n    total_tshirt_revenue = c2 * c1\n    total_jersey_revenue = c3 * c0\n\n    #calculate the difference in revenue between a t-shirt and a jersey\n    revenue_difference = total_tshirt_revenue - total_jersey_revenue\n\n    #calculate the cost difference between a t-shirt and a jersey\n    cost_difference = revenue_difference / c2\n\n    return cost_difference", "mapping": {"c0": 210.0, "c1": 240.0, "c2": 177.0, "c3": 23.0}}
{"question": "Dan has $ c0. He bought a candy bar for $ c1 and a chocolate for $ 6.How much money did he spend buying the candy bar and chocolate?", "answer": [13.0], "response": "def spending(c0, c1):\n    # Dan bought a candy bar for c1 dollars\n    candy_cost = c1\n\n    # Dan also bought a chocolate for 6 dollars\n    chocolate_cost = 6\n\n    # The total amount spent is the sum of the cost of the candy and the chocolate\n    total_spent = candy_cost + chocolate_cost\n\n    return total_spent", "mapping": {"c0": 4.0, "c1": 7.0}}
{"question": "Jerry had c0 action figures and c1 books on a shelf in his room. Later he added c2 more action figures to the shelf.How many action figures were on his shelf in all?", "answer": [10.0], "response": "def total_action_figures(c0, c1, c2):\n    #calculate the total number of action figures by adding the original number and the additional ones\n    total = c0 + c2\n    return total", "mapping": {"c0": 4.0, "c1": 22.0, "c2": 6.0}}
{"question": "Mary is baking a cake. The recipe calls for c0 cups of sugar and some more cups of flour. She already put in c1 cups of flour. If she still needs to add c2 more cups of flourHow many cups of flour did the recipe require?", "answer": [9.0], "response": "def required_flour(c0, c1, c2):\n    #The recipe calls for c0 cups of sugar and some more cups of flour\n    #She already put in c1 cups of flour\n    #If she still needs to add c2 more cups of flour\n    #The total amount of flour required is c0 + c1 + c2\n    total_flour = c0 + c1 + c2\n\n    return total_flour", "mapping": {"c0": 11.0, "c1": 3.0, "c2": 6.0}}
{"question": "Baker made c0 cakes and c1 pastries. If he sold c2 cakes and c3 pastriesHow many more pastries than cakes did baker sell?", "answer": [24.0], "response": "def pastry_vs_cake(c0, c1, c2, c3):\n    #calculate the number of cakes and pastries sold\n    cakes_sold = c2\n    pastries_sold = c3\n\n    #calculate the difference between the number of pastries and cakes sold\n    pastry_cake_diff = pastries_sold - cakes_sold\n\n    return pastry_cake_diff", "mapping": {"c0": 54.0, "c1": 143.0, "c2": 68.0, "c3": 92.0}}
{"question": "c0 birds and c1 storks were sitting on the fence. c2 more birds came to join them.How many birds and storks are sitting on the fence?", "answer": [10.0], "response": "def birds_on_fence(c0, c1, c2):\n    #total number of birds after c2 more birds join\n    total_birds = c0 + c2\n\n    #number of storks remains the same\n    total_storks = c1\n\n    return total_birds, total_storks", "mapping": {"c0": 3.0, "c1": 2.0, "c2": 5.0}}
{"question": "Julia played tag with c0 kids on monday and c1 kids on tuesday. She played cards wtih c2 kids on wednesday.How many kids did she play tag with altogether?", "answer": [20.0], "response": "def tag_kids(c0, c1):\n    #total number of kids Julia played tag with\n    total_kids = c0 + c1\n    return total_kids", "mapping": {"c0": 7.0, "c1": 13.0, "c2": 20.0}}
{"question": "Being his favorite, he saved checking on the grapevines for his last stop. He was told by c0 of the pickers that they fill c1 drums of grapes per day.How many days will it take to fill c2 drums of grapes?", "answer": [30.0], "response": "def grapevine_days(c0, c1, c2):\n    #c0 pickers fill c1 drums of grapes per day\n    #we need to calculate how many days it will take to fill c2 drums of grapes\n\n    #calculate how many drums of grapes are filled per day by all the pickers\n    drums_per_day = c0 * c1\n\n    #calculate how many days it will take to fill c2 drums of grapes\n    days = c2 / drums_per_day\n\n    return days", "mapping": {"c0": 36.0, "c1": 8.0, "c2": 240.0}}
{"question": "Bobby ate c0 pieces of candy. If he initially had c1 pieces of candyHow many pieces of candy does he still have left?", "answer": [7.0], "response": "def candy_left(c0, c1):\n    # Bobby initially had c1 pieces of candy\n    initial_candy = c1\n\n    # Bobby ate c0 pieces of candy\n    eaten_candy = c0\n\n    # The number of candy pieces left can be calculated by subtracting the eaten candy from the initial candy\n    candy_left = initial_candy - eaten_candy\n\n    return candy_left", "mapping": {"c0": 23.0, "c1": 30.0}}
{"question": "The Ferris wheel in paradise park has c0 seats. Each seat can hold c1 people. If c2 seats are brokenHow many people can ride the Ferris wheel at the same time?", "answer": [120.0], "response": "def FerrisWheelCapacity(c0, c1, c2):\n    #calculate the total number of people the Ferris wheel can hold\n    total_capacity = c0 * c1\n\n    #subtract the number of people that cannot be seated due to broken seats\n    actual_capacity = total_capacity - c2\n\n    return actual_capacity", "mapping": {"c0": 18.0, "c1": 15.0, "c2": 10.0}}
{"question": "Robin's hair was c0 inches long. He cut off c1 inches. Then it again grew by c2 inches.How long is his hair now?", "answer": [17.0], "response": "def hair_length(c0, c1, c2):\n    # Robin's hair was originally c0 inches long\n    hair_before = c0\n\n    # Robin cut off c1 inches\n    hair_after_cut = hair_before - c1\n\n    # Robin's hair grew back by c2 inches\n    hair_now = hair_after_cut + c2\n\n    return hair_now", "mapping": {"c0": 16.0, "c1": 11.0, "c2": 12.0}}
{"question": "Frank was reading through his favorite book. The book had c0 pages equally distributed over c1 chapters. It took Frank c2 days to finish the book.How many chapters did he read per day?", "answer": [44.0], "response": "def chapters_per_day(c0, c1, c2):\n    #calculate the total number of chapters in the book\n    total_chapters = c1\n\n    #calculate the number of days it took Frank to finish the book\n    days = c2\n\n    #calculate the number of chapters Frank read per day by dividing the total number of chapters by the number of days\n    chapters_per_day = total_chapters / days\n\n    return chapters_per_day", "mapping": {"c0": 193.0, "c1": 15.0, "c2": 660.0}}
{"question": "The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped c0 inches. The grasshopper jumped c1 inches farther than the frog and the mouse jumped c2 inches lesser than the frog.How far did the frog jump?", "answer": [15.0], "response": "def jumping_contest(c0, c1, c2):\n    # The grasshopper jumped c0 inches\n    grasshopper_jump = c0\n\n    # The grasshopper jumped c1 inches farther than the frog\n    frog_jump = (c1 + grasshopper_jump) / 2\n\n    # The mouse jumped c2 inches lesser than the frog\n    mouse_jump = frog_jump - c2\n\n    return frog_jump", "mapping": {"c0": 19.0, "c1": 4.0, "c2": 44.0}}
{"question": "Winter is almost here and most animals are migrating to warmer countries. There are c0 bird families living near the mountain. If c1 bird families flew away to africa and c2 bird families flew away to asiaHow many bird families flew away for the winter?", "answer": [118.0], "response": "def bird_migration(c0, c1, c2):\n    #calculate the total number of bird families that flew away\n    flew_away = c1 + c2\n\n    return flew_away", "mapping": {"c0": 18.0, "c1": 38.0, "c2": 80.0}}
{"question": "Matthew had c0 crackers. He has c1 crackers left after he gave equal numbers of crackers to his c2 friends.How many crackers did each friend eat?", "answer": [6.0], "response": "def crackers_per_friend(c0, c1, c2):\n    # Matthew had c0 crackers\n    crackers_before = c0\n\n    # Matthew gave equal numbers of crackers to his c2 friends\n    friends = c2\n    crackers_given = (crackers_before - c1) / friends\n\n    return crackers_given", "mapping": {"c0": 23.0, "c1": 11.0, "c2": 2.0}}
{"question": "Rachel's tree had c0 apples. She picked c1 apples from her tree. Thereafter c2 new apples grew on the tree.How many apples are there on the tree now?", "answer": [1.0], "response": "def apple_count(c0, c1, c2):\n    #start with the original number of apples\n    total_apples = c0\n\n    #subtract the number of apples Rachel picked\n    total_apples -= c1\n\n    #add the number of new apples that grew on the tree\n    total_apples += c2\n\n    return total_apples", "mapping": {"c0": 4.0, "c1": 2.0, "c2": 3.0}}
{"question": "Summer is almost here and most animals are migrating back to cooler countries. There are c0 bird families living near a mountain. If c1 new bird families joined themHow many bird families live near the mountain now?", "answer": [105.0], "response": "def bird_families(c0, c1):\n    #total number of bird families after new ones join\n    total_families = c0 + c1\n\n    return total_families", "mapping": {"c0": 87.0, "c1": 18.0}}
{"question": "Danny collects bottle caps and wrappers. He found c0 bottle caps and c1 wrappers at the park. Now he has c2 wrappers and c3 bottle caps in his collection.How many more wrappers than bottle caps does danny have now?", "answer": [32.0], "response": "def wrapper_vs_caps(c0, c1, c2, c3):\n    #calculate the total number of bottle caps and wrappers Danny has now\n    total_caps = c0 + c3\n    total_wrappers = c1 + c2\n\n    #calculate the difference between the number of wrappers and bottle caps\n    diff = total_wrappers - total_caps\n\n    return diff", "mapping": {"c0": 15.0, "c1": 18.0, "c2": 67.0, "c3": 35.0}}
{"question": "Melissa scored a total of c0 points in c1 games scoring the same for each game.How many points did she score in each game?", "answer": [7.0], "response": "def Problem(c0, c1):\n    #Melissa scored a total of c0 points in c1 games\n    total_points = c0\n    num_games = c1\n\n    #scoring the same for each game\n    points_per_game = total_points / num_games\n\n    return points_per_game", "mapping": {"c0": 91.0, "c1": 13.0}}
{"question": "Robin's hair was c0 inches long. He cut off some inches of her hair. If his hair is now c1 inches longHow much of his hair did he cut?", "answer": [4.0], "response": "def hair_cut(c0, c1):\n    # Robin's hair was originally c0 inches long\n    hair_before = c0\n\n    # After cutting some inches, his hair is now c1 inches long\n    hair_after = c1\n\n    # The amount of hair he cut can be calculated by subtracting the length of his hair after the cut from the length before the cut\n    cut_amount = hair_before - hair_after\n\n    return cut_amount", "mapping": {"c0": 17.0, "c1": 13.0}}
{"question": "Baker made c0 pastries and c1 cakes. If he sold c2 cakes and c3 pastriesHow many pastries would baker still have?", "answer": [27.0], "response": "def pastries_left(c0, c1, c2, c3):\n    #calculate the total number of pastries and cakes made\n    total_pastries = c0 + c3\n    total_cakes = c1 + c2\n\n    #calculate the number of pastries sold\n    pastries_sold = c3\n\n    #calculate the number of cakes sold\n    cakes_sold = c2\n\n    #calculate the number of pastries left\n    pastries_left = total_pastries - pastries_sold\n\n    return pastries_left", "mapping": {"c0": 56.0, "c1": 124.0, "c2": 104.0, "c3": 29.0}}
{"question": "The school is planning a field trip. The school has c0 classrooms. There are c1 students in each classroom in the school. If there are c2 seats on each school busHow many buses are needed to take the trip?", "answer": [737.0], "response": "def field_trip_buses(c0, c1, c2):\n    #calculate the total number of students in the school\n    total_students = c0 * c1\n\n    #calculate the number of buses needed by dividing the total number of students by the number of seats on each bus\n    buses_needed = total_students // c2\n\n    #if there are any remaining students, add an extra bus\n    if total_students % c2 != 0:\n        buses_needed += 1\n\n    return buses_needed", "mapping": {"c0": 67.0, "c1": 66.0, "c2": 6.0}}
{"question": "The Razorback t-shirt shop makes $ c0 dollars off each t-shirt sold. During the Arkansas game and the Texas tech game they sold a total of c1 t-shirts. If they sold c2 t-shirts during the Arkansas gameHow much money did they make from selling the t-shirts?", "answer": [8265.0], "response": "def tshirt_sales(c0, c1, c2):\n    #calculate the total number of t-shirts sold during the Texas tech game\n    texas_tech_sales = c1 - c2\n\n    #calculate the total revenue from selling t-shirts during both games\n    total_revenue = (c2 * c0) + (texas_tech_sales * c0)\n\n    return total_revenue", "mapping": {"c0": 87.0, "c1": 95.0, "c2": 47.0}}
{"question": "c0 birds were sitting on the fence. c1 more birds and c2 more storks came to join them.How many more storks than birds are sitting on the fence?", "answer": [1.0], "response": "def bird_stork_count(c0, c1, c2):\n    #total number of birds after c1 more birds join\n    total_birds = c0 + c1\n\n    #total number of birds and storks after they join\n    total_birds_storks = total_birds + c2\n\n    #number of storks on the fence\n    storks = c2\n\n    #number of birds on the fence\n    birds = total_birds - storks\n\n    #difference between number of storks and birds on the fence\n    difference = storks - birds\n\n    return difference", "mapping": {"c0": 3.0, "c1": 2.0, "c2": 6.0}}
{"question": "The school is planning a field trip. The school has c0 classrooms. There are c1 students in the school and c2 school buses. If all buses are fullHow many seats are in each bus?", "answer": [14.0], "response": "def field_trip(c0, c1, c2):\n    #calculate the total number of seats available on all buses\n    total_seats = c2 * 50\n\n    #calculate the number of students that need to be transported\n    students = c1\n\n    #calculate the number of seats per bus by dividing the total seats by the number of buses needed\n    seats_per_bus = total_seats // c2\n\n    return seats_per_bus", "mapping": {"c0": 21.0, "c1": 98.0, "c2": 7.0}}
{"question": "Randy has c0 blocks. He uses c1 blocks to build a tower and c2 blocks to build a house.How many blocks did he use to build the tower and the house altogether?", "answer": [80.0], "response": "def blockUsage(c0, c1, c2):\n    # Randy uses c1 blocks to build a tower\n    tower_blocks = c1\n\n    # Randy uses c2 blocks to build a house\n    house_blocks = c2\n\n    # The total number of blocks used is the sum of blocks used for the tower and the house\n    total_blocks = tower_blocks + house_blocks\n\n    return total_blocks", "mapping": {"c0": 58.0, "c1": 27.0, "c2": 53.0}}
{"question": "Every day Ryan spends c0 hours on learning english and c1 hours on learning chinese. If he learns for c2 daysHow many hours does he spend on learning chinese in all?", "answer": [24.0], "response": "def chinese_hours(c0, c1, c2):\n    #calculate the total hours spent on learning chinese by multiplying the number of days by the number of hours spent per day\n    total_chinese_hours = c1 * c2\n    return total_chinese_hours", "mapping": {"c0": 5.0, "c1": 4.0, "c2": 6.0}}
{"question": "The Razorback shop makes $ c0 dollars off each t-shirt and $ c1 off each jersey. During the Arkansas and Texas tech game they sold c2 t-shirts and c3 jerseys.How much more does a jersey cost than a t-shirt?", "answer": [146.0], "response": "def jersey_cost(c0, c1, c2, c3):\n    #calculate the total revenue from t-shirts and jerseys\n    tshirt_revenue = c0 * c2\n    jersey_revenue = c1 * c3\n\n    #calculate the difference in revenue between jerseys and t-shirts\n    revenue_difference = jersey_revenue - tshirt_revenue\n\n    #calculate the difference in cost per item\n    cost_difference = c1 - c0\n\n    #calculate the difference in cost per item by dividing the revenue difference by the number of items sold\n    cost_per_item_difference = revenue_difference / (c2 + c3)\n\n    #return the difference in cost per item\n    return cost_per_item_difference", "mapping": {"c0": 86.0, "c1": 232.0, "c2": 254.0, "c3": 43.0}}
{"question": "Danny collects bottle caps and wrappers. He found c0 wrappers and c1 bottle caps at the park. Now he has c2 bottle caps and c3 wrappers in his collection.How many wrappers did danny have at first?", "answer": [2.0], "response": "def DannyCollection(c0, c1, c2, c3):\n    # Danny found c0 wrappers and c1 bottle caps at the park\n    wrappers_found = c0\n    bottle_caps_found = c1\n\n    # Now he has c2 bottle caps and c3 wrappers in his collection\n    total_bottle_caps = c2\n    total_wrappers = c3\n\n    # Danny can trade in bottle caps for wrappers and vice versa\n    # He can use the bottle caps he found and the ones he collected to get more wrappers\n    wrappers_from_bottle_caps = (total_bottle_caps + bottle_caps_found) // 4\n\n    # He can use the wrappers he found and the ones he collected to get more bottle caps\n    bottle_caps_from_wrappers = (total_wrappers + wrappers_found) // 2\n\n    # Danny can keep trading until he can't get any more wrappers or bottle caps\n    while wrappers_from_bottle_caps > 0 or bottle_caps_from_wrappers > 0:\n        total_wrappers += wrappers_from_bottle_caps\n        total_bottle_caps += bottle_caps_from_wrappers\n\n        wrappers_from_bottle_caps = total_bottle_caps // 4\n        bottle_caps_from_wrappers = total_wrappers // 2\n\n    # The number of wrappers Danny had at first is the sum of the wrappers he found and the ones he collected\n    initial_wrappers = wrappers_found + total_wrappers\n\n    return initial_wrappers", "mapping": {"c0": 66.0, "c1": 39.0, "c2": 16.0, "c3": 68.0}}
{"question": "Haley grew c0 trees in her backyard. After a typhoon c1 died.How many more trees died in the typhoon than those that survived?", "answer": [4.0], "response": "def typhoon(c0, c1):\n    #number of trees that survived the typhoon\n    survived = c0 - c1\n\n    #number of trees that died in the typhoon\n    died = c1\n\n    #calculate the difference between the number of trees that died and the number that survived\n    difference = died - survived\n\n    return difference", "mapping": {"c0": 14.0, "c1": 9.0}}
{"question": "He has c0 apples more than Adam and Jackie together do. Adam and Jackie have c1 apples between them.How many apples does He have?", "answer": [16.0], "response": "def Problem(c0, c1):\n    #Adam and Jackie have c1 apples between them\n    total_apples = c1\n\n    #He has c0 apples more than Adam and Jackie together do\n    his_apples = total_apples + c0\n\n    return his_apples", "mapping": {"c0": 9.0, "c1": 7.0}}
{"question": "Dave had c0 apps and c1 files on his phone. After deleting some apps and files he had c2 files and c3 apps left.How many more files than apps does he have left on the phone?", "answer": [22.0], "response": "def Problem(c0, c1, c2, c3):\n    #calculate the number of apps left after deleting some\n    apps_left = c0 - c3\n\n    #calculate the number of files left after deleting some\n    files_left = c2\n\n    #calculate the difference between the number of files and apps left\n    difference = files_left - apps_left\n\n    return difference", "mapping": {"c0": 11.0, "c1": 3.0, "c2": 24.0, "c3": 2.0}}
{"question": "Rebecca wants to split a collection of eggs into groups of c0. If each group has c1 eggsHow many eggs does Rebecca have?", "answer": [22.0], "response": "def EggsTotal(c0, c1):\n    #calculate the total number of eggs by multiplying the number of groups by the number of eggs in each group\n    total_eggs = c0 * c1\n\n    return total_eggs", "mapping": {"c0": 11.0, "c1": 2.0}}
{"question": "Jack received c0 emails in the morning, c1 emails in the afternoon and c2 emails in the evening.How many more emails did Jack receive in the morning than in the afternoon?", "answer": [3.0], "response": "def morning_vs_afternoon(c0, c1, c2):\n    #calculate the number of emails received in the morning and afternoon\n    morning_emails = c0\n    afternoon_emails = c1\n\n    #calculate the difference between the number of morning and afternoon emails\n    difference = morning_emails - afternoon_emails\n\n    return difference", "mapping": {"c0": 10.0, "c1": 7.0, "c2": 17.0}}
{"question": "Adam could fit c0 action figures on each shelf in his room. His room has c1 shelves and c2 cabinets.How many total action figures could his shelves hold?", "answer": [44.0], "response": "def action_figures(c0, c1, c2):\n    #calculate the total number of shelves in the room\n    total_shelves = c1 * c2\n\n    #calculate the total number of action figures that can be stored on all the shelves\n    total_figures = total_shelves * c0\n\n    return total_figures", "mapping": {"c0": 11.0, "c1": 4.0, "c2": 40.0}}
{"question": "Lucy went to the grocery store. She bought c0 packs of cookie and c1 packs of cake.How many more packs of cookie did she buy over cake?", "answer": [6.0], "response": "def cookie_vs_cake(c0, c1):\n    #calculate the difference between the number of packs of cookie and cake\n    diff = c0 - c1\n\n    return diff", "mapping": {"c0": 10.0, "c1": 4.0}}
{"question": "Every day Ryan spends c0 hours on learning english and c1 hours on learning chinese.How many more hours does he spend on learning english than he does on learning chinese?", "answer": [4.0], "response": "def language_hours(c0, c1):\n    #calculate the difference between the hours spent on learning english and chinese\n    diff = c0 - c1\n\n    return diff", "mapping": {"c0": 6.0, "c1": 2.0}}
{"question": "David did c0 more push-ups but c1 less crunches than Zachary in gym class today. If Zachary did c2 push-ups and c3 crunchesHow many crunches did David do?", "answer": [45.0], "response": "def crunches_david_did(c0, c1, c2, c3):\n    # David did c0 more push-ups than Zachary\n    david_pushups = c2 + c0\n\n    # Zachary did c1 less crunches than David\n    zachary_crunches = c3 - c1\n\n    # David did the same number of push-ups and crunches as Zachary, except for the difference in c0 and c1\n    david_crunches = zachary_crunches + c0\n\n    return david_crunches", "mapping": {"c0": 40.0, "c1": 17.0, "c2": 34.0, "c3": 62.0}}
{"question": "The grasshopper and the frog had a jumping contest. The frog jumped c0 inches and the grasshopper jumped c1 inches.How much farther did the frog jump than the grasshopper?", "answer": [22.0], "response": "def jumping_contest(c0, c1):\n    #calculate the difference between the distances jumped by the frog and the grasshopper\n    difference = c0 - c1\n\n    return difference", "mapping": {"c0": 39.0, "c1": 17.0}}
{"question": "Paul had c0 books. After buying some in a garage sale he had c1 left.How many books did he buy?", "answer": [101.0], "response": "def books_bought(c0, c1):\n    # Paul had c0 books\n    books_before = c0\n\n    # After buying some in a garage sale, he had c1 left\n    books_after = c1\n\n    # The number of books he bought can be calculated by subtracting the number of books he had before from the number of books he had after\n    bought = books_before - books_after\n\n    return bought", "mapping": {"c0": 50.0, "c1": 151.0}}
{"question": "If they are already at c0 feet and the cave is c1 feet deepHow much farther until they reach the end of the cave?", "answer": [103.0], "response": "def distance_to_end(c0, c1):\n    #calculate the distance to the end of the cave by subtracting the current position from the depth of the cave\n    distance = c1 - c0\n    return distance", "mapping": {"c0": 659.0, "c1": 762.0}}
{"question": "Katie had c0 new games and c1 old games. Her friends had c2 new games.How many new games do they have together?", "answer": [126.0], "response": "def total_new_games(c0, c1, c2):\n    # Katie has c0 new games and her friends have c2 new games\n    katie_new_games = c0\n    friends_new_games = c2\n\n    # The total number of new games they have together is the sum of Katie's new games and her friends' new games\n    total_new = katie_new_games + friends_new_games\n\n    return total_new", "mapping": {"c0": 78.0, "c1": 86.0, "c2": 48.0}}
{"question": "Josh had c0 marbles in his collection. He lost c1 marbles and found c2 new ones.How many marbles does he have now?", "answer": [13.0], "response": "def marbles(c0, c1, c2):\n    #subtract the number of lost marbles from the original collection\n    remaining = c0 - c1\n\n    #add the number of new marbles found\n    total = remaining + c2\n\n    return total", "mapping": {"c0": 19.0, "c1": 11.0, "c2": 5.0}}
{"question": "Jerry had c0 action figures on a shelf in his room. Later he added some more action figures to the shelf. If there are a total of c1 action figures on his shelf nowHow many action figures did he add to the shelf?", "answer": [4.0], "response": "def action_figures_added(c0, c1):\n    # calculate the number of action figures added by subtracting the original number from the current number\n    added = c1 - c0\n    return added", "mapping": {"c0": 4.0, "c1": 8.0}}
{"question": "Rachel has c0 apple trees. She picked c1 apples from c2 of her trees. Now the tree has c3 apples still on it.How many apples did the tree have to begin with?", "answer": [9.0], "response": "def initial_apples(c0, c1, c2, c3):\n    #calculate the total number of apples picked\n    picked_apples = c1 * c2\n\n    #calculate the number of apples left on the tree\n    remaining_apples = c3 * (c0 - c2)\n\n    #calculate the initial number of apples on the tree\n    initial_apples = picked_apples + remaining_apples\n\n    return initial_apples", "mapping": {"c0": 52.0, "c1": 2.0, "c2": 1.0, "c3": 7.0}}
{"question": "We ordered c0 pizzas. Each pizza has c1 slices. If there are c2 of usHow many slices of pizza does each of us get if distributed equally?", "answer": [45.0], "response": "def PizzaSlices(c0, c1, c2):\n    #calculate the total number of slices\n    total_slices = c0 * c1\n\n    #calculate the number of slices each person gets\n    slices_per_person = total_slices // c2\n\n    return slices_per_person", "mapping": {"c0": 9.0, "c1": 10.0, "c2": 2.0}}
{"question": "Jack received a total of c0 emails in the day. If he received c1 emails in the morning and some more in the afternoonHow many emails did Jack receive in the afternoon?", "answer": [2.0], "response": "def afternoon_emails(c0, c1):\n    # Jack received c1 emails in the morning\n    morning_emails = c1\n\n    # To find out how many emails he received in the afternoon, we subtract the morning emails from the total emails\n    afternoon_emails = c0 - morning_emails\n\n    return afternoon_emails", "mapping": {"c0": 9.0, "c1": 7.0}}
{"question": "A grocery store had c0 bottles of diet soda and c1 bottles of regular soda.How many more bottles of regular soda than diet soda did they have?", "answer": [41.0], "response": "def soda_difference(c0, c1):\n    #calculate the difference between the number of regular soda and diet soda\n    difference = c1 - c0\n    return difference", "mapping": {"c0": 19.0, "c1": 60.0}}
{"question": "A book has c0 chapters. The first chapter is c1 pages long the second chapter is c2 pages long and the third chapter is c3 pages long.How many more pages does the second chapter have than the third chapter?", "answer": [15.0], "response": "def chapter_pages(c0, c1, c2, c3):\n    #calculate the total number of pages in the book\n    total_pages = c1 + c2 + c3\n\n    #calculate the number of pages in the third chapter\n    third_chapter_pages = total_pages - c1 - c2\n\n    #calculate the difference in pages between the second and third chapters\n    difference = c2 - third_chapter_pages\n\n    return difference", "mapping": {"c0": 3.0, "c1": 35.0, "c2": 18.0, "c3": 3.0}}
{"question": "Randy has c0 blocks. He uses some blocks to build a tower. If there are c1 blocks leftHow many blocks did he use to build the tower?", "answer": [25.0], "response": "def blocks_used(c0, c1):\n    # Randy starts with c0 blocks\n    starting_blocks = c0\n\n    # After building the tower, he has c1 blocks left\n    remaining_blocks = c1\n\n    # The number of blocks used is the difference between the starting blocks and the remaining blocks\n    used_blocks = starting_blocks - remaining_blocks\n\n    return used_blocks", "mapping": {"c0": 97.0, "c1": 72.0}}
{"question": "Because of the decision Sofia asked the students to suggest specific types of food. c0 students suggested adding mashed potatoes while others suggested adding bacon to the menu. If c1 more students suggested adding bacon than those that suggested mashed potatoesHow many students suggested bacon?", "answer": [348.0], "response": "def bacon_suggestion(c0, c1):\n    # number of students who suggested mashed potatoes\n    mashed_potatoes = c0\n\n    # number of students who suggested bacon\n    bacon = mashed_potatoes + c1\n\n    return bacon", "mapping": {"c0": 182.0, "c1": 166.0}}
{"question": "A waiter had c0 customers. After some left he got c1 new customers. If he still had c2 customersHow many customers left?", "answer": [8.0], "response": "def Problem(c0, c1, c2):\n    #the waiter originally had c0 customers\n    customers_before = c0\n\n    #after some left, he got c1 new customers, so he had c2 customers in total\n    customers_after = c2\n\n    #the number of customers who left can be calculated by subtracting the number of customers before from the number of customers after\n    left = customers_before - (customers_after - c1)\n\n    return left", "mapping": {"c0": 13.0, "c1": 4.0, "c2": 9.0}}
{"question": "Every day Ryan spends c0 hours on learning english and some more hours on learning chinese. If he spends a total of c1 hours on learning english and chinese everydayHow many hours does he spend on learning chinese?", "answer": [1.0], "response": "def chinese_hours(c0, c1):\n    # Ryan spends c0 hours on learning english\n    english_hours = c0\n\n    # Ryan spends a total of c1 hours on learning english and chinese everyday\n    total_hours = c1\n\n    # The number of hours Ryan spends on learning chinese can be calculated by subtracting the hours spent on learning english from the total hours\n    chinese_hours = total_hours - english_hours\n\n    return chinese_hours", "mapping": {"c0": 3.0, "c1": 4.0}}
{"question": "A book has c0 chapters across c1 pages. The second chapter is c2 pages long.How many pages are in the second chapter?", "answer": [13.0], "response": "def chapter_pages(c0, c1, c2):\n    #calculate the number of pages per chapter\n    pages_per_chapter = c1 // c0\n\n    #calculate the starting page of the second chapter\n    second_chapter_start = pages_per_chapter + 1\n\n    #calculate the ending page of the second chapter\n    second_chapter_end = second_chapter_start + c2 - 1\n\n    #calculate the total number of pages in the second chapter\n    second_chapter_pages = second_chapter_end - second_chapter_start + 1\n\n    return second_chapter_pages", "mapping": {"c0": 2.0, "c1": 81.0, "c2": 68.0}}
{"question": "White t - shirts can be purchased in packages. If mom buys c0 packages which contain c1 white t - shirts in totalHow many white t - shirts does each package have?", "answer": [2.0], "response": "def Problem(c0, c1):\n    #calculate the number of white t-shirts per package by dividing the total number of white t-shirts by the number of packages\n    shirts_per_package = c1 / c0\n\n    return shirts_per_package", "mapping": {"c0": 28.0, "c1": 56.0}}
{"question": "Baker made c0 pastries and c1 cakes. If he sold c2 cakes and c3 pastriesHow many more cakes than pastries did baker make?", "answer": [32.0], "response": "def pastry_vs_cake(c0, c1, c2, c3):\n    #calculate the total number of cakes and pastries made\n    total_cakes = c1\n    total_pastries = c0\n\n    #calculate the total number of cakes and pastries sold\n    sold_cakes = c2\n    sold_pastries = c3\n\n    #calculate the difference between the number of cakes and pastries made\n    cake_vs_pastry = total_cakes - total_pastries\n\n    #calculate the difference between the number of cakes and pastries sold\n    sold_cake_vs_pastry = sold_cakes - sold_pastries\n\n    #calculate the difference between the number of cakes and pastries made and sold\n    diff = sold_cake_vs_pastry - cake_vs_pastry\n\n    return diff", "mapping": {"c0": 52.0, "c1": 84.0, "c2": 102.0, "c3": 94.0}}
{"question": "Jessie weighed c0 kilograms. After she started to go jogging everyday she lost c1 kilograms.How much does she weigh now?", "answer": [51.0], "response": "def weight_after_jogging(c0, c1):\n    #Jessie weighed c0 kilograms before jogging\n    weight_before = c0\n\n    #After jogging, she lost c1 kilograms\n    weight_lost = c1\n\n    #Her current weight can be calculated by subtracting the weight lost from her original weight\n    weight_now = weight_before - weight_lost\n\n    return weight_now", "mapping": {"c0": 71.0, "c1": 20.0}}
{"question": "Lawrence county has c0 kids. During summer break c1 kids go to camp and the rest stay home.How many kids stay home?", "answer": [268627.0], "response": "def kids_at_home(c0, c1):\n    #c0 is the total number of kids in Lawrence county\n    #c1 is the number of kids who go to camp during summer break\n    #The number of kids who stay home can be calculated by subtracting the number of kids who go to camp from the total number of kids\n    kids_at_home = c0 - c1\n    return kids_at_home", "mapping": {"c0": 898051.0, "c1": 629424.0}}
{"question": "Dave had c0 apps and c1 files on his phone. After deleting some apps and files he had c2 apps and c3 files left.How many files did he delete?", "answer": [14.0], "response": "def deleted_files(c0, c1, c2, c3):\n    # Dave had c0 apps and c1 files on his phone\n    apps_before = c0\n    files_before = c1\n\n    # After deleting some apps and files he had c2 apps and c3 files left\n    apps_after = c2\n    files_after = c3\n\n    # The number of files he deleted can be calculated by subtracting the number of files afterward from the original number of files\n    deleted = files_before - files_after\n\n    return deleted", "mapping": {"c0": 17.0, "c1": 21.0, "c2": 3.0, "c3": 7.0}}
{"question": "If you had c0 cookies and each bag has c1 cookiesHow many bags of cookies do you have?", "answer": [3.0], "response": "def num_bags(c0, c1):\n    #calculate the number of bags by dividing the total number of cookies by the number of cookies in each bag\n    num_bags = c0 // c1\n    return num_bags", "mapping": {"c0": 33.0, "c1": 11.0}}
{"question": "He then went to see the oranges being harvested. He found out that they harvest c0 sacks per day and that each sack containes c1 oranges.How many oranges will they have after c2 days of harvest?", "answer": [143550.0], "response": "def oranges_harvested(c0, c1, c2):\n    #calculate the total number of oranges harvested in one day\n    oranges_per_day = c0 * c1\n\n    #calculate the total number of oranges harvested in c2 days\n    total_oranges = oranges_per_day * c2\n\n    return total_oranges", "mapping": {"c0": 66.0, "c1": 25.0, "c2": 87.0}}
{"question": "Nell collects baseball cards. She had c0 cards. She gave c1 of her cards to Jeff.How many cards does Nell have left?", "answer": [106.0], "response": "def remaining_cards(c0, c1):\n    # Nell had c0 cards\n    cards_before = c0\n\n    # Nell gave c1 cards to Jeff\n    cards_given = c1\n\n    # The number of cards Nell has left can be calculated by subtracting the cards given from the cards before\n    cards_left = cards_before - cards_given\n\n    return cards_left", "mapping": {"c0": 242.0, "c1": 136.0}}
{"question": "Helen the hippo and her friends are preparing for thanksgiving at Helen's house. Helen baked c0 chocolate chip cookies yesterday and c1 raisin cookies and c2 chocolate chip cookies this morning.How many chocolate chip cookies did Helen bake?", "answer": [574.0], "response": "def chocolate_chip_cookies(c0, c1, c2):\n    #Helen baked c0 chocolate chip cookies yesterday\n    chocolate_chip_yesterday = c0\n\n    #Helen baked c1 raisin cookies and c2 chocolate chip cookies this morning\n    raisin_cookies = c1\n    chocolate_chip_today = c2\n\n    #The total number of chocolate chip cookies Helen baked is the sum of the chocolate chip cookies she baked yesterday and today\n    total_chocolate_chip = chocolate_chip_yesterday + chocolate_chip_today\n\n    return total_chocolate_chip", "mapping": {"c0": 90.0, "c1": 51.0, "c2": 484.0}}
{"question": "There were c0 roses in the vase. Jessica cut some more roses from her flower garden which had a total of c1 roses. There are now c2 roses in the vase.How many roses are left in the garden?", "answer": [4.0], "response": "def roses_left(c0, c1, c2):\n    #calculate the number of roses Jessica cut from her garden\n    cut_roses = c2 - c0\n    \n    #calculate the number of roses left in the garden\n    left_roses = c1 - cut_roses\n    \n    return left_roses", "mapping": {"c0": 13.0, "c1": 12.0, "c2": 21.0}}
{"question": "Jerry had some action figures on a shelf in his room. Later he added c0 more action figures to the shelf and removed c1 of the old ones. If there are c2 action figures on his shelf nowHow many action figures did he have initially on the shelf?", "answer": [15.0], "response": "def initial_figures(c0, c1, c2):\n    #initial number of action figures can be calculated by subtracting the added figures and removed figures from the current number of figures\n    initial = c2 - c0 + c1\n    return initial", "mapping": {"c0": 2.0, "c1": 7.0, "c2": 10.0}}
{"question": "A book has c0 chapters across c1 pages. The first chapter is c2 pages long.How many pages are in the first chapter?", "answer": [13.0], "response": "def first_chapter_pages(c0, c1, c2):\n    #calculate the total number of pages in the book\n    total_pages = c0 * c1\n\n    #calculate the number of pages after the first chapter\n    remaining_pages = total_pages - c2\n\n    #calculate the number of pages in the first chapter\n    first_chapter = c1 - remaining_pages % c1\n\n    return first_chapter", "mapping": {"c0": 2.0, "c1": 23.0, "c2": 10.0}}
{"question": "Paul had c0 books. After selling some in a garage sale he bought c1 new ones. If he has c2 books nowHow many more books did he sell than he bought?", "answer": [6.0], "response": "def bookSale(c0, c1, c2):\n    #Paul had c0 books\n    books_before = c0\n\n    #After selling some in a garage sale he bought c1 new ones\n    books_after = books_before - c1 + c2\n\n    #The number of books he sold can be calculated by subtracting the number of books he has now from the number of books he had before the garage sale\n    sold = books_before - books_after\n\n    #The number of books he bought can be calculated by subtracting the number of books he had before the garage sale from the number of books he has now\n    bought = books_after - books_before\n\n    #The difference between the number of books he sold and the number of books he bought is the answer to the question\n    difference = sold - bought\n\n    return difference", "mapping": {"c0": 21.0, "c1": 42.0, "c2": 15.0}}
{"question": "Allan and Jake brought c0 balloons to the park. If Allan brought c1 balloonsHow many balloons did Jake bring to the park?", "answer": [1.0], "response": "def balloons_jake(c0, c1):\n    # Allan brought c1 balloons\n    allan_balloons = c1\n\n    # Jake's balloons can be calculated by subtracting Allan's balloons from the total number of balloons\n    jake_balloons = c0 - allan_balloons\n\n    return jake_balloons", "mapping": {"c0": 3.0, "c1": 2.0}}
{"question": "There are c0 students in a school. If the school has c1 students in each grades and each grade has the same number of studentsHow many grades are there in total?", "answer": [54.0], "response": "def num_grades(c0, c1):\n    #calculate the number of grades by dividing the total number of students by the number of students in each grade\n    num_grades = c0 // c1\n    return num_grades", "mapping": {"c0": 270.0, "c1": 5.0}}
{"question": "After finding some bottle caps at the park danny has c0 bottle caps in his collection. If he had c1 bottle caps in his collection earlierHow many bottle caps did he find at the park?", "answer": [7.0], "response": "def find_bottle_caps(c0, c1):\n    # Danny had c1 bottle caps earlier\n    earlier_caps = c1\n\n    # Danny found some bottle caps at the park and now has c0 bottle caps\n    current_caps = c0\n\n    # The number of bottle caps he found can be calculated by subtracting the earlier number of bottle caps from the current number of bottle caps\n    found_caps = current_caps - earlier_caps\n\n    return found_caps", "mapping": {"c0": 32.0, "c1": 25.0}}
{"question": "A mailman has to give c0 pieces of junk mail to each of the c1 blocks. If he gives c2 mails to each house in a blockHow many houses are there in a block?", "answer": [4.0], "response": "def Problem(c0, c1, c2):\n    #The mailman has to give c0 pieces of junk mail to each block\n    mail_per_block = c0\n\n    #He gives c2 mails to each house in a block\n    mail_per_house = c2\n\n    #The number of houses in a block can be calculated by dividing the number of mails per block by the number of mails per house\n    houses_per_block = mail_per_block / mail_per_house\n\n    #The total number of houses can be calculated by multiplying the number of blocks by the number of houses per block\n    total_houses = c1 * houses_per_block\n\n    return total_houses", "mapping": {"c0": 32.0, "c1": 55.0, "c2": 8.0}}
{"question": "Winter is almost here and most animals are migrating to warmer countries. There are c0 bird families living near the mountain. If c1 bird families flew away to asia and c2 bird families flew away to africaHow many more bird families flew away to africa than those that flew away to asia?", "answer": [27.0], "response": "def bird_migration(c0, c1, c2):\n    #calculate the total number of bird families that flew away\n    total_flew_away = c1 + c2\n\n    #calculate the difference between the number of bird families that flew to Africa and those that flew to Asia\n    difference = c2 - c1\n\n    return difference", "mapping": {"c0": 41.0, "c1": 35.0, "c2": 62.0}}
{"question": "Paul got a box of c0 crayons for his birthday. During the school year he gave c1 crayons to his friends while he lost c2 crayons.How many crayons had been lost or given away?", "answer": [229.0], "response": "def crayons_lost_or_given(c0, c1, c2):\n    #c0 crayons were received as a gift\n    #c1 crayons were given to friends\n    #c2 crayons were lost\n    #the total number of crayons lost or given away can be calculated by adding the number of crayons given away and the number of crayons lost\n    lost_or_given = c1 + c2\n\n    return lost_or_given", "mapping": {"c0": 65.0, "c1": 213.0, "c2": 16.0}}
{"question": "Rachel had to complete c0 pages of math homework and yet more pages of reading homework. If she had to complete a total of c1 pages of homeworkHow many pages of reading homework did she have to complete?", "answer": [2.0], "response": "def reading_homework(c0, c1):\n    # Rachel had to complete c0 pages of math homework\n    math_homework = c0\n\n    # Rachel had to complete a total of c1 pages of homework\n    total_homework = c1\n\n    # Subtracting the number of pages of math homework from the total number of pages of homework gives the number of pages of reading homework\n    reading_homework = total_homework - math_homework\n\n    return reading_homework", "mapping": {"c0": 5.0, "c1": 7.0}}
{"question": "Brenda's mother made cookies for c0. She prepared c1 cookies but had to throw away c2 cookies. If each of them had the same number of cookiesHow many did each of them have?", "answer": [1.0], "response": "def cookie_problem(c0, c1, c2):\n    # Brenda's mother made c0 cookies\n    total_cookies = c0\n\n    # Brenda's mother prepared c1 cookies\n    prepared_cookies = c1\n\n    # Brenda's mother threw away c2 cookies\n    thrown_away_cookies = c2\n\n    # The number of cookies they had can be calculated by subtracting the number of thrown away cookies from the total number of cookies and dividing by 2\n    each_has = (total_cookies - thrown_away_cookies) / 2\n\n    return each_has", "mapping": {"c0": 5.0, "c1": 22.0, "c2": 17.0}}
{"question": "There were c0 roses and c1 orchids in the vase. Jessica cut some more roses and orchids from her flower garden. There are now c2 orchids and c3 roses in the vase.How many more roses than orchids are there in the vase now?", "answer": [1.0], "response": "def roses_vs_orchids(c0, c1, c2, c3):\n    #calculate the total number of roses and orchids before and after Jessica cut some from her garden\n    total_before = c0 + c1\n    total_after = c2 + c3\n\n    #calculate the difference between the number of roses and orchids after Jessica cut some from her garden\n    diff = c3 - c2 - (c0 - c1)\n\n    return diff", "mapping": {"c0": 6.0, "c1": 20.0, "c2": 21.0, "c3": 22.0}}
{"question": "He had a total of c0 saltwater animals in different aquariums. Each aquarium has c1 animals in it.How many aquariums did he have?", "answer": [20.0], "response": "def Problem(c0, c1):\n    #total number of saltwater animals\n    total_animals = c0\n\n    #number of animals in each aquarium\n    animals_per_aquarium = c1\n\n    #number of aquariums can be calculated by dividing the total number of animals by the number of animals in each aquarium\n    num_aquariums = total_animals // animals_per_aquarium\n\n    return num_aquariums", "mapping": {"c0": 40.0, "c1": 2.0}}
{"question": "Every day Ryan spends c0 hours on learning english and c1 hours on learning chinese. If he learns for c2 daysHow many hours does he spend on learning english and chinese in all?", "answer": [65.0], "response": "def total_learning_hours(c0, c1, c2):\n    #calculate the total hours spent on learning english and chinese\n    total_hours = (c0 + c1) * c2\n\n    return total_hours", "mapping": {"c0": 6.0, "c1": 7.0, "c2": 5.0}}
{"question": "Rachel picked c0 apples from her tree. Thereafter c1 new apples grew on the tree. Now the tree has c2 apples still on it.How many apples did the tree have to begin with?", "answer": [11.0], "response": "def initial_apples(c0, c1, c2):\n    # Rachel picked c0 apples from the tree\n    # c1 new apples grew on the tree\n    # Now the tree has c2 apples still on it\n    # We need to find out how many apples the tree had to begin with\n\n    # The number of apples on the tree before Rachel picked them can be calculated by subtracting the number of new apples from the current number of apples on the tree\n    initial_apples = c2 - c1\n\n    # If the number of initial apples is less than the number Rachel picked, then it means the tree had no apples to begin with\n    if initial_apples < c0:\n        return \"The tree had no apples to begin with\"\n    else:\n        return initial_apples", "mapping": {"c0": 7.0, "c1": 2.0, "c2": 6.0}}
{"question": "There were c0 people on the bus. At the next stop c1 more people got on the bus and c2 people got off.How many people are there on the bus now?", "answer": [17.0], "response": "def bus_people(c0, c1, c2):\n    #calculate the number of people on the bus after c1 people get on\n    total_people = c0 + c1\n\n    #subtract the number of people who got off the bus\n    total_people -= c2\n\n    return total_people", "mapping": {"c0": 8.0, "c1": 12.0, "c2": 3.0}}
{"question": "Dave had c0 apps and c1 files on his phone. After deleting some apps and files he had c2 apps and c3 files left.How many more apps than files does he have left on the phone?", "answer": [17.0], "response": "def app_file_difference(c0, c1, c2, c3):\n    #calculate the number of apps left after deleting some\n    apps_left = c2\n\n    #calculate the number of files left after deleting some\n    files_left = c3\n\n    #calculate the difference between the number of apps and files left\n    difference = apps_left - files_left\n\n    return difference", "mapping": {"c0": 15.0, "c1": 24.0, "c2": 21.0, "c3": 4.0}}
{"question": "Baker made c0 cakes. He bought c1 new cakes and sold c2 cakes.How many cakes does baker still have?", "answer": [190.0], "response": "def cakes_left(c0, c1, c2):\n    #Baker starts with c0 cakes\n    total_cakes = c0\n\n    #Baker buys c1 new cakes\n    total_cakes += c1\n\n    #Baker sells c2 cakes\n    total_cakes -= c2\n\n    #Return the number of cakes Baker has left\n    return total_cakes", "mapping": {"c0": 173.0, "c1": 103.0, "c2": 86.0}}
{"question": "Mary is baking a cake. The recipe calls for c0 cups of sugar c1 cups of flour and c2 cups of salt. She already put in c3 cups of flour.How many more cups of sugar than cups of salt does she need to add now?", "answer": [2.0], "response": "def sugar_vs_salt(c0, c1, c2, c3):\n    #calculate how much more sugar is needed\n    sugar_needed = c0 - c3\n\n    #calculate how much more salt is needed\n    salt_needed = c2\n\n    #calculate the difference between the amount of sugar and salt needed\n    difference = sugar_needed - salt_needed\n\n    return difference", "mapping": {"c0": 11.0, "c1": 6.0, "c2": 9.0, "c3": 12.0}}
{"question": "Ryan learns english and chinese for c0 days. Every day he spends c1 hours on learning english and c2 hours on learning chinese.How many hours does he spend on learning english and chinese in all?", "answer": [63.0], "response": "def total_hours(c0, c1, c2):\n    # Ryan learns English and Chinese for c0 days\n    days = c0\n\n    # Every day he spends c1 hours on learning English and c2 hours on learning Chinese\n    english_hours = c1\n    chinese_hours = c2\n\n    # Calculate the total hours spent on learning English and Chinese in all\n    total_hours = days * (english_hours + chinese_hours)\n\n    return total_hours", "mapping": {"c0": 7.0, "c1": 4.0, "c2": 5.0}}
{"question": "Dan has $ c0. He bought a candy bar for $ c1 and a chocolate for $ 3.How much money is left?", "answer": [2.0], "response": "def remaining_money(c0, c1):\n    # Dan bought a candy bar for c1 dollars\n    candy_cost = c1\n\n    # Dan bought a chocolate for 3 dollars\n    chocolate_cost = 3\n\n    # Calculate the total cost of the candy and chocolate\n    total_cost = candy_cost + chocolate_cost\n\n    # Calculate the remaining money after the purchase\n    remaining_money = c0 - total_cost\n\n    return remaining_money", "mapping": {"c0": 7.0, "c1": 2.0}}
{"question": "During summer break c0 kids from Lawrence county stayed home and the rest went to camp. The total number of kids in Lawrence county is 91676.About how many kids in Lawrence county went to camp?", "answer": [30057.0], "response": "We can calculate the number of kids who went to camp by subtracting the number of kids who stayed home from the total number of kids in Lawrence county:\n\ndef num_kids_at_camp(c0):\n    total_kids = 91676\n    kids_at_home = c0\n    kids_at_camp = total_kids - kids_at_home\n    return kids_at_camp\n\n# Example usage:\nprint(num_kids_at_camp(50000)) # Output: 41676", "mapping": {"c0": 61619.0}}
{"question": "After Jessie started to go jogging everyday she lost c0 kilograms. She currently weighs c1 kilograms.How much did she weigh before starting to jog?", "answer": [192.0], "response": "def weight_before_jogging(c0, c1):\n    # Jessie lost c0 kilograms after jogging\n    weight_after_jogging = c1\n\n    # Her weight before jogging can be calculated by adding the weight she lost to her current weight\n    weight_before_jogging = weight_after_jogging + c0\n\n    return weight_before_jogging", "mapping": {"c0": 126.0, "c1": 66.0}}
{"question": "Josh had c0 marbles in his collection. He lost c1 marbles and found c2 new ones.How many more marbles did he find than those he lost?", "answer": [2.0], "response": "def marbles_difference(c0, c1, c2):\n    #calculate the total number of marbles after the changes\n    total_marbles = c0 - c1 + c2\n    \n    #calculate the difference between the number of marbles found and lost\n    difference = c2 - c1\n    \n    return difference", "mapping": {"c0": 7.0, "c1": 8.0, "c2": 10.0}}
{"question": "Nell collects cards. She had c0 baseball cards and c1 Ace cards. She gave some of her cards to Jeff and now has c2 Ace cards and c3 baseball cards left.How many more Ace cards than baseball cards does Nell have?", "answer": [265.0], "response": "def card_difference(c0, c1, c2, c3):\n    #calculate the number of cards Nell gave to Jeff\n    cards_given = (c0 - c3) + (c1 - c2)\n\n    #calculate the difference between the number of Ace cards and baseball cards Nell has left\n    difference = c2 - c3\n\n    #add the difference to the number of cards Nell gave to Jeff to get the total difference\n    total_difference = difference + cards_given\n\n    return total_difference", "mapping": {"c0": 239.0, "c1": 38.0, "c2": 376.0, "c3": 111.0}}
{"question": "In a school there are c0 boys and c1 girls. c2 more girls joined the school.How many more girls than boys does the school have?", "answer": [298.0], "response": "def school_difference(c0, c1, c2):\n    #total number of students before new girls joined\n    total_before = c0 + c1\n\n    #total number of students after new girls joined\n    total_after = total_before + c2\n\n    #number of girls after new girls joined\n    girls_after = c1 + c2\n\n    #number of boys after new girls joined\n    boys_after = c0\n\n    #difference between number of girls and boys after new girls joined\n    difference = girls_after - boys_after\n\n    return difference", "mapping": {"c0": 362.0, "c1": 257.0, "c2": 403.0}}
{"question": "Paul got a box of some crayons for his birthday. By the end of the school year he had either lost or given away c0 of them and only had c1 left.How many crayons did he get for his birthday?", "answer": [728.0], "response": "def crayons_received(c0, c1):\n    # Paul originally received c0 crayons\n    received = c0\n\n    # By the end of the school year, he only had c1 crayons left\n    left = c1\n\n    # The number of crayons he lost or gave away can be calculated by subtracting the number of crayons left from the number he originally received\n    lost_or_given_away = received - left\n\n    return lost_or_given_away", "mapping": {"c0": 551.0, "c1": 177.0}}
{"question": "Bryan took a look at his books as well. If he has a total of c0 books and each bookshelf contains c1 booksHow many bookshelves does he have?", "answer": [21.0], "response": "def bookshelves(c0, c1):\n    #calculate the number of bookshelves by dividing the total number of books by the number of books on each bookshelf\n    num_bookshelves = c0 // c1\n\n    return num_bookshelves", "mapping": {"c0": 42.0, "c1": 2.0}}
{"question": "Julia played tag with c0 kids on monday. If she played tag with c1 more kids on monday than on tuesdayHow many kids did she play with on tuesday?", "answer": [4.0], "response": "def tag_game(c0, c1):\n    # Julia played tag with c0 kids on Monday\n    # She played with c1 more kids on Monday than on Tuesday\n    # Let's find out how many kids she played with on Tuesday\n    c2 = c1 - c0\n    # c2 is the difference between the number of kids she played with on Monday and Tuesday\n    # So, the number of kids she played with on Tuesday is c0 + c2\n    return c0 + c2", "mapping": {"c0": 16.0, "c1": 12.0}}
{"question": "He then went to see the oranges being harvested. He found out that they harvest c0 sacks of unripe oranges and c1 sacks of ripe oranges per day.How many more sacks of ripe oranges than unripe oranges are harvested per day?", "answer": [45.0], "response": "def oranges_harvested(c0, c1):\n    #calculate the difference between the number of ripe and unripe oranges harvested\n    difference = c1 - c0\n    return difference", "mapping": {"c0": 41.0, "c1": 86.0}}
{"question": "Allan brought c0 balloons. If Allan and Jake brought total of c1 balloons to the parkHow many balloons did Jake bring to the park?", "answer": [1.0], "response": "def Jake_balloons(c0, c1):\n    # Allan brought c0 balloons\n    Allan_balloons = c0\n\n    # Total number of balloons brought by Allan and Jake is c1\n    # Therefore, Jake brought c1 - c0 balloons\n    Jake_balloons = c1 - Allan_balloons\n\n    return Jake_balloons", "mapping": {"c0": 5.0, "c1": 6.0}}
{"question": "The ring toss game at the carnival made c0 dollars per day. They were at the carnival for c1 days.How much money did they make?", "answer": [3168.0], "response": "def carnival_profit(c0, c1):\n    #calculate the total profit by multiplying the profit per day by the number of days\n    total_profit = c0 * c1\n\n    return total_profit", "mapping": {"c0": 144.0, "c1": 22.0}}
{"question": "Each basket of peaches has c0 red peaches and c1 green peaches. If there are c2 such basketsHow many peaches are in the baskets altogether?", "answer": [345.0], "response": "def total_peaches(c0, c1, c2):\n    #calculate the total number of red peaches\n    red_peaches = c0 * c2\n\n    #calculate the total number of green peaches\n    green_peaches = c1 * c2\n\n    #calculate the total number of peaches\n    total = red_peaches + green_peaches\n\n    return total", "mapping": {"c0": 19.0, "c1": 4.0, "c2": 15.0}}
{"question": "Paco had c0 sweet cookies and c1 salty cookies. He ate c2 sweet cookies and c3 salty cookies.How many more sweet cookies than salty cookies did he eat?", "answer": [3.0], "response": "def cookie_difference(c0, c1, c2, c3):\n    #calculate how many sweet cookies Paco has left after eating c2\n    sweet_left = c0 - c2\n\n    #calculate how many salty cookies Paco has left after eating c3\n    salty_left = c1 - c3\n\n    #calculate the difference between the number of sweet and salty cookies Paco ate\n    difference = sweet_left - salty_left\n\n    return difference", "mapping": {"c0": 37.0, "c1": 11.0, "c2": 5.0, "c3": 2.0}}
{"question": "Jake has c0 fewer peaches than Steven. If Jake has c1 peaches.How many peaches does Steven have?", "answer": [28.0], "response": "def StevenPeaches(c0, c1):\n    #Jake has c0 fewer peaches than Steven\n    #So Steven has c1 + c0 peaches\n    steven_peaches = c1 + c0\n\n    return steven_peaches", "mapping": {"c0": 11.0, "c1": 17.0}}
{"question": "Paul got a box of c0 crayons for his birthday. During the school year he lost c1 crayons while he gave away c2 crayons to his friends.How many more crayons did he give to his friends than those he lost?", "answer": [77.0], "response": "def crayon_difference(c0, c1, c2):\n    #calculate the total number of crayons Paul has left\n    total_crayons = c0 - c1\n\n    #calculate the number of crayons Paul gave away\n    given_away = c2\n\n    #calculate the number of crayons Paul lost\n    lost = c1\n\n    #calculate the difference between the number of crayons given away and the number of crayons lost\n    difference = given_away - lost\n\n    return difference", "mapping": {"c0": 267.0, "c1": 231.0, "c2": 308.0}}
{"question": "If the cave is c0 feet deep and they need to travel c1 feetHow far is the end of the cave?", "answer": [2226.0], "response": "def cave_distance(c0, c1):\n    #the distance to the end of the cave is the total distance they need to travel minus the depth of the cave\n    distance_to_end = c1 - c0\n\n    return distance_to_end", "mapping": {"c0": 919.0, "c1": 1307.0}}
{"question": "There are c0 bananas and c1 oranges in Philip's collection. If the bananas are organized into c2 groups and oranges are organized into c3 groupsHow big is each group of bananas?", "answer": [29.0], "response": "def banana_group_size(c0, c2):\n    #divide the number of bananas by the number of groups to get the size of each group\n    group_size = c0 / c2\n    return group_size", "mapping": {"c0": 203.0, "c1": 63.0, "c2": 7.0, "c3": 95.0}}
{"question": "Rebecca wants to split a collection of eggs into groups of c0. Rebecca has c1 eggs and c2 marbles.How many more eggs does Rebecca have than marbles?", "answer": [14.0], "response": "def eggMarbleDifference(c0, c1, c2):\n    #calculate the total number of eggs in the collection\n    total_eggs = c0 * (c1 // c0)\n\n    #calculate the difference between the total number of eggs and the number of marbles\n    difference = total_eggs - c2\n\n    return difference", "mapping": {"c0": 5.0, "c1": 20.0, "c2": 6.0}}
{"question": "Paige raised c0 goldfish in the pond but stray cats loved eating them. c1 were eaten.How many goldfish remained?", "answer": [10.0], "response": "def remaining_goldfish(c0, c1):\n    #calculate the number of goldfish remaining after some were eaten by stray cats\n    remaining = c0 - c1\n    return remaining", "mapping": {"c0": 15.0, "c1": 5.0}}
{"question": "Zachary did c0 push-ups and c1 crunches in gym class today. David did c2 more push-ups but c3 less crunches than zachary.How many push-ups did David do?", "answer": [78.0], "response": "def David_pushups(c0, c1, c2, c3):\n    # Zachary did c0 push-ups and c1 crunches\n    zachary_pushups = c0\n\n    # David did c2 more push-ups than Zachary\n    david_pushups = zachary_pushups + c2\n\n    return david_pushups", "mapping": {"c0": 59.0, "c1": 44.0, "c2": 19.0, "c3": 27.0}}
{"question": "Dave had c0 apps on his phone. He deleted c1 apps.How many apps are left on his phone?", "answer": [14.0], "response": "def remaining_apps(c0, c1):\n    # Dave had c0 apps on his phone\n    apps_before = c0\n\n    # Dave deleted c1 apps\n    apps_deleted = c1\n\n    # The number of apps left on his phone can be calculated by subtracting the number of deleted apps from the original number of apps\n    apps_left = apps_before - apps_deleted\n\n    return apps_left", "mapping": {"c0": 19.0, "c1": 5.0}}
{"question": "Mary is baking a cake. The recipe calls for c0 cups of sugar c1 cups of flour and c2 cups of salt. She already put in c3 cups of flour.How many more cups of flour than cups of sugar does she need to add now?", "answer": [1.0], "response": "def flour_to_sugar(c0, c1, c2, c3):\n    #calculate how many cups of flour are needed by subtracting the amount already added from the total required\n    flour_needed = c1 - c3\n\n    #calculate how many cups of sugar are needed\n    sugar_needed = c0\n\n    #calculate the difference between the cups of flour needed and cups of sugar needed\n    difference = flour_needed - sugar_needed\n\n    return difference", "mapping": {"c0": 9.0, "c1": 14.0, "c2": 40.0, "c3": 4.0}}
{"question": "He then went to see the oranges being harvested. He found out that they harvest c0 sacks of ripe oranges and c1 sacks of unripe oranges per day.How many sacks of ripe oranges will they have after c2 days of harvest?", "answer": [2050.0], "response": "def ripe_oranges(c0, c1, c2):\n    #calculate the total number of ripe oranges harvested after c2 days\n    total_ripe_oranges = c0 * c2\n\n    #calculate the number of unripe oranges harvested after c2 days\n    total_unripe_oranges = c1 * c2\n\n    #calculate the number of sacks of ripe oranges after c2 days by subtracting the number of unripe oranges from the total number of oranges harvested\n    ripe_oranges_after_c2_days = total_ripe_oranges - total_unripe_oranges\n\n    return ripe_oranges_after_c2_days", "mapping": {"c0": 82.0, "c1": 61.0, "c2": 25.0}}
{"question": "Jack received c0 emails and c1 letters in the morning. He then received c2 emails and c3 letters in the afternoon.How many more emails did Jack receive in the morning than in the afternoon?", "answer": [7.0], "response": "def email_difference(c0, c1, c2, c3):\n    #calculate the total number of emails received in the morning and afternoon\n    morning_emails = c0\n    afternoon_emails = c2\n\n    #calculate the difference between the number of emails received in the morning and afternoon\n    email_diff = morning_emails - afternoon_emails\n\n    return email_diff", "mapping": {"c0": 10.0, "c1": 12.0, "c2": 3.0, "c3": 44.0}}
{"question": "Katie had c0 new games and c1 old games. Her friends had c2 new games and c3 old games.How many old games do they have c4", "answer": [121.0], "response": "def old_games_total(c0, c1, c2, c3):\n    # Katie has c0 new games and c1 old games\n    katie_old_games = c1\n\n    # Katie's friends have c2 new games and c3 old games\n    friends_old_games = c3\n\n    # The total number of old games is the sum of Katie's old games and her friends' old games\n    total_old_games = katie_old_games + friends_old_games\n\n    return total_old_games", "mapping": {"c0": 62.0, "c1": 80.0, "c2": 73.0, "c3": 41.0, "c4": 3.0}}
{"question": "Together Adam and Jackie have c0 apples. He has c1 apples more than Adam and Jackie together do. Adam has c2 more apples than Jackie.How many apples does He have?", "answer": [21.0], "response": "def He_apples(c0, c1, c2):\n    #Adam and Jackie have c0 apples together\n    total_apples = c0\n\n    #He has c1 apples more than Adam and Jackie together do\n    he_apples = c1 + total_apples\n\n    #Adam has c2 more apples than Jackie\n    adam_apples = (total_apples + c2) / 2\n\n    #He has the sum of Adam and Jackie's apples plus his own apples\n    total_he_apples = he_apples + adam_apples\n\n    return total_he_apples", "mapping": {"c0": 12.0, "c1": 9.0, "c2": 8.0}}
{"question": "He then went to see the oranges being harvested. He found out that they harvest c0 sacks per day and that each sack containes c1 oranges.How many oranges are harvested if they harvest a total of c2 sacks of oranges?", "answer": [420.0], "response": "def oranges_harvested(c0, c1, c2):\n    #calculate the total number of oranges harvested by multiplying the number of sacks by the number of oranges per sack\n    total_oranges = c0 * c1 * c2\n    return total_oranges", "mapping": {"c0": 67.0, "c1": 12.0, "c2": 35.0}}
{"question": "There are c0 oranges and c1 bananas in Philip's collection. If the bananas are organized into c2 groups and oranges are organized into c3 groupsHow big is each group of bananas?", "answer": [145.0], "response": "def banana_group_size(c0, c1, c2, c3):\n    #calculate the total number of bananas\n    total_bananas = c1\n    #calculate the total number of banana groups\n    total_banana_groups = c2\n    #calculate the total number of oranges\n    total_oranges = c0\n    #calculate the total number of orange groups\n    total_orange_groups = c3\n\n    #calculate the size of each banana group by dividing the total number of bananas by the total number of banana groups\n    banana_group_size = total_bananas / total_banana_groups\n\n    return banana_group_size", "mapping": {"c0": 87.0, "c1": 290.0, "c2": 2.0, "c3": 93.0}}
{"question": "There are c0 oranges and c1 bananas in Philip's collection. If the bananas are organized into c2 groups and oranges are organized into c3 groupsHow big is each group of oranges?", "answer": [24.0], "response": "def orange_group_size(c0, c1, c2, c3):\n    # calculate the total number of oranges\n    total_oranges = c0\n    # calculate the total number of bananas\n    total_bananas = c1\n    # calculate the number of groups of bananas\n    num_banana_groups = c2\n    # calculate the number of groups of oranges\n    num_orange_groups = c3\n\n    # calculate the number of oranges in each group\n    orange_group_size = (total_oranges - (num_orange_groups * (total_bananas / num_banana_groups))) / num_orange_groups\n\n    return orange_group_size", "mapping": {"c0": 384.0, "c1": 192.0, "c2": 345.0, "c3": 16.0}}
{"question": "David did c0 more push-ups but c1 less crunches than Zachary in gym class today. If Zachary did c2 push-ups and c3 crunchesHow many more crunches than push-ups did Zachary do?", "answer": [12.0], "response": "def crunches_vs_pushups(c0, c1, c2, c3):\n    #calculate the number of push-ups David did\n    david_pushups = c2 + c0\n    #calculate the number of crunches David did\n    david_crunches = c3 - c1\n    #calculate the number of crunches Zachary did\n    zachary_crunches = c3\n    #calculate the number of push-ups Zachary did\n    zachary_pushups = c2\n    #calculate the difference between the number of crunches and push-ups Zachary did\n    difference = zachary_crunches - zachary_pushups\n    #return the difference\n    return difference", "mapping": {"c0": 27.0, "c1": 7.0, "c2": 5.0, "c3": 17.0}}
{"question": "He also had c0 aquariums for freshwater animals and c1 aquariums for saltwater animals. Each aquarium has c2 animals in it.How many saltwater animals does Tyler have?", "answer": [1012.0], "response": "def saltwater_animals(c0, c1, c2):\n    #calculate the total number of animals in all aquariums\n    total_animals = (c0 + c1) * c2\n\n    #calculate the number of saltwater animals by subtracting the number of freshwater animals from the total number of animals\n    saltwater_animals = c1 * c2\n\n    return saltwater_animals", "mapping": {"c0": 74.0, "c1": 22.0, "c2": 46.0}}
{"question": "There were c0 dollars in Olivia's wallet. After she visited a supermarket and a showroom there were c1 dollars left. If she spent c2 dollars at the showroomHow much did she spend at the supermarket?", "answer": [31.0], "response": "def calculate_spending(c0, c1, c2):\n    #calculate how much money Olivia spent in total\n    total_spending = c0 - c1\n\n    #calculate how much money Olivia spent at the supermarket\n    supermarket_spending = total_spending - c2\n\n    return supermarket_spending", "mapping": {"c0": 106.0, "c1": 26.0, "c2": 49.0}}
{"question": "The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped c0 inches. The frog jumped c1 inches farther than the grasshopper and the mouse jumped c2 inches lesser than the frog.How much farther did the mouse jump than the grasshopper?", "answer": [28.0], "response": "def jumping_contest(c0, c1, c2):\n    # The frog jumped c1 inches farther than the grasshopper\n    frog_jump = c0 + c1\n\n    # The mouse jumped c2 inches lesser than the frog\n    mouse_jump = frog_jump - c2\n\n    # How much farther did the mouse jump than the grasshopper?\n    mouse_farther = mouse_jump - c0\n\n    return mouse_farther", "mapping": {"c0": 24.0, "c1": 33.0, "c2": 5.0}}
{"question": "Rachel picked c0 ripe apples from her tree. Now the tree has c1 ripe apples and c2 unripe apples.How many apples did the tree have to begin with?", "answer": [12.0], "response": "def initial_apples(c0, c1, c2):\n    #The total number of apples on the tree is the sum of ripe and unripe apples\n    total_apples = c1 + c2\n\n    #The number of apples the tree had to begin with can be calculated by adding the number of apples Rachel picked to the total number of apples on the tree now\n    initial = total_apples + c0\n\n    return initial", "mapping": {"c0": 6.0, "c1": 2.0, "c2": 4.0}}
{"question": "Frank was reading through his favorite book. The book had c0 pages and he read c1 pages per day.How many days did he take to finish the book?", "answer": [28.0], "response": "def days_to_finish_book(c0, c1):\n    # calculate the number of days it will take to finish the book\n    days = c0 // c1\n    # if there are any remaining pages, add one more day\n    if c0 % c1 != 0:\n        days += 1\n    return days", "mapping": {"c0": 392.0, "c1": 14.0}}
{"question": "Ed had c0 more marbles than Doug. Doug lost c1 of his marbles at the playground while Ed found c2 more marbles.How many more marbles did Ed have than Doug then?", "answer": [60.0], "response": "def marbles_difference(c0, c1, c2):\n    # Ed had c0 more marbles than Doug\n    ed_marbles = c0 + c2\n\n    # Doug lost c1 of his marbles at the playground\n    doug_marbles = ed_marbles - c0 - c1\n\n    # calculate the difference in marbles between Ed and Doug\n    difference = ed_marbles - doug_marbles\n\n    return difference", "mapping": {"c0": 24.0, "c1": 27.0, "c2": 9.0}}
{"question": "Faye was placing her pencils into rows with c0 pencils in each row. If she had c1 pencils and c2 crayonsHow many rows could she make?", "answer": [7.0], "response": "def Rows(c0, c1, c2):\n    #calculate the total number of pencils\n    total_pencils = c1 + (c2 * 10)\n\n    #calculate the number of rows that can be made\n    rows = total_pencils // c0\n\n    return rows", "mapping": {"c0": 5.0, "c1": 35.0, "c2": 7.0}}
{"question": "Some children were riding on the bus. At the bus stop c0 more children got on the bus. Then there were c1 children altogether on the bus.How many children were riding on the bus before the bus stop?", "answer": [39.0], "response": "def bus_riders(c0, c1):\n    #number of children on the bus before c0 more got on\n    before = c1 - c0\n    return before", "mapping": {"c0": 2.0, "c1": 41.0}}
{"question": "Danny has c0 bottle caps in his collection. He found c1 bottle caps at the park.How many bottle caps does he have now?", "answer": [65.0], "response": "def bottle_caps(c0, c1):\n    total_caps = c0 + c1\n    return total_caps", "mapping": {"c0": 12.0, "c1": 53.0}}
{"question": "Allan brought c0 balloons and Jake brought c1 balloons to the park.How many more balloons did Allan have than Jake in the park?", "answer": [2.0], "response": "def balloon_difference(c0, c1):\n    #calculate the difference between the number of balloons Allan and Jake brought\n    difference = c0 - c1\n    #return the absolute value of the difference to ensure a positive result\n    return abs(difference)", "mapping": {"c0": 5.0, "c1": 3.0}}
{"question": "Winter is almost here and most animals are migrating to warmer countries. There are c0 bird families living near the mountain. If c1 bird families flew away to africa and c2 bird families flew away to asiaHow many more bird families flew away to africa than those that flew away to asia?", "answer": [11.0], "response": "def bird_migration(c0, c1, c2):\n    #calculate the number of bird families that flew away to africa\n    africa = c1\n    #calculate the number of bird families that flew away to asia\n    asia = c2\n    #calculate the difference between the number of bird families that flew away to africa and those that flew away to asia\n    difference = africa - asia\n    return difference", "mapping": {"c0": 8.0, "c1": 42.0, "c2": 31.0}}
{"question": "Zachary did c0 push-ups and c1 crunches in gym class today. David did c2 more push-ups but c3 less crunches than zachary.How many more crunches than push-ups did Zachary do?", "answer": [12.0], "response": "def crunches_vs_pushups(c0, c1, c2, c3):\n    # Zachary did c0 push-ups and c1 crunches\n    zachary_pushups = c0\n    zachary_crunches = c1\n\n    # David did c2 more push-ups but c3 less crunches than Zachary\n    david_pushups = c0 + c2\n    david_crunches = c1 - c3\n\n    # Calculate the difference between crunches and push-ups for Zachary\n    difference = zachary_crunches - zachary_pushups\n\n    return difference", "mapping": {"c0": 46.0, "c1": 58.0, "c2": 38.0, "c3": 62.0}}
{"question": "The Ferris wheel in paradise park has c0 seats. If c1 people can ride the wheel at the same timeHow many people can each seat hold?", "answer": [5.0], "response": "def FerrisWheel(c0, c1):\n    #calculate how many people can ride the Ferris wheel at the same time\n    num_riders = c1\n\n    #calculate how many people each seat can hold\n    per_seat = num_riders / c0\n\n    return per_seat", "mapping": {"c0": 4.0, "c1": 20.0}}
{"question": "Rachel had to complete c0 pages of math homework, c1 pages of reading homework and c2 more pages of biology homework.How many pages did she have to complete in all?", "answer": [15.0], "response": "def total_homework_pages(c0, c1, c2):\n    #calculate the total number of pages by adding up the pages for each subject\n    total_pages = c0 + c1 + c2\n\n    return total_pages", "mapping": {"c0": 2.0, "c1": 3.0, "c2": 10.0}}
{"question": "For Gwen's birthday she received c0 dollars from her mom. Her dad gave her c1 more dollars. If she spent c2 dollars.How much more money did she receive from her dad than she did from her mom?", "answer": [3.0], "response": "def birthday_money(c0, c1, c2):\n    #calculate total money received\n    total_money = c0 + c1\n\n    #calculate how much money is left after spending\n    money_left = total_money - c2\n\n    #calculate the difference between money received from dad and mom\n    difference = c1 - c0\n\n    #if the difference is positive, dad gave more money than mom\n    #if the difference is negative, mom gave more money than dad\n    if difference > 0:\n        return difference\n    else:\n        return 0", "mapping": {"c0": 3.0, "c1": 6.0, "c2": 4.0}}
{"question": "Baker made c0 cakes. He sold c1 of them. Then he made c2 more cakes.How many cakes would baker still have?", "answer": [111.0], "response": "def cakes_left(c0, c1, c2):\n    #Baker made c0 cakes\n    cakes_made = c0\n\n    #Baker sold c1 cakes\n    cakes_sold = c1\n\n    #Baker made c2 more cakes\n    cakes_made_more = c2\n\n    #The number of cakes baker would still have can be calculated by subtracting the number of cakes sold from the total number of cakes made, and then adding the number of cakes made more\n    cakes_left = cakes_made - cakes_sold + cakes_made_more\n\n    return cakes_left", "mapping": {"c0": 110.0, "c1": 75.0, "c2": 76.0}}
{"question": "Baker made c0 pastries and c1 cakes. If he sold c2 cakes and c3 pastriesHow many cakes would baker still have?", "answer": [59.0], "response": "def cakes_left(c0, c1, c2, c3):\n    #calculate the total number of cakes and pastries made\n    total_cakes = c1\n    total_pastries = c0\n\n    #subtract the number of cakes and pastries sold\n    total_cakes -= c2\n    total_pastries -= c3\n\n    #return the number of cakes left\n    return total_cakes", "mapping": {"c0": 61.0, "c1": 167.0, "c2": 108.0, "c3": 44.0}}
{"question": "There are c0 different books and c1 different movies in the ' crazy silly school ' series. If you read c2 of the books and watched c3 of the moviesHow many more movies than books have you read?", "answer": [14.0], "response": "def compare_media(c0, c1, c2, c3):\n    #calculate the difference between the number of movies and books\n    difference = c3 - c2\n\n    return difference", "mapping": {"c0": 11.0, "c1": 17.0, "c2": 7.0, "c3": 21.0}}
{"question": "A mailman gives c0 junk mails to each house in a block. If the mailman has to give c1 pieces of junk mail to each block.How many houses are there in a block?", "answer": [7.0], "response": "def Problem(c0, c1):\n    #the mailman gives c0 junk mails to each house in a block\n    junk_per_house = c0\n\n    #the mailman has to give c1 pieces of junk mail to each block\n    total_junk = c1\n\n    #the number of houses in a block can be calculated by dividing the total junk mail by the junk mail per house\n    houses = total_junk / junk_per_house\n\n    return houses", "mapping": {"c0": 2.0, "c1": 14.0}}
{"question": "Ed had c0 more marbles than Doug. Doug lost c1 of his marbles at the playground. If Ed had c2 marblesHow many marbles does Doug have now?", "answer": [9.0], "response": "def DougMarbles(c0, c1, c2):\n    #Ed had c0 more marbles than Doug\n    EdMarbles = c0 + DougMarbles\n\n    #Doug lost c1 of his marbles at the playground\n    DougMarbles -= c1\n\n    #If Ed had c2 marbles, we can calculate how many marbles Doug has now\n    DougMarbles = c2 - c0\n\n    return DougMarbles", "mapping": {"c0": 6.0, "c1": 7.0, "c2": 22.0}}
{"question": "Dan has $ c0. He bought a candy bar for $ c1 and a chocolate for $ 3.How much money did he spend to buy candy bar than he did to buy chocolate?", "answer": [3.0], "response": "def candy_vs_chocolate(c0, c1):\n    # Dan bought a candy bar for c1 dollars\n    candy_cost = c1\n\n    # Dan bought a chocolate for 3 dollars\n    chocolate_cost = 3\n\n    # Dan spent more money on the candy bar than on the chocolate if the candy bar cost is greater than the chocolate cost\n    if candy_cost > chocolate_cost:\n        difference = candy_cost - chocolate_cost\n        return difference\n    # Otherwise, Dan spent more money on the chocolate than on the candy bar\n    else:\n        difference = chocolate_cost - candy_cost\n        return -difference #returning negative value to indicate that Dan spent less on candy than chocolate.", "mapping": {"c0": 2.0, "c1": 6.0}}
{"question": "A waiter had c0 customers. After some left he still had c1 customers.How many more customers stayed behind than those that left?", "answer": [5.0], "response": "def Problem(c0, c1):\n    #there were originally c0 customers\n    customers_before = c0\n\n    #after some left, there were c1 customers\n    customers_after = c1\n\n    #the number of customers that stayed behind can be calculated by subtracting the number of customers after from the number of customers before\n    stayed_behind = customers_before - customers_after\n\n    #the number of customers that left can be calculated by subtracting the number of customers that stayed behind from the number of customers before\n    left = customers_before - stayed_behind\n\n    return stayed_behind", "mapping": {"c0": 3.0, "c1": 4.0}}
{"question": "Julia played tag with c0 kids on tuesday. If she played tag with c1 more kids on monday than on tuesdayHow many kids did she play with on monday?", "answer": [22.0], "response": "def tag_game(c0, c1):\n    # Julia played tag with c0 kids on Tuesday\n    # She played with c1 more kids on Monday than on Tuesday\n    # So the number of kids she played with on Monday is c0 + c1\n    kids_on_monday = c0 + c1\n    return kids_on_monday", "mapping": {"c0": 14.0, "c1": 8.0}}
{"question": "Allan brought c0 balloons to the park. If Jake brought c1 more balloons than the number of balloons that Allan broughtHow many balloons did Jake bring to the park?", "answer": [11.0], "response": "def balloons_at_park(c0, c1):\n    # Jake brought c1 more balloons than Allan\n    jake_balloons = c0 + c1\n\n    return jake_balloons", "mapping": {"c0": 5.0, "c1": 6.0}}
{"question": "Jackie has c0 apples. Adam has c1 apples.How many more apples does Jackie have than Adam?", "answer": [2.0], "response": "def apple_difference(c0, c1):\n    #calculate the difference between the number of apples Jackie and Adam have\n    difference = c0 - c1\n\n    return difference", "mapping": {"c0": 10.0, "c1": 8.0}}
{"question": "Baker made c0 cakes and c1 pastries. If he sold c2 cakes and c3 pastriesHow many more pastries than cakes did baker make?", "answer": [112.0], "response": "def pastry_cake_difference(c0, c1, c2, c3):\n    #calculate the number of pastries and cakes made\n    cakes_made = c0\n    pastries_made = c1\n\n    #calculate the number of pastries and cakes sold\n    cakes_sold = c2\n    pastries_sold = c3\n\n    #calculate the difference between pastries and cakes made and sold\n    pastry_difference = pastries_made - pastries_sold\n    cake_difference = cakes_made - cakes_sold\n\n    #calculate the difference between pastries and cakes made\n    total_difference = pastry_difference - cake_difference\n\n    return total_difference", "mapping": {"c0": 19.0, "c1": 131.0, "c2": 70.0, "c3": 88.0}}
{"question": "For Gwen's birthday she received c0 dollars. She spent some money and has c1 dollars left with her.How much money did she spend?", "answer": [2.0], "response": "def birthday_spending(c0, c1):\n    #Gwen had c0 dollars initially\n    initial_money = c0\n\n    #She now has c1 dollars left\n    remaining_money = c1\n\n    #The amount she spent can be calculated by subtracting the remaining money from the initial money\n    spent_money = initial_money - remaining_money\n\n    return spent_money", "mapping": {"c0": 7.0, "c1": 5.0}}
{"question": "c0 red peaches, c1 yellow peaches and c2 green peaches are in the basket.How many red and yellow peaches are in the basket?", "answer": [32.0], "response": "def PeachCount(c0, c1, c2):\n    #calculate the total number of red and yellow peaches\n    red_yellow = c0 + c1\n\n    return red_yellow", "mapping": {"c0": 18.0, "c1": 14.0, "c2": 17.0}}
{"question": "Matthew gave equal numbers of crackers and cakes to his c0 friends. If he had c1 crackers and c2 cakes initiallyHow many crackers did each person eat?", "answer": [8.0], "response": "def crackers_per_person(c0, c1, c2):\n    # Matthew gave equal numbers of crackers and cakes to his c0 friends\n    # So, the total number of crackers and cakes he gave = c0 * 2\n    total_crackers_and_cakes = c0 * 2\n\n    # He initially had c1 crackers and c2 cakes\n    # So, the total number of crackers and cakes he had initially = c1 + c2\n    total_initial_crackers_and_cakes = c1 + c2\n\n    # Each person got an equal number of crackers and cakes\n    # So, the number of crackers each person got = total_crackers_and_cakes / c0\n    crackers_per_person = total_crackers_and_cakes / c0\n\n    # Each person ate only the crackers\n    # So, the number of crackers each person ate = crackers_per_person\n    crackers_eaten_per_person = crackers_per_person\n\n    return crackers_eaten_per_person", "mapping": {"c0": 4.0, "c1": 32.0, "c2": 98.0}}
{"question": "He then went to see the oranges being harvested. He found out that they harvested c0 sacks of oranges.How many sacks did they harvest per day if they harvested for a total of c1 days?", "answer": [4.0], "response": "def oranges_per_day(c0, c1):\n    #calculate the number of sacks harvested per day by dividing the total number of sacks by the number of days\n    sacks_per_day = c0 / c1\n    return sacks_per_day", "mapping": {"c0": 56.0, "c1": 14.0}}
{"question": "Adam has c0 more apples than Jackie. Together Adam and Jackie have c1 apples. Bob has c2 apples more than Adam and Jackie together do.How many apples does Bob have?", "answer": [20.0], "response": "def Problem(c0, c1, c2):\n    #Adam has c0 more apples than Jackie\n    #Let's assume Jackie has x apples, then Adam has x + c0 apples\n    x = c1 // 2 - c0\n    adam_apples = x + c0\n\n    #Together Adam and Jackie have c1 apples\n    jackie_apples = c1 // 2\n\n    #Bob has c2 apples more than Adam and Jackie together do\n    bob_apples = adam_apples + jackie_apples + c2\n\n    return bob_apples", "mapping": {"c0": 4.0, "c1": 14.0, "c2": 6.0}}
{"question": "Mary is baking a cake. The recipe calls for c0 cups of flour and c1 cups of sugar. She already put in some cups of flour. If she still needs c2 more cups of flour than sugarHow many more cups of flour does she need to add?", "answer": [21.0], "response": "def flour_needed(c0, c1, flour_added, c2):\n    #calculate how much flour is still needed\n    flour_needed = c0 - flour_added\n\n    #calculate how much sugar is already added\n    sugar_added = c1\n\n    #calculate how much sugar is still needed\n    sugar_needed = flour_needed - c2\n\n    #calculate how much more flour is needed\n    more_flour_needed = sugar_needed + sugar_added\n\n    return more_flour_needed", "mapping": {"c0": 6.0, "c1": 13.0, "c2": 8.0}}
{"question": "Winter is almost here and most animals are migrating to warmer countries. c0 bird families flew away for the winter from near a mountain. If there were c1 bird families living near the mountain initiallyHow many bird families were left near the mountain?", "answer": [14.0], "response": "def bird_families_left(c0, c1):\n    #c0 bird families flew away for the winter\n    flew_away = c0\n\n    #c1 bird families were living near the mountain initially\n    initially = c1\n\n    #The number of bird families left can be calculated by subtracting the number of bird families that flew away from the initial number of bird families\n    left = initially - flew_away\n\n    return left", "mapping": {"c0": 27.0, "c1": 41.0}}
{"question": "Jake has c0 fewer peaches than Steven. Steven has c1 more peaches than Jill. If Jill has c2 peachesHow many more peaches does Jill have than Jake?", "answer": [1.0], "response": "def peach_difference(c0, c1, c2):\n    # Jake has c0 fewer peaches than Steven\n    jake_peaches = c1 - c0\n\n    # Steven has c1 more peaches than Jill\n    steven_peaches = c2 + c1\n\n    # Jill has c2 peaches\n    jill_peaches = c2\n\n    # Jill's peaches minus Jake's peaches equals the difference\n    difference = jill_peaches - jake_peaches\n\n    return difference", "mapping": {"c0": 16.0, "c1": 15.0, "c2": 12.0}}
{"question": "A book has c0 chapters. The first chapter is c1 pages long. If there are a total of c2 pages in the bookHow many pages are in the second chapter?", "answer": [33.0], "response": "def second_chapter_pages(c0, c1, c2):\n    #calculate the total number of pages in the book by summing the number of pages in each chapter\n    total_pages = c1\n    for i in range(2, c0+1):\n        total_pages += c2/(c0-1)\n\n    #calculate the number of pages in the second chapter by subtracting the number of pages in the first chapter from the total number of pages and dividing by the number of remaining chapters\n    second_chapter = (total_pages - c1)/(c0-1)\n\n    return second_chapter", "mapping": {"c0": 2.0, "c1": 60.0, "c2": 93.0}}
{"question": "Paul got a box of some crayons for his birthday. During the school year he gave c0 crayons to his friends while he lost c1 crayons. If he only had c2 crayons leftHow many crayons did he get for his birthday?", "answer": [1453.0], "response": "Let's think about it step by step:\n\ndef crayons_birthday(c0, c1, c2):\n    #Paul got a box of crayons for his birthday\n    #Let's call the number of crayons he got x\n    x = 0\n\n    #During the school year he gave c0 crayons to his friends\n    #So he had x + c0 crayons before losing any\n    total_before_loss = x + c0\n\n    #He lost c1 crayons\n    #So he had total_before_loss - c1 crayons before ending up with c2 crayons\n    total_after_loss = total_before_loss - c1\n\n    #He ended up with c2 crayons\n    #So total_after_loss = x + c2\n    #Therefore, x = total_after_loss - c2\n    x = total_after_loss - c2\n\n    return x", "mapping": {"c0": 563.0, "c1": 558.0, "c2": 332.0}}
{"question": "At the stop c0 more people got on the bus. Initially there were c1 people on the bus.How many people are there on the bus now?", "answer": [17.0], "response": "def bus_passengers(c0, c1):\n    # add the number of people who got on the bus to the initial number of people on the bus\n    total_passengers = c0 + c1\n    return total_passengers", "mapping": {"c0": 13.0, "c1": 4.0}}
{"question": "Julia played tag with some kids on monday. She played tag with c0 kids on tuesday. If she played with a total of c1 kidsHow many kids did she play with on monday?", "answer": [2.0], "response": "def tag_on_monday(c0, c1):\n    #Julia played with c0 kids on Monday\n    #She played with a total of c1 kids\n    #So, she played with c1 - c0 kids on Tuesday\n    #Therefore, the number of kids she played with on Monday is c1 - (c1 - c0) = c0\n    return c0", "mapping": {"c0": 14.0, "c1": 16.0}}
{"question": "Baker's friend bought c0 cakes from him. If he had made c1 cakes initiallyHow many cakes would baker still have?", "answer": [32.0], "response": "def cakes_left(c0, c1):\n    #initially, there were c1 cakes\n    initial_cakes = c1\n\n    #baker's friend bought c0 cakes\n    bought_cakes = c0\n\n    #subtract the number of bought cakes from the initial number of cakes to get the number of cakes baker still has\n    remaining_cakes = initial_cakes - bought_cakes\n\n    return remaining_cakes", "mapping": {"c0": 137.0, "c1": 169.0}}
{"question": "Jerry had c0 action figures and c1 books on a shelf in his room. Later he added c2 more action figures to the shelf.How many more action figures than books were on his shelf?", "answer": [3.0], "response": "def action_figures_more_than_books(c0, c1, c2):\n    #calculate the total number of action figures after adding c2 more\n    total_action_figures = c0 + c2\n\n    #calculate the difference between the total number of action figures and the number of books\n    difference = total_action_figures - c1\n\n    return difference", "mapping": {"c0": 5.0, "c1": 9.0, "c2": 7.0}}
{"question": "For c0 weeks of harvest Lewis earns a total of $ 133.How much money does he earn each week?", "answer": [7.0], "response": "def weekly_earnings(c0, total_earnings):\n    #calculate the amount earned per week by dividing the total earnings by the number of weeks\n    earnings_per_week = total_earnings / c0\n    return earnings_per_week", "mapping": {"c0": 19.0}}
{"question": "Paul had some books. After selling c0 in a garage sale he had c1 left.How many books did he have at the start?", "answer": [242.0], "response": "def Problem(c0, c1):\n    #Paul had c0 books at the start\n    books_start = c0\n\n    #After selling some books in a garage sale, he had c1 books left\n    books_left = c1\n\n    #The number of books he had at the start can be calculated by adding the number of books he sold to the number of books he had left\n    books_sold = books_start - books_left\n    books_start = books_left + books_sold\n\n    return books_start", "mapping": {"c0": 137.0, "c1": 105.0}}
{"question": "Last week Fred had c0 dollars and Jason had c1 dollars. Over the weekend Fred delivered newspapers earning c2 dollars and washed cars earning c3 dollars.How much money did Fred earn over the weekend?", "answer": [90.0], "response": "def fred_earnings(c0, c2, c3):\n    # Fred had c0 dollars last week\n    fred_money_before = c0\n\n    # Fred earned c2 dollars delivering newspapers\n    fred_newspaper_earnings = c2\n\n    # Fred earned c3 dollars washing cars\n    fred_car_washing_earnings = c3\n\n    # Fred's total earnings over the weekend can be calculated by adding his earnings from delivering newspapers and washing cars\n    fred_total_earnings = fred_newspaper_earnings + fred_car_washing_earnings\n\n    return fred_total_earnings", "mapping": {"c0": 33.0, "c1": 95.0, "c2": 16.0, "c3": 74.0}}
{"question": "If you have c0 cookies in total and c1 bags having equal number of cookiesHow many cookies does each bag have?", "answer": [2.0], "response": "def cookies_per_bag(c0, c1):\n    #calculate the number of cookies per bag by dividing the total number of cookies by the number of bags\n    cookies_per_bag = c0 / c1\n\n    return cookies_per_bag", "mapping": {"c0": 14.0, "c1": 7.0}}
{"question": "Matthew gave equal numbers of crackers to his c0 friends. If he had c1 crackersHow many crackers did each person eat?", "answer": [2.0], "response": "def crackers_per_person(c0, c1):\n    # Matthew gave equal numbers of crackers to his c0 friends\n    num_friends = c0\n\n    # If he had c1 crackers, we need to divide them equally among his friends\n    crackers_per_friend = c1 / num_friends\n\n    return crackers_per_friend", "mapping": {"c0": 18.0, "c1": 36.0}}
{"question": "Kelly has c0 nintendo games. She found c1 more nintendo games.How many does she need to give away so that she will have c2 games left?", "answer": [105.0], "response": "def nintendo_games(c0, c1, c2):\n    # Kelly has c0 nintendo games\n    games_before = c0\n\n    # Kelly found c1 more nintendo games\n    games_found = c1\n\n    # Kelly needs to give away some games to have c2 games left\n    games_left = c2\n\n    # The number of games Kelly needs to give away can be calculated by subtracting the difference between the games she found and the games she needs to have left from the games she had originally\n    games_to_give_away = games_before - (games_found - games_left)\n\n    return games_to_give_away", "mapping": {"c0": 80.0, "c1": 31.0, "c2": 6.0}}
{"question": "There are c0 different books and c1 different movies in the ' crazy silly school ' series. If you read c2 of the books and watched c3 of the moviesHow many more movies do you still have to watch?", "answer": [10.0], "response": "def remaining_movies(c0, c1, c2, c3):\n    #calculate the number of movies already watched\n    watched_movies = c3\n\n    #calculate the total number of movies in the series\n    total_movies = c1\n\n    #calculate the number of movies left to watch\n    remaining_movies = total_movies - watched_movies\n\n    #calculate the number of books already read\n    read_books = c2\n\n    #calculate the total number of books in the series\n    total_books = c0\n\n    #calculate the number of books left to read\n    remaining_books = total_books - read_books\n\n    #if there are more books left to read than movies left to watch, return the number of remaining movies\n    if remaining_books > remaining_movies:\n        return remaining_movies\n\n    #if there are more movies left to watch than books left to read, return the difference between the total number of movies and the number of movies already watched\n    else:\n        return remaining_movies - remaining_books", "mapping": {"c0": 4.0, "c1": 17.0, "c2": 19.0, "c3": 7.0}}
{"question": "He then went to see the oranges being harvested. He found out that they harvest c0 sacks of ripe oranges and c1 sacks of unripe oranges per day.How many more sacks of unripe oranges than ripe oranges are harvested per day?", "answer": [69.0], "response": "def oranges_harvested(c0, c1):\n    #calculate the difference between the number of unripe and ripe oranges harvested\n    difference = c1 - c0\n    \n    return difference", "mapping": {"c0": 5.0, "c1": 74.0}}
{"question": "Lewis earns $ c0 every week during the c1 weeks of harvest. If he has to pay $ c2 rent every weekHow much money does he pay as rent during the harvest season?", "answer": [527292.0], "response": "def rent_payment(c0, c1, c2):\n    #calculate the total rent payment by multiplying the rent per week by the number of weeks\n    total_rent = c1 * c2\n\n    return total_rent", "mapping": {"c0": 368.0, "c1": 1359.0, "c2": 388.0}}
{"question": "For the walls of the house he would use c0 nails in all to secure large planks of wood. If each plank needs c1 pieces of nails to be secured and an additional c2 nails were used.How many planks does John need for the house wall?", "answer": [1.0], "response": "def calculate_planks(c0, c1, c2):\n    #calculate the total number of nails used for each plank\n    total_nails_per_plank = c1 + c2\n\n    #calculate the number of planks needed by dividing the total number of nails by the number of nails per plank\n    planks_needed = c0 // total_nails_per_plank\n\n    return planks_needed", "mapping": {"c0": 11.0, "c1": 3.0, "c2": 8.0}}
{"question": "c0 red peaches and c1 green peaches are in the basket.How many more red peaches than green peaches are in the basket?", "answer": [1.0], "response": "def peach_difference(c0, c1):\n    #calculate the difference between the number of red and green peaches\n    difference = c0 - c1\n    return difference", "mapping": {"c0": 17.0, "c1": 16.0}}
{"question": "Because of the decision Sofia asked the students to suggest specific types of food. If c0 students suggested adding mashed potatoes c1 suggested adding bacon to the menu and c2 suggested adding tomatoesHow many students participated in the suggestion of new food items?", "answer": [826.0], "response": "def food_suggestion_count(c0, c1, c2):\n    #the number of students who suggested food items is the sum of c0, c1, and c2\n    total_suggestions = c0 + c1 + c2\n\n    return total_suggestions", "mapping": {"c0": 324.0, "c1": 374.0, "c2": 128.0}}
{"question": "During summer break c0 kids from Lawrence county go to camp and the other c1 kids stay home.How many more kids stayed home compared to those who went to the camp?", "answer": [574664.0], "response": "def summer_break(c0, c1):\n    #calculate the difference between the number of kids who stayed home and those who went to camp\n    difference = c1 - c0\n    \n    return difference", "mapping": {"c0": 202958.0, "c1": 777622.0}}
{"question": "c0 birds and c1 storks were sitting on the fence. c2 more storks came to join them.How many more birds than storks are sitting on the fence?", "answer": [1.0], "response": "def fence_birds(c0, c1, c2):\n    #total number of birds before new storks arrived\n    total_birds = c0 + c1\n\n    #total number of storks after new storks arrived\n    total_storks = c1 + c2\n\n    #calculate the difference between total birds and total storks\n    difference = total_birds - total_storks\n\n    return difference", "mapping": {"c0": 6.0, "c1": 3.0, "c2": 2.0}}
{"question": "There are c0 different books and c1 different movies in the ' crazy silly school ' series. If you read c2 of the books and watched c3 of the moviesHow many more books do you still have to read?", "answer": [10.0], "response": "def remaining_books(c0, c1, c2, c3):\n    #calculate the number of books and movies already consumed\n    books_consumed = c2\n    movies_consumed = c3\n\n    #calculate the remaining books to be consumed\n    remaining_books = c0 - books_consumed\n\n    return remaining_books", "mapping": {"c0": 22.0, "c1": 10.0, "c2": 12.0, "c3": 56.0}}
{"question": "There were c0 people on the bus. At the next stop c1 more people got on the bus. Each bus can not have more than c2 people.How many people are there on the bus now?", "answer": [16.0], "response": "def bus_capacity(c0, c1, c2):\n    # calculate the number of people on the bus after c1 more people get on\n    total_people = c0 + c1\n    \n    # if the total number of people exceeds the bus capacity, return the bus capacity\n    if total_people > c2:\n        return c2\n    \n    # otherwise, return the total number of people on the bus\n    else:\n        return total_people", "mapping": {"c0": 12.0, "c1": 4.0, "c2": 36.0}}
{"question": "A grocery store had c0 bottles of regular soda, c1 bottles of diet soda and c2 bottles of lite soda.How many bottles did they have total?", "answer": [110.0], "response": "def total_bottles(c0, c1, c2):\n    #calculate the total number of bottles by adding up the number of bottles of each type\n    total = c0 + c1 + c2\n    return total", "mapping": {"c0": 57.0, "c1": 26.0, "c2": 27.0}}
{"question": "Because of the decision Sofia asked c0 students to suggest specific types of food. c1 students suggested adding bacon while others suggested adding mashed potatoes to the menu.How many students suggested mashed potatoes?", "answer": [24.0], "response": "def mashed_potatoes(c0, c1):\n    # c0 students were asked to suggest specific types of food\n    # c1 students suggested adding bacon while others suggested adding mashed potatoes\n    # we need to find out how many students suggested mashed potatoes\n\n    # let's first calculate the number of students who suggested bacon\n    bacon_suggested = c1\n\n    # the total number of students who suggested any type of food is c0\n    # so the number of students who suggested mashed potatoes can be calculated by subtracting the number of students who suggested bacon from c0\n    mashed_potatoes_suggested = c0 - bacon_suggested\n\n    return mashed_potatoes_suggested", "mapping": {"c0": 288.0, "c1": 264.0}}
{"question": "Edward spent $ c0. Then he spent $ c1 more. Now he has $ 17.How much did Edward have before he spent his money?", "answer": [34.0], "response": "def edward_money(c0, c1):\n    # Edward spent c0 and then c1 more\n    spent = c0 + c1\n\n    # Now he has $17\n    total = 17\n\n    # To find out how much he had before spending, we need to add the amount he spent to the total he has now\n    before_spending = total + spent\n\n    return before_spending", "mapping": {"c0": 9.0, "c1": 8.0}}
{"question": "Winter is almost here and most animals are migrating to warmer countries. There are c0 bird families living near the mountain. If c1 bird families flew away to africa and c2 bird families flew away to asiaHow many bird families were left near the mountain?", "answer": [25.0], "response": "def bird_families_left(c0, c1, c2):\n    #calculate the total number of bird families that flew away\n    flew_away = c1 + c2\n\n    #calculate the number of bird families left near the mountain\n    left = c0 - flew_away\n\n    return left", "mapping": {"c0": 85.0, "c1": 23.0, "c2": 37.0}}
{"question": "In a school there are c0 girls and c1 boys. c2 more girls joined the school.How many girls are there in the school now?", "answer": [946.0], "response": "def girls_in_school(c0, c1, c2):\n    #total number of girls before new students joined\n    girls_before = c0\n\n    #total number of boys before new students joined\n    boys_before = c1\n\n    #number of new girls who joined\n    new_girls = c2\n\n    #total number of girls after new students joined\n    girls_after = girls_before + new_girls\n\n    return girls_after", "mapping": {"c0": 902.0, "c1": 811.0, "c2": 44.0}}
{"question": "Dan has $ c0. He bought a chocolate for $ c1 and a candy bar for $ 2.How much money did he spend to buy chocolate than he did to buy candy bar?", "answer": [5.0], "response": "def spending_difference(c0, c1):\n    # Dan spent c1 dollars on chocolate\n    chocolate_cost = c1\n\n    # Dan spent 2 dollars on candy bar\n    candy_bar_cost = 2\n\n    # Calculate the difference in spending between chocolate and candy bar\n    difference = chocolate_cost - candy_bar_cost\n\n    return difference", "mapping": {"c0": 4.0, "c1": 7.0}}
{"question": "At the arcade Dave had won c0 tickets. If he used c1 to buy some toys and c2 more to buy some clothesHow many tickets did Dave have left?", "answer": [2.0], "response": "def tickets_left(c0, c1, c2):\n    # Dave had c0 tickets\n    tickets = c0\n\n    # Dave used c1 tickets to buy toys\n    tickets -= c1\n\n    # Dave used c2 more tickets to buy clothes\n    tickets -= c2\n\n    # Return the number of tickets Dave has left\n    return tickets", "mapping": {"c0": 18.0, "c1": 5.0, "c2": 11.0}}
{"question": "The school is planning a field trip. The school has c0 classrooms. There are c1 students in the school with each classroom having the same number of students. There are c2 seats on each school bus.How many students are in each class?", "answer": [5.0], "response": "def field_trip(c0, c1, c2):\n    #calculate the total number of students in the school\n    total_students = c0 * c1\n\n    #calculate the number of buses needed to transport all the students\n    buses_needed = total_students // c2\n\n    #calculate the number of students in each class\n    students_per_class = total_students // c0\n\n    return students_per_class", "mapping": {"c0": 24.0, "c1": 120.0, "c2": 84.0}}
{"question": "He then went to see the oranges being harvested. He found out that the harvest will go on for c0 days.How many sacks do they harvest per day if they harvested a total of c1 sacks of oranges?", "answer": [14.0], "response": "def orange_sacks_per_day(c0, c1):\n    # calculate the number of sacks harvested per day by dividing the total number of sacks by the number of days\n    sacks_per_day = c1 / c0\n    return sacks_per_day", "mapping": {"c0": 4.0, "c1": 56.0}}
{"question": "There were c0 roses in the vase. Jessica threw away c1 roses from the vase and cut some more new roses from her flower garden to put in the vase. There are now c2 roses in the vase.How many more roses did she throw away than those she cut from her garden?", "answer": [6.0], "response": "def Problem(c0, c1, c2):\n    #there were originally c0 roses in the vase\n    roses_before = c0\n\n    #Jessica threw away c1 roses from the vase\n    roses_thrown_away = c1\n\n    #Jessica cut some more new roses from her flower garden to put in the vase\n    roses_cut_from_garden = c2 - roses_before + roses_thrown_away\n\n    #the difference between the number of roses thrown away and the number of roses cut from the garden is the answer\n    difference = roses_thrown_away - roses_cut_from_garden\n\n    return difference", "mapping": {"c0": 21.0, "c1": 34.0, "c2": 15.0}}
{"question": "Allan brought c0 balloons and Jake brought c1 balloons to the park. Allan then bought c2 more balloons at the park.How many more balloons did Jake have than Allan in the park?", "answer": [1.0], "response": "def balloon_difference(c0, c1, c2):\n    # Allan brought c0 balloons and Jake brought c1 balloons to the park\n    allan_balloons = c0\n    jake_balloons = c1\n\n    # Allan then bought c2 more balloons at the park\n    allan_balloons += c2\n\n    # Calculate the difference in balloons between Jake and Allan\n    difference = jake_balloons - allan_balloons\n\n    return difference", "mapping": {"c0": 2.0, "c1": 6.0, "c2": 3.0}}
{"question": "He then went to see the oranges being harvested. He found out that they harvest c0 sacks of ripe oranges and c1 sacks of unripe oranges per day.How many sacks of oranges will they have after c2 days of harvest?", "answer": [2080.0], "response": "def harvest(c0, c1, c2):\n    #calculate the total number of ripe oranges after c2 days of harvest\n    ripe_oranges = c0 * c2\n\n    #calculate the total number of unripe oranges after c2 days of harvest\n    unripe_oranges = c1 * c2\n\n    #calculate the total number of oranges after c2 days of harvest\n    total_oranges = ripe_oranges + unripe_oranges\n\n    return total_oranges", "mapping": {"c0": 28.0, "c1": 52.0, "c2": 26.0}}
{"question": "Together Adam and Jackie have c0 apples. He has c1 apples more than adam and jackie together do.How many apples does he have?", "answer": [10.0], "response": "def Problem(c0, c1):\n    #Adam and Jackie have c0 apples together\n    total_apples = c0\n\n    #He has c1 apples more than Adam and Jackie together do\n    his_apples = total_apples + c1\n\n    return his_apples", "mapping": {"c0": 6.0, "c1": 4.0}}
{"question": "After a typhoon, c0 trees in Haley's backyard died. If she had grown c1 trees initiallyHow many more trees survived the typhoon than those that died?", "answer": [7.0], "response": "def typhoon_survivors(c0, c1):\n    #calculate the number of trees that died\n    died = c1 - c0\n    #calculate the number of trees that survived\n    survived = c1 - died\n    #calculate the difference between the number of survivors and the number of trees that died\n    difference = survived - died\n    return difference", "mapping": {"c0": 2.0, "c1": 11.0}}
{"question": "Allan brought c0 balloons and Jake brought c1 balloons to the park. Jake then bought c2 more balloons at the park.How many balloons did Jake bring to the park?", "answer": [9.0], "response": "def Jake_balloons(c0, c1, c2):\n    #Jake brought c1 balloons to the park\n    jake_brought = c1\n\n    #Jake bought c2 more balloons at the park\n    jake_bought = c2\n\n    #The total number of balloons Jake brought to the park is the sum of the balloons he brought and the balloons he bought\n    jake_total = jake_brought + jake_bought\n\n    return jake_total", "mapping": {"c0": 5.0, "c1": 6.0, "c2": 3.0}}
{"question": "The Razorback shop makes $ c0 dollars off each t-shirt and $ c1 off each jersey. During the Arkansas and Texas tech game they sold c2 t-shirts and c3 jerseys.How much money did they make from selling the t-shirts?", "answer": [11346.0], "response": "def tshirt_profit(c0, c1, c2, c3):\n    #calculate the total profit from selling t-shirts\n    tshirt_profit = c0 * c2\n\n    return tshirt_profit", "mapping": {"c0": 62.0, "c1": 99.0, "c2": 183.0, "c3": 31.0}}
{"question": "David did c0 more push-ups than Zachary in gym class today. If David did c1 push-upsHow many push-ups did Zachary do?", "answer": [7.0], "response": "def zachary_pushups(c0, c1):\n    # David did c0 more push-ups than Zachary\n    david_pushups = c0 + c1\n\n    # Zachary did c0 less push-ups than David\n    zachary_pushups = david_pushups - c0\n\n    return zachary_pushups", "mapping": {"c0": 30.0, "c1": 37.0}}
{"question": "Marco and his dad went strawberry picking. Marco's strawberries weighed c0 pounds. If together their strawberries weighed c1 pounds.How much more did his strawberries weigh than his dad's?", "answer": [13.0], "response": "def strawberry_weight_difference(c0, c1):\n    # Marco's strawberries weighed c0 pounds\n    marco_weight = c0\n\n    # Together their strawberries weighed c1 pounds\n    total_weight = c1\n\n    # Calculate his dad's strawberry weight by subtracting Marco's weight from the total weight\n    dad_weight = total_weight - marco_weight\n\n    # Calculate the weight difference by subtracting his dad's weight from Marco's weight\n    weight_difference = marco_weight - dad_weight\n\n    return weight_difference", "mapping": {"c0": 30.0, "c1": 47.0}}
{"question": "Faye was placing her pencils and crayons into c0 rows with c1 crayons and c2 pencils in each row.How many crayons does she have?", "answer": [96.0], "response": "def count_crayons(c0, c1, c2):\n    #calculate the total number of crayons by multiplying the number of rows by the number of crayons in each row\n    total_crayons = c0 * c1\n    return total_crayons", "mapping": {"c0": 16.0, "c1": 6.0, "c2": 21.0}}
{"question": "Jack received c0 emails in the morning, c1 emails in the afternoon and c2 emails in the evening.How many emails did Jack receive in the morning and evening?", "answer": [11.0], "response": "def Problem(c0, c1, c2):\n    #Jack received c0 emails in the morning and c2 emails in the evening\n    morning_emails = c0\n    evening_emails = c2\n\n    #return the sum of morning and evening emails\n    return morning_emails + evening_emails", "mapping": {"c0": 3.0, "c1": 4.0, "c2": 8.0}}
{"question": "Jesse's room is c0 feet long. If she needs a carpet of size c1 square feetWhat is the width of her room?", "answer": [2.0], "response": "def room_width(c0, c1):\n    #calculate the width by dividing the area by the length\n    width = c1/c0\n    return width", "mapping": {"c0": 7.0, "c1": 14.0}}
{"question": "Debby bought c0 water bottles when they were on sale. If she drank c1 bottles a day for c2 days.How many bottles does she have left?", "answer": [99.0], "response": "def remaining_bottles(c0, c1, c2):\n    #calculate the total number of bottles Debby drank\n    total_drinks = c1 * c2\n\n    #calculate the number of bottles Debby has left\n    remaining = c0 - total_drinks\n\n    return remaining", "mapping": {"c0": 264.0, "c1": 15.0, "c2": 11.0}}
{"question": "c0 campers went rowing in the morning c1 campers went rowing in the afternoon and c2 campers went rowing in the evening.How many more campers went rowing in the afternoon than in the evening?", "answer": [24.0], "response": "def rowing_difference(c0, c1, c2):\n    #calculate the number of campers who went rowing in the afternoon\n    afternoon = c1\n\n    #calculate the number of campers who went rowing in the evening\n    evening = c2\n\n    #calculate the difference between the number of campers who went rowing in the afternoon and evening\n    difference = afternoon - evening\n\n    return difference", "mapping": {"c0": 33.0, "c1": 34.0, "c2": 10.0}}
{"question": "Bryan took a look at his books and magazines. If he has c0 books and c1 magazines in each of his c2 bookshelvesHow many books and magazines does he have in total?", "answer": [2436.0], "response": "def total_books_and_magazines(c0, c1, c2):\n    #calculate the total number of books by multiplying the number of books in each shelf by the number of shelves\n    total_books = c0 * c2\n\n    #calculate the total number of magazines by multiplying the number of magazines in each shelf by the number of shelves\n    total_magazines = c1 * c2\n\n    #add the total number of books and magazines to get the total number of items\n    total_items = total_books + total_magazines\n\n    return total_items", "mapping": {"c0": 23.0, "c1": 61.0, "c2": 29.0}}
{"question": "Faye was placing her pencils and crayons into c0 rows with c1 pencils and c2 crayons in each row.How many crayons does she have?", "answer": [210.0], "response": "def count_crayons(c0, c1, c2):\n    #calculate the total number of pencils\n    total_pencils = c0 * c1\n\n    #calculate the total number of crayons\n    total_crayons = c0 * c2\n\n    #calculate the number of crayons by subtracting the total number of pencils from the total number of items\n    crayons = total_crayons - total_pencils\n\n    return crayons", "mapping": {"c0": 7.0, "c1": 36.0, "c2": 30.0}}
{"question": "Baker made c0 cakes and c1 pastries. If he sold c2 cakes and c3 pastriesHow many pastries would baker still have?", "answer": [45.0], "response": "def remaining_pastries(c0, c1, c2, c3):\n    #calculate the total number of pastries made\n    total_pastries = c1 + c3\n\n    #calculate the total number of pastries sold\n    sold_pastries = c3\n\n    #calculate the remaining pastries\n    remaining_pastries = total_pastries - sold_pastries\n\n    return remaining_pastries", "mapping": {"c0": 7.0, "c1": 148.0, "c2": 15.0, "c3": 103.0}}
{"question": "Robin cut off c0 inches of his hair. If his hair was c1 inches long initiallyHow long is his hair now?", "answer": [1.0], "response": "def HairLength(c0, c1):\n    #Robin's hair was initially c1 inches long\n    initial_length = c1\n\n    #Robin cut off c0 inches of his hair\n    cut_length = c0\n\n    #The length of Robin's hair now can be calculated by subtracting the cut length from the initial length\n    current_length = initial_length - cut_length\n\n    return current_length", "mapping": {"c0": 13.0, "c1": 14.0}}
{"question": "They decided to hold the party in their backyard. They have c0 sets of tables, each having the same number of chairs. If there are a total of c1 chairs in the backyardHow many chairs are there for each table?", "answer": [6.0], "response": "def chairs_per_table(c0, c1):\n    #calculate the total number of chairs\n    total_chairs = c1\n\n    #calculate the number of tables\n    num_tables = c0\n\n    #calculate the number of chairs per table by dividing the total number of chairs by the number of tables\n    chairs_per_table = total_chairs / num_tables\n\n    return chairs_per_table", "mapping": {"c0": 2.0, "c1": 12.0}}
{"question": "Debby bought c0 water bottles and c1 soda bottles when they were on sale. If she drank c2 water bottles and c3 soda bottles a dayHow many days would the water bottles last?", "answer": [22.0], "response": "def water_bottle_days(c0, c1, c2, c3):\n    #calculate the total number of water bottles Debby has\n    total_water_bottles = c0\n\n    #calculate the total number of soda bottles Debby has\n    total_soda_bottles = c1\n\n    #calculate the number of water bottles Debby drinks per day\n    water_bottles_per_day = c2\n\n    #calculate the number of soda bottles Debby drinks per day\n    soda_bottles_per_day = c3\n\n    #calculate the number of days the water bottles will last\n    days_of_water = total_water_bottles // water_bottles_per_day\n\n    return days_of_water", "mapping": {"c0": 88.0, "c1": 13.0, "c2": 4.0, "c3": 87.0}}
{"question": "Last week Fred had c0 dollars and Jason had c1 dollars. Jason washed cars over the weekend and now has c2 dollars.How much money did Jason make washing cars?", "answer": [14.0], "response": "def car_washing(c0, c1, c2):\n    #Jason had c1 dollars before washing cars\n    #After washing cars, he has c2 dollars\n    #Therefore, he made c2 - c1 dollars\n    money_made = c2 - c1\n    return money_made", "mapping": {"c0": 60.0, "c1": 19.0, "c2": 33.0}}
{"question": "Paul sold some books in a garage sale leaving him with c0 books. If he had c1 books initiallyHow many books did he sell?", "answer": [109.0], "response": "def books_sold(c0, c1):\n    # Paul had c1 books initially\n    initial_books = c1\n\n    # After selling some books, he was left with c0 books\n    remaining_books = c0\n\n    # The number of books he sold can be calculated by subtracting the remaining books from the initial books\n    sold_books = initial_books - remaining_books\n\n    return sold_books", "mapping": {"c0": 27.0, "c1": 136.0}}
{"question": "Next on his checklist is wax to stick the feathers together. If the feathers require c0 g of wax and right now he has c1 gHow many more grams of wax does he need?", "answer": [146.0], "response": "def wax_needed(c0, c1):\n    #calculate the difference between the required amount of wax and the current amount\n    wax_needed = c0 - c1\n\n    return wax_needed", "mapping": {"c0": 166.0, "c1": 20.0}}
{"question": "The bananas in Philip's collection are organized into c0 groups. If there are a total of c1 bananas in Philip's banana collectionHow big is each group?", "answer": [2.0], "response": "def banana_group_size(c0, c1):\n    # calculate the size of each group by dividing the total number of bananas by the number of groups\n    group_size = c1 / c0\n    return group_size", "mapping": {"c0": 196.0, "c1": 392.0}}
{"question": "The grasshopper and the frog had a jumping contest. The grasshopper jumped c0 inches and the frog jumped c1 inches.How much farther did the frog jump than the grasshopper?", "answer": [3.0], "response": "def jumping_contest(c0, c1):\n    #calculate the difference between the distances jumped by the frog and the grasshopper\n    difference = c1 - c0\n    return difference", "mapping": {"c0": 9.0, "c1": 12.0}}
{"question": "In Haley's class c0 boys love to play marbles and c1 boys love to play cards. If Haley has c2 marblesHow many will each of the boys receive?", "answer": [2.0], "response": "def marbles_per_boy(c0, c1, c2):\n    #total number of boys in the class\n    total_boys = c0 + c1\n\n    #number of marbles each boy will receive\n    marbles_per_boy = c2 / total_boys\n\n    return marbles_per_boy", "mapping": {"c0": 13.0, "c1": 50.0, "c2": 26.0}}
{"question": "Steven has c0 peaches. Jake has c1 fewer peaches than Steven who has c2 more peaches than Jill.How many peaches does Jill have?", "answer": [10.0], "response": "def JillPeaches(c0, c1, c2):\n    #Jill has c2 fewer peaches than Steven\n    jill_peaches = c2 - c1\n\n    return jill_peaches", "mapping": {"c0": 18.0, "c1": 12.0, "c2": 8.0}}
{"question": "In Haley's class c0 are boys who love to play marbles. If Haley gives c1 marbles to each boyHow many marbles did she have?", "answer": [99.0], "response": "def marbles_total(c0, c1):\n    # Haley has c0 boys in her class\n    boys = c0\n\n    # Haley gives c1 marbles to each boy\n    marbles_per_boy = c1\n\n    # The total number of marbles Haley had can be calculated by multiplying the number of boys by the number of marbles she gave to each boy\n    total_marbles = boys * marbles_per_boy\n\n    return total_marbles", "mapping": {"c0": 11.0, "c1": 9.0}}
{"question": "Ed had c0 more marbles than Doug. Ed lost c1 of his marbles at the playground. If Ed had c2 marblesHow many more marbles did Ed have than Doug then?", "answer": [9.0], "response": "def marbles_difference(c0, c1, c2):\n    # Ed had c0 more marbles than Doug\n    doug_marbles = c2 - c0\n\n    # Ed lost c1 of his marbles at the playground\n    ed_marbles = c2 - c1\n\n    # How many more marbles did Ed have than Doug then?\n    difference = ed_marbles - doug_marbles\n\n    return difference", "mapping": {"c0": 30.0, "c1": 21.0, "c2": 91.0}}
{"question": "A farmer had c0 green tomatoes and c1 red tomatoes in his garden. If he picked c2 tomatoesHow many tomatoes are left?", "answer": [39.0], "response": "def tomatoes_left(c0, c1, c2):\n    #total number of tomatoes before picking\n    total_tomatoes = c0 + c1\n\n    #number of tomatoes picked\n    picked_tomatoes = c2\n\n    #number of tomatoes left after picking\n    tomatoes_left = total_tomatoes - picked_tomatoes\n\n    return tomatoes_left", "mapping": {"c0": 105.0, "c1": 71.0, "c2": 137.0}}
{"question": "Lewis earns $ c0 every week during the c1 weeks of harvest. If he has to pay $ c2 taxHow much money will have at the end of the harvest season?", "answer": [3834.0], "response": "def harvest_profit(c0, c1, c2):\n    #calculate total earnings before tax\n    earnings = c0 * c1\n    #subtract tax from earnings\n    profit = earnings - c2\n    return profit", "mapping": {"c0": 21.0, "c1": 216.0, "c2": 702.0}}
{"question": "Nell collects baseball cards. She had c0 cards while Jeff had c1 cards. She gave some of her cards to Jeff and now has c2 cards left.How many cards does Jeff have now?", "answer": [265.0], "response": "def JeffCards(c0, c1, c2):\n    #Nell had c0 cards and gave some to Jeff, so she now has c2 cards left\n    nell_cards = c2\n\n    #Jeff had c1 cards and received some from Nell\n    jeff_cards = c1 + (c0 - c2)\n\n    return jeff_cards", "mapping": {"c0": 566.0, "c1": 234.0, "c2": 535.0}}
{"question": "Rebecca wants to split a collection of marbles into groups of c0. Rebecca has c1 eggs and c2 marbles.How many groups will be created?", "answer": [5.0], "response": "def MarbleGroups(c0, c1, c2):\n    #calculate the maximum number of groups that can be created based on the number of eggs and marbles\n    max_groups = min(c1, c2 // c0)\n\n    return max_groups", "mapping": {"c0": 4.0, "c1": 10.0, "c2": 20.0}}
{"question": "Matthew had c0 crackers. He has c1 crackers left after he gave equal numbers of crackers to his c2 friends.How many crackers did Matthew give to his friends?", "answer": [8.0], "response": "def crackers_given(c0, c1, c2):\n    # Matthew had c0 crackers\n    crackers_before = c0\n\n    # Matthew has c1 crackers left after giving crackers to his c2 friends\n    crackers_after = c1\n\n    # Matthew gave an equal number of crackers to his c2 friends\n    crackers_given = (crackers_before - crackers_after) / c2\n\n    return crackers_given", "mapping": {"c0": 31.0, "c1": 23.0, "c2": 5.0}}
{"question": "An industrial machine can make c0 shirts a minute. It worked for c1 minutes yesterday and for c2 minutes today.How many shirts did machine make today?", "answer": [72.0], "response": "def shirts_made(c0, c1, c2):\n    #calculate the total time the machine worked\n    total_time = c1 + c2\n\n    #calculate the total number of shirts made\n    total_shirts = c0 * total_time\n\n    #calculate the number of shirts made today by subtracting yesterday's shirts from the total shirts made\n    shirts_today = total_shirts - (c0 * c1)\n\n    return shirts_today", "mapping": {"c0": 6.0, "c1": 5.0, "c2": 12.0}}
{"question": "Marco and his dad went strawberry picking. Marco's strawberries weighed c0 pounds. If together their strawberries weighed c1 pounds.How much more did his dad's strawberries weigh than his?", "answer": [6.0], "response": "def strawberry_weight(c0, c1):\n    # Marco's strawberries weighed c0 pounds\n    marco_weight = c0\n\n    # Together their strawberries weighed c1 pounds\n    total_weight = c1\n\n    # Dad's strawberries weigh can be calculated by subtracting Marco's weight from the total weight\n    dad_weight = total_weight - marco_weight\n\n    # The difference in weight can be calculated by subtracting Marco's weight from Dad's weight\n    difference = dad_weight - marco_weight\n\n    return difference", "mapping": {"c0": 10.0, "c1": 26.0}}
{"question": "Rachel picked c0 apples from her tree. If the tree had c1 apples initially.How many apples are still there on the tree?", "answer": [3.0], "response": "def remaining_apples(c0, c1):\n    #initially there were c1 apples on the tree\n    initial_apples = c1\n\n    #Rachel picked c0 apples from the tree\n    picked_apples = c0\n\n    #the remaining apples can be calculated by subtracting the picked apples from the initial apples\n    remaining = initial_apples - picked_apples\n\n    return remaining", "mapping": {"c0": 4.0, "c1": 7.0}}
{"question": "After making some pies, chef had c0 apples left. Initially he had c1 applesHow many apples did he use?", "answer": [41.0], "response": "def apples_used(c0, c1):\n    #initially chef had c1 apples\n    initial_apples = c1\n\n    #after making pies, chef had c0 apples left\n    remaining_apples = c0\n\n    #the number of apples used can be calculated by subtracting the remaining apples from the initial apples\n    used_apples = initial_apples - remaining_apples\n\n    return used_apples", "mapping": {"c0": 2.0, "c1": 43.0}}
{"question": "Allan brought c0 balloons and c1 balls while Jake brought c2 balloons and c3 balls to the park.How many balloons did Allan and Jake have in the park?", "answer": [8.0], "response": "def balloons_in_park(c0, c1, c2, c3):\n    #calculate the total number of balloons by adding the number of balloons brought by Allan and Jake\n    total_balloons = c0 + c2\n\n    #return the total number of balloons\n    return total_balloons", "mapping": {"c0": 3.0, "c1": 20.0, "c2": 5.0, "c3": 59.0}}
{"question": "There were c0 dollars in Olivia's wallet. She collected c1 more dollars from an atm. After she visited a supermarket there were c2 dollars left.How much more money did she spend at the supermarket than she collected at the atm?", "answer": [39.0], "response": "def money_spent(c0, c1, c2):\n    #calculate the total amount of money Olivia had after collecting from the atm\n    total_money = c0 + c1\n\n    #calculate the amount of money Olivia spent at the supermarket\n    money_spent = total_money - c2\n\n    #calculate the difference between the money spent at the supermarket and the money collected from the atm\n    difference = money_spent - c1\n\n    return difference", "mapping": {"c0": 53.0, "c1": 91.0, "c2": 14.0}}
{"question": "Faye was placing some pencils equally into c0 rows. If she had c1 pencilsHow many pencils did she place in each row?", "answer": [3.0], "response": "def pencils_per_row(c0, c1):\n    #divide the total number of pencils by the number of rows to get the number of pencils per row\n    pencils_per_row = c1 / c0\n    return pencils_per_row", "mapping": {"c0": 2.0, "c1": 6.0}}
{"question": "Julia played tag with c0 kids on monday. She played tag with some more kids on tuesday. If she played with a total of c1 kidsHow many kids did she play with on tuesday?", "answer": [10.0], "response": "def tag_kids(c0, c1):\n    # Julia played with c0 kids on Monday\n    # She played with some more kids on Tuesday\n    # The total number of kids she played with is c1\n    # We need to find out how many kids she played with on Tuesday\n\n    # We can do this by subtracting the number of kids she played with on Monday from the total number of kids she played with\n    kids_on_tuesday = c1 - c0\n\n    return kids_on_tuesday", "mapping": {"c0": 5.0, "c1": 15.0}}
{"question": "Danny collects bottle caps. He threw away c0 of the old ones at the park while he found c1 bottle caps new ones. Now he has c2 bottle caps in his collection.How many more bottle caps did danny find at the park than those he threw away?", "answer": [44.0], "response": "def bottle_caps(c0, c1, c2):\n    # Danny threw away c0 bottle caps and found c1 new ones\n    # So the total number of bottle caps he has now is c0 - c1 + c2\n    # We need to find how many more bottle caps he found at the park than those he threw away\n    # This can be calculated by subtracting c0 from c1 and then adding the result to c2\n    found = c1 - c0 + c2\n    return found", "mapping": {"c0": 6.0, "c1": 50.0, "c2": 60.0}}
{"question": "Paco had c0 cookies. He gave c1 cookies to his friend and ate c2 cookies.How many cookies did Paco have left?", "answer": [12.0], "response": "def cookies_left(c0, c1, c2):\n    #Paco had c0 cookies\n    cookies_before = c0\n\n    #He gave c1 cookies to his friend\n    cookies_given = c1\n\n    #He also ate c2 cookies\n    cookies_eaten = c2\n\n    #The number of cookies he has left can be calculated by subtracting the cookies given and eaten from the original number of cookies\n    cookies_left = cookies_before - cookies_given - cookies_eaten\n\n    return cookies_left", "mapping": {"c0": 36.0, "c1": 14.0, "c2": 10.0}}
{"question": "They decided to hold the party in their backyard. If they have c0 sets of tables and each set has c1 chairsHow many more chairs than tables do they have?", "answer": [45.0], "response": "def chairs_vs_tables(c0, c1):\n    #calculate the total number of chairs\n    total_chairs = c0 * c1\n\n    #calculate the total number of tables\n    total_tables = c0\n\n    #calculate the difference between the total number of chairs and tables\n    difference = total_chairs - total_tables\n\n    return difference", "mapping": {"c0": 5.0, "c1": 10.0}}
{"question": "After resting they decided to go for a swim. The depth of the water is c0 times Ron's height. Dean is c1 feet taller than Ron. If Ron stands at c2 feetHow deep was the water?", "answer": [208.0], "response": "def water_depth(c0, c1, c2):\n    # Ron's height\n    ron_height = c2\n\n    # Dean's height\n    dean_height = ron_height + c1\n\n    # Depth of the water\n    water_depth = c0 * ron_height\n\n    return water_depth", "mapping": {"c0": 16.0, "c1": 9.0, "c2": 13.0}}
{"question": "A farmer had c0 tomatoes and c1 potatoes in his garden. If he picked c2 tomatoesHow many tomatoes and potatoes does he have left?", "answer": [136.0], "response": "def remaining_veggies(c0, c1, c2):\n    #subtract the number of picked tomatoes from the original number of tomatoes\n    remaining_tomatoes = c0 - c2\n\n    #the number of potatoes remains the same\n    remaining_potatoes = c1\n\n    return remaining_tomatoes, remaining_potatoes", "mapping": {"c0": 177.0, "c1": 12.0, "c2": 53.0}}
{"question": "c0 red peaches, c1 yellow peaches and c2 green peaches are in the basket.How many more green peaches than red peaches are in the basket?", "answer": [1.0], "response": "def peach_difference(c0, c1, c2):\n    #calculate the difference between the number of green and red peaches\n    green_red_diff = c2 - c0\n    \n    return green_red_diff", "mapping": {"c0": 7.0, "c1": 71.0, "c2": 8.0}}
{"question": "c0 campers went rowing in the morning. c1 campers went rowing in the afternoon.How many more campers went rowing in the afternoon than in the morning?", "answer": [9.0], "response": "def rowing_difference(c0, c1):\n    #calculate the difference between the number of campers rowing in the afternoon and morning\n    difference = c1 - c0\n    return difference", "mapping": {"c0": 52.0, "c1": 61.0}}
{"question": "There were c0 roses and c1 orchids in the vase. Jessica cut some more roses and orchids from her flower garden. There are now c2 orchids and c3 roses in the vase.How many roses did she cut?", "answer": [1.0], "response": "def cut_roses(c0, c1, c2, c3):\n    #calculate the number of roses and orchids before cutting\n    roses_before = c0\n    orchids_before = c1\n\n    #calculate the number of roses and orchids after cutting\n    roses_after = c3\n    orchids_after = c2\n\n    #calculate the number of roses cut by subtracting the number of roses before from the number of roses after\n    roses_cut = roses_before - roses_after\n\n    return roses_cut", "mapping": {"c0": 13.0, "c1": 84.0, "c2": 91.0, "c3": 14.0}}
{"question": "Debby bought some water bottles when they were on sale. She drank c0 bottles a day. If the bottles lasted for c1 daysHow many bottles had she bought?", "answer": [8066.0], "response": "def calculate_bottles(c0, c1):\n    # Debby drank c0 bottles a day\n    bottles_per_day = c0\n\n    # The bottles lasted for c1 days\n    days_lasted = c1\n\n    # The total number of bottles Debby bought can be calculated by multiplying the number of bottles she drank per day by the number of days the bottles lasted\n    total_bottles = bottles_per_day * days_lasted\n\n    return total_bottles", "mapping": {"c0": 109.0, "c1": 74.0}}
{"question": "Edward spent $ c0 to buy c1 books each book costing him the same amount of money. Now he has $ 12.How much did each book cost?", "answer": [3.0], "response": "def book_cost(c0, c1):\n    # Edward spent c0 dollars to buy c1 books\n    total_spent = c0\n    num_books = c1\n\n    # Now he has $12\n    remaining_money = 12\n\n    # The cost of each book can be calculated by dividing the total amount spent by the number of books bought\n    cost_per_book = (total_spent - remaining_money) / num_books\n\n    return cost_per_book", "mapping": {"c0": 6.0, "c1": 2.0}}
{"question": "Robin has c0 packages of gum and c1 packages of candy. There are c2 pieces in each package.How many pieces does Robin have?", "answer": [7.0], "response": "def total_pieces(c0, c1, c2):\n    #calculate the total number of pieces of gum and candy\n    total_gum = c0 * c2\n    total_candy = c1 * c2\n\n    #add the total number of gum and candy pieces together\n    total_pieces = total_gum + total_candy\n\n    return total_pieces", "mapping": {"c0": 28.0, "c1": 14.0, "c2": 6.0}}
{"question": "There are c0 different movies and c1 different books in the ' crazy silly school ' series. If you read c2 of the books and watched c3 of the moviesHow many more movies than books are there in the ' crazy silly school ' series?", "answer": [6.0], "response": "def difference(c0, c1, c2, c3):\n    #calculate the number of movies and books left after reading/watching\n    movies_left = c0 - c3\n    books_left = c1 - c2\n\n    #calculate the difference between the number of movies and books left\n    difference = movies_left - books_left\n\n    return difference", "mapping": {"c0": 17.0, "c1": 11.0, "c2": 13.0, "c3": 63.0}}
{"question": "Jack received c0 emails in the morning, c1 emails in the afternoon and c2 emails in the evening.How many emails did Jack receive in the morning and afternoon?", "answer": [13.0], "response": "def Problem(c0, c1, c2):\n    #Jack received c0 emails in the morning and c1 emails in the afternoon\n    morning_and_afternoon = c0 + c1\n\n    return morning_and_afternoon", "mapping": {"c0": 5.0, "c1": 8.0, "c2": 72.0}}
{"question": "Randy uses c0 blocks to build a tower. If he had c1 blocksHow many blocks are left?", "answer": [23.0], "response": "def blocks_left(c0, c1):\n    # Randy uses c0 blocks to build a tower\n    used_blocks = c0\n\n    # If he had c1 blocks\n    total_blocks = c1\n\n    # The number of blocks left can be calculated by subtracting the used blocks from the total blocks\n    blocks_left = total_blocks - used_blocks\n\n    return blocks_left", "mapping": {"c0": 36.0, "c1": 59.0}}
{"question": "Marco and his dad went strawberry picking. Together their strawberries weighed c0 pounds. His dad's strawberries weighed c1 pounds.How much did marco's strawberries weigh?", "answer": [3.0], "response": "def marco_weight(c0, c1):\n    #total weight of strawberries\n    total_weight = c0 + c1\n\n    #Marco's strawberries weight can be calculated by subtracting his dad's strawberries weight from the total weight\n    marco_weight = total_weight - c1\n\n    return marco_weight", "mapping": {"c0": 20.0, "c1": 17.0}}
{"question": "Haley grew c0 trees in her backyard. After a typhoon c1 died. Then she grew c2 more trees.How many trees does she have left?", "answer": [10.0], "response": "def trees_left(c0, c1, c2):\n    #calculate the number of trees left after the typhoon\n    trees_left = c0 - c1\n\n    #add the new trees Haley grew\n    trees_left += c2\n\n    return trees_left", "mapping": {"c0": 9.0, "c1": 4.0, "c2": 5.0}}
{"question": "Stray cats loved eating goldfish in the pond leaving c0 goldfish. Paige had raised c1 goldfish in the pond initially.How many goldfish disappeared?", "answer": [2.0], "response": "def goldfish_disappeared(c0, c1):\n    # Paige initially had c1 goldfish in the pond\n    initial_goldfish = c1\n\n    # After the stray cats ate some goldfish, there were c0 goldfish left\n    remaining_goldfish = c0\n\n    # The number of goldfish that disappeared can be calculated by subtracting the remaining goldfish from the initial goldfish\n    disappeared = initial_goldfish - remaining_goldfish\n\n    return disappeared", "mapping": {"c0": 6.0, "c1": 8.0}}
{"question": "Danny collects bottle caps and wrappers. He found c0 bottle caps and c1 wrappers at the park. Now he has c2 wrappers and c3 bottle caps in his collection.How many more bottle caps than wrappers does danny have now?", "answer": [1.0], "response": "def bottle_caps_vs_wrappers(c0, c1, c2, c3):\n    # Danny originally had c0 bottle caps and c1 wrappers\n    # Now he has c2 wrappers and c3 bottle caps\n    # We need to calculate the difference between the number of bottle caps and wrappers he has now\n    bottle_caps = c3 - c0\n    wrappers = c2 - c1\n    difference = bottle_caps - wrappers\n    return difference", "mapping": {"c0": 58.0, "c1": 25.0, "c2": 11.0, "c3": 12.0}}
{"question": "Mary is baking a cake. The recipe calls for c0 cups of flour and c1 cups of sugar. She already put in c2 cups of sugar.How many more cups of flour than cups of sugar does she need to add now?", "answer": [7.0], "response": "def cakeIngredients(c0, c1, c2):\n    #calculate how much more sugar is needed\n    sugar_needed = c1 - c2\n\n    #calculate how much more flour is needed\n    flour_needed = c0 - c1\n\n    #calculate the difference between the two\n    difference = flour_needed - sugar_needed\n\n    return difference", "mapping": {"c0": 9.0, "c1": 6.0, "c2": 4.0}}
{"question": "Jesse's room is c0 feet long and c1 feet wide. If each tile is of size c2 square feetHow many tiles does she need to cover the whole floor?", "answer": [6.0], "response": "def tiles_needed(c0, c1, c2):\n    #calculate the area of the room\n    room_area = c0 * c1\n\n    #calculate the number of tiles needed by dividing the room area by the size of each tile\n    tiles_needed = room_area / c2\n\n    #round up to the nearest whole number of tiles\n    tiles_needed = math.ceil(tiles_needed)\n\n    return tiles_needed", "mapping": {"c0": 2.0, "c1": 12.0, "c2": 4.0}}
{"question": "An industrial machine can make c0 shirts a minute. It worked for c1 minutes yesterday and for c2 shirts today.How many shirts did machine make altogether?", "answer": [156.0], "response": "def total_shirts(c0, c1, c2):\n    #calculate the total number of shirts made yesterday\n    shirts_yesterday = c0 * c1\n\n    #add the number of shirts made today\n    total_shirts = shirts_yesterday + c2\n\n    return total_shirts", "mapping": {"c0": 6.0, "c1": 12.0, "c2": 14.0}}
{"question": "Paco had c0 sweet cookies and c1 salty cookies. He ate c2 sweet cookies and c3 salty cookies.How many salty cookies did Paco have left?", "answer": [3.0], "response": "def remaining_cookies(c0, c1, c2, c3):\n    #calculate the number of sweet and salty cookies left after Paco ate some\n    sweet_left = c0 - c2\n    salty_left = c1 - c3\n\n    #return the number of salty cookies left\n    return salty_left", "mapping": {"c0": 9.0, "c1": 6.0, "c2": 36.0, "c3": 3.0}}
{"question": "Robin cut off c0 inches of his hair. If his hair is now c1 inches longHow long was his hair before he cut?", "answer": [30.0], "response": "def hair_length_before_cut(c0, c1):\n    # Robin's hair was c0 inches long before he cut it\n    hair_before_cut = c1 + c0\n\n    return hair_before_cut", "mapping": {"c0": 20.0, "c1": 10.0}}
{"question": "The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped c0 inches. The frog jumped c1 inches farther than the grasshopper and the mouse jumped c2 inches farther than the frog.How far did the frog jump?", "answer": [53.0], "response": "def jumping_contest(c0, c1, c2):\n    #The frog jumped c1 inches farther than the grasshopper\n    frog_jump = c0 + c1\n\n    #The mouse jumped c2 inches farther than the frog\n    mouse_jump = frog_jump + c2\n\n    return frog_jump", "mapping": {"c0": 36.0, "c1": 17.0, "c2": 15.0}}
{"question": "Robin has c0 packages of gum and c1 packages of candy. There are c2 pieces in each package.How many pieces of gum does Robin have?", "answer": [112.0], "response": "def gum_pieces(c0, c1, c2):\n    #calculate the total number of gum packages\n    gum_packages = c0\n\n    #calculate the total number of candy packages\n    candy_packages = c1\n\n    #calculate the total number of pieces of gum\n    gum_pieces = gum_packages * c2\n\n    return gum_pieces", "mapping": {"c0": 28.0, "c1": 13.0, "c2": 4.0}}
{"question": "Baker made c0 cakes and c1 pastries. If he sold c2 cakes and c3 pastriesHow many more cakes than pastries did baker sell?", "answer": [11.0], "response": "def cake_vs_pastries(c0, c1, c2, c3):\n    #calculate the number of cakes and pastries sold\n    cakes_sold = c2\n    pastries_sold = c3\n\n    #calculate the number of cakes and pastries made but not sold\n    cakes_not_sold = c0 - c2\n    pastries_not_sold = c1 - c3\n\n    #calculate the difference between cakes sold and pastries sold\n    difference = cakes_sold - pastries_sold\n\n    return difference", "mapping": {"c0": 157.0, "c1": 169.0, "c2": 158.0, "c3": 147.0}}
{"question": "In a school there are c0 girls and the rest are boys. If there are c1 more girls than boysHow many pupils are there in that school?", "answer": [1455.0], "response": "def school_pupils(c0, c1):\n    #total number of pupils in the school\n    total_pupils = c0 + c1\n\n    #number of boys in the school\n    boys = total_pupils - c0\n\n    return total_pupils", "mapping": {"c0": 868.0, "c1": 281.0}}
{"question": "David did c0 push-ups in gym class today. David did c1 more push-ups than Zachary.How many push-ups did Zachary and David do altogether?", "answer": [53.0], "response": "def push_ups_total(c0, c1):\n    # David did c0 push-ups\n    david_push_ups = c0\n\n    # David did c1 more push-ups than Zachary\n    zachary_push_ups = c1 - c0\n\n    # Total push-ups done by both David and Zachary\n    total_push_ups = david_push_ups + zachary_push_ups\n\n    return total_push_ups", "mapping": {"c0": 51.0, "c1": 49.0}}
{"question": "Winter is almost here and most animals are migrating to warmer countries. There were c0 bird families living near the mountain. If c1 bird families flew away for winterHow many more bird families stayed behind than those that flew away for the winter?", "answer": [73.0], "response": "def bird_families(c0, c1):\n    #calculate the number of bird families that stayed behind\n    stayed_behind = c0 - c1\n\n    #calculate the number of bird families that flew away for winter\n    flew_away = c1\n\n    #calculate the difference between the two\n    difference = stayed_behind - flew_away\n\n    return difference", "mapping": {"c0": 87.0, "c1": 7.0}}
{"question": "A school has c0 pupils. There are c1 girls and the rest are boys.How many boys are there in that school?", "answer": [253.0], "response": "def boys_in_school(c0, c1):\n    #c1 represents the number of girls in the school\n    girls = c1\n\n    #the rest of the pupils are boys\n    boys = c0 - girls\n\n    return boys", "mapping": {"c0": 485.0, "c1": 232.0}}
{"question": "Baker made c0 pastries and c1 cakes. If he sold c2 cakes and c3 pastriesHow many more pastries than cakes did baker make?", "answer": [123.0], "response": "def pastry_vs_cake(c0, c1, c2, c3):\n    #calculate the total number of pastries and cakes made\n    total_pastries = c0 + c3\n    total_cakes = c1 + c2\n\n    #calculate the difference between the number of pastries and cakes\n    difference = total_pastries - total_cakes\n\n    return difference", "mapping": {"c0": 134.0, "c1": 11.0, "c2": 140.0, "c3": 92.0}}
{"question": "Nell collects baseball cards. She had c0 cards while Jeff had c1 cards. She gave some of her cards to jeff and now has c2 cards left.How many cards did Nell give to Jeff?", "answer": [276.0], "response": "def card_exchange(c0, c1, c2):\n    # Nell had c0 cards and Jeff had c1 cards\n    nell_cards = c0\n    jeff_cards = c1\n\n    # After exchanging cards, Nell has c2 cards left\n    nell_cards_left = c2\n\n    # Nell gave some cards to Jeff, so the number of cards she gave can be calculated by subtracting the number of cards she has left from the number she had originally\n    cards_given = nell_cards - nell_cards_left\n\n    return cards_given", "mapping": {"c0": 528.0, "c1": 11.0, "c2": 252.0}}
{"question": "The school is planning a field trip. The school has c0 classrooms. There are c1 students in the school and c2 seats on each school bus. If c3 students do n't want to go for the tripHow many buses are needed to take the trip?", "answer": [10.0], "response": "def field_trip(c0, c1, c2, c3):\n    #calculate the total number of students going on the trip\n    total_students = c1 - c3\n\n    #calculate the number of buses needed, rounding up to the nearest integer\n    buses_needed = -(-total_students // c2)\n\n    return buses_needed", "mapping": {"c0": 66.0, "c1": 102.0, "c2": 8.0, "c3": 22.0}}
{"question": "c0 people can ride the Ferris wheel in paradise park at the same time. If each seat on the Ferris wheel can hold c1 peopleHow many seats does the Ferris wheel have?", "answer": [2.0], "response": "def FerrisWheelSeats(c0, c1):\n    #calculate the number of seats by dividing the maximum number of people that can ride at once by the number of people each seat can hold\n    seats = c0 // c1\n\n    return seats", "mapping": {"c0": 4.0, "c1": 2.0}}
{"question": "Dave had c0 apps and c1 files on his phone. After deleting some apps and files he had c2 files and c3 apps left.How many more apps than files does he have left on the phone?", "answer": [7.0], "response": "def app_file_difference(c0, c1, c2, c3):\n    #calculate the number of apps left after deleting some\n    apps_left = c0 - c3\n\n    #calculate the number of files left after deleting some\n    files_left = c1 - c2\n\n    #calculate the difference between the number of apps and files left\n    difference = apps_left - files_left\n\n    return difference", "mapping": {"c0": 24.0, "c1": 9.0, "c2": 5.0, "c3": 12.0}}
{"question": "c0 campers went rowing in the morning c1 campers went rowing in the afternoon and c2 campers went rowing in the evening.How many more campers went rowing in the morning than in the afternoon?", "answer": [5.0], "response": "def rowing_difference(c0, c1, c2):\n    #calculate the number of campers who went rowing in the morning\n    morning_rowers = c0\n\n    #calculate the number of campers who went rowing in the afternoon\n    afternoon_rowers = c1\n\n    #calculate the difference between the number of morning and afternoon rowers\n    difference = morning_rowers - afternoon_rowers\n\n    return difference", "mapping": {"c0": 44.0, "c1": 39.0, "c2": 31.0}}
{"question": "Frank was reading through his favorite book. The book had c0 chapters, each with the same number of pages. It has a total of c1 pages. It took Frank c2 days to finish the book.How many pages are in each chapter?", "answer": [198.0], "response": "def pages_per_chapter(c0, c1, c2):\n    #calculate the total number of pages read per day\n    pages_per_day = c1/c2\n\n    #calculate the number of pages per chapter\n    pages_per_chapter = pages_per_day/c0\n\n    return pages_per_chapter", "mapping": {"c0": 3.0, "c1": 594.0, "c2": 607.0}}
{"question": "Jesse has c0 square feet of carpet. If her room is c1 feet long and c2 feet wideHow much more carpet does she need to cover the whole floor?", "answer": [62.0], "response": "def carpet_needed(c0, c1, c2):\n    #calculate the area of the room\n    room_area = c1 * c2\n\n    #calculate the amount of carpet needed by subtracting the room area from the amount of carpet Jesse has\n    carpet_needed = room_area - c0\n\n    return carpet_needed", "mapping": {"c0": 18.0, "c1": 4.0, "c2": 20.0}}
{"question": "There are many different books in the ' crazy silly school ' series. If you have read c0 of the books and are yet to read c1 booksHow many books are there in the ' crazy silly school ' series?", "answer": [21.0], "response": "def total_books(c0, c1):\n    #the total number of books in the series is the sum of the books read and the books yet to be read\n    total = c0 + c1\n    return total", "mapping": {"c0": 13.0, "c1": 8.0}}
{"question": "Nell collects cards. She had c0 baseball cards and c1 Ace cards. She gave some of her cards to Jeff and now has c2 Ace cards and c3 baseball cards left.How many more baseball cards than Ace cards does Nell have?", "answer": [123.0], "response": "def card_difference(c0, c1, c2, c3):\n    # Nell had c0 baseball cards and c1 Ace cards\n    baseball_cards_before = c0\n    ace_cards_before = c1\n\n    # Nell gave some cards to Jeff and now has c2 Ace cards and c3 baseball cards left\n    ace_cards_after = c2\n    baseball_cards_after = c3\n\n    # Calculate the difference between the number of baseball cards and Ace cards Nell has now\n    baseball_cards_difference = baseball_cards_after - baseball_cards_before\n    ace_cards_difference = ace_cards_after - ace_cards_before\n\n    # Return the difference between the number of baseball cards and Ace cards Nell has now\n    return baseball_cards_difference - ace_cards_difference", "mapping": {"c0": 438.0, "c1": 18.0, "c2": 55.0, "c3": 178.0}}
{"question": "Matthew had c0 crackers. If Matthew gave equal numbers of crackers to his c1 friends and still had c2 crackers leftHow many crackers did Matthew give to his friends?", "answer": [7.0], "response": "def crackers_given(c0, c1, c2):\n    # Matthew had c0 crackers\n    crackers_before = c0\n\n    # Matthew gave equal numbers of crackers to his c1 friends\n    crackers_given = (crackers_before - c2) / c1\n\n    return crackers_given", "mapping": {"c0": 24.0, "c1": 3.0, "c2": 17.0}}
{"question": "The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped c0 inches. The grasshopper jumped c1 inches farther than the frog and the mouse jumped c2 inches lesser than the frog.How much farther did the grasshopper jump than the mouse?", "answer": [41.0], "response": "def jumping_contest(c0, c1, c2):\n    #calculate the distance the frog jumped\n    frog_jump = c0 - c1\n\n    #calculate the distance the mouse jumped\n    mouse_jump = frog_jump - c2\n\n    #calculate how much farther the grasshopper jumped than the mouse\n    grasshopper_jump = c0 - mouse_jump\n\n    return grasshopper_jump - c0", "mapping": {"c0": 21.0, "c1": 25.0, "c2": 16.0}}
{"question": "They decided to hold the party in their backyard. They have c0 sets of tables and each set has c1 chairs. If there are c2 people sitting on chairsHow many chairs are left unoccupied?", "answer": [49.0], "response": "def chairs_left(c0, c1, c2):\n    #calculate the total number of chairs available\n    total_chairs = c0 * c1\n\n    #calculate the number of chairs occupied\n    occupied_chairs = c2\n\n    #calculate the number of chairs left unoccupied\n    unoccupied_chairs = total_chairs - occupied_chairs\n\n    return unoccupied_chairs", "mapping": {"c0": 10.0, "c1": 6.0, "c2": 11.0}}
{"question": "After eating a hearty meal they went to see the Buckingham palace. There, Rachel learned that c0 visitors came to the Buckingham palace that day. If there were c1 visitors the previous day and c2 visitors the day before thatHow many visited the Buckingham palace within the past c3 days?", "answer": [1791.0], "response": "def visitors_within_c3_days(c0, c1, c2, c3):\n    #calculate the total number of visitors within the past c3 days by adding the number of visitors from each day\n    total_visitors = c0 + c1 + c2\n\n    #if c3 is greater than or equal to 3, we need to add the number of visitors from the day before that as well\n    if c3 >= 3:\n        total_visitors += c3 - 2\n\n    return total_visitors", "mapping": {"c0": 512.0, "c1": 471.0, "c2": 808.0, "c3": 89.0}}
{"question": "He then went to see the oranges being harvested. He found out that they harvest c0 sacks of ripe oranges and c1 sacks of unripe oranges per day.How many more sacks of ripe oranges than unripe oranges are harvested per day?", "answer": [19.0], "response": "def oranges_harvested(c0, c1):\n    #calculate the difference between the number of ripe and unripe oranges harvested\n    difference = c0 - c1\n    \n    return difference", "mapping": {"c0": 44.0, "c1": 25.0}}
{"question": "White t - shirts can be purchased in packages of c0. If mom buys c1 packages of white t - shirts and c2 trousersHow many white t - shirts will she have?", "answer": [3021.0], "response": "def white_t_shirts(c0, c1):\n    #calculate the total number of white t-shirts by multiplying the number of packages by the number of t-shirts in each package\n    total_t_shirts = c0 * c1\n\n    return total_t_shirts", "mapping": {"c0": 53.0, "c1": 57.0, "c2": 34.0}}
{"question": "Paul had c0 books. After selling some in a garage sale he bought c1 new ones. If he has c2 books nowHow many books did he sell?", "answer": [94.0], "response": "def books_sold(c0, c1, c2):\n    # Paul had c0 books\n    # He sold some books and bought c1 new ones\n    # Now he has c2 books\n    # We need to find out how many books he sold\n\n    # First, let's calculate how many books he had after buying new ones\n    books_after_buying = c0 + c1\n\n    # Then, we can calculate how many books he sold by subtracting the current number of books from the books he had after buying new ones\n    books_sold = books_after_buying - c2\n\n    return books_sold", "mapping": {"c0": 2.0, "c1": 150.0, "c2": 58.0}}
{"question": "c0 storks and c1 birds were sitting on the fence. c2 more birds came to join them.How many more storks than birds are sitting on the fence?", "answer": [1.0], "response": "def storks_vs_birds(c0, c1, c2):\n    #calculate the total number of birds after c2 more birds join\n    total_birds = c1 + c2\n\n    #calculate the total number of storks\n    total_storks = c0\n\n    #calculate the difference between the total number of storks and birds\n    difference = total_storks - total_birds\n\n    return difference", "mapping": {"c0": 6.0, "c1": 2.0, "c2": 3.0}}
{"question": "Bryan took a look at his books and magazines. If he has c0 books and c1 magazines in each of his c2 bookshelvesHow many books does he have in total?", "answer": [621.0], "response": "def total_books(c0, c1, c2):\n    #calculate the total number of books by multiplying the number of books in each shelf by the number of shelves\n    total = c0 * c2\n    return total", "mapping": {"c0": 27.0, "c1": 80.0, "c2": 23.0}}
{"question": "Paul got a box of c0 crayons and c1 erasers for his birthday. At the end of the school year he only had c2 left while not having lost a single erasers.How many more crayons than erasers did he have left?", "answer": [353.0], "response": "def crayons_vs_erasers(c0, c1, c2):\n    #calculate the number of crayons Paul used\n    used_crayons = c0 - c2\n    #calculate the number of erasers Paul used\n    used_erasers = c1\n    #calculate the difference between the number of crayons and erasers Paul had left\n    difference = used_crayons - used_erasers\n    return difference", "mapping": {"c0": 531.0, "c1": 38.0, "c2": 391.0}}
{"question": "Lewis earns a total of $ c0 during the harvest. If he earns $ c1 each weekHow many weeks did the harvest last?", "answer": [76.0], "response": "def harvest_weeks(c0, c1):\n    #calculate the number of weeks by dividing the total earnings by the weekly earnings\n    weeks = c0 // c1\n    return weeks", "mapping": {"c0": 1216.0, "c1": 16.0}}
{"question": "Dave had c0 apps on his phone. He added c1 new apps. After deleting some he had c2 left.How many apps did he delete?", "answer": [17.0], "response": "def app_deletion(c0, c1, c2):\n    # Dave had c0 apps on his phone\n    initial_apps = c0\n\n    # He added c1 new apps\n    new_apps = c1\n\n    # After deleting some apps, he had c2 left\n    remaining_apps = c2\n\n    # The number of apps he deleted can be calculated by subtracting the sum of initial and new apps from the remaining apps\n    deleted_apps = initial_apps + new_apps - remaining_apps\n\n    return deleted_apps", "mapping": {"c0": 10.0, "c1": 11.0, "c2": 4.0}}
{"question": "The ring toss game at the carnival made the same amount of money each day. In total in c0 days they earned c1 dollars.How much did they make per day?", "answer": [33.0], "response": "def Problem(c0, c1):\n    #the carnival made c1 dollars in c0 days\n    #to find out how much they made per day, we divide the total earnings by the number of days\n    earnings_per_day = c1 / c0\n\n    return earnings_per_day", "mapping": {"c0": 5.0, "c1": 165.0}}
{"question": "There were c0 roses and c1 orchids in the vase. Jessica cut some more roses and orchids from her flower garden. There are now c2 roses and c3 orchids in the vase.How many more roses than orchids are there in the vase now?", "answer": [10.0], "response": "def roses_vs_orchids(c0, c1, c2, c3):\n    #calculate the total number of roses and orchids before and after Jessica added more flowers\n    total_before = c0 + c1\n    total_after = c2 + c3\n\n    #calculate the difference between the number of roses and orchids before and after\n    diff_before = c0 - c1\n    diff_after = c2 - c3\n\n    #calculate the difference between the differences to find the change in the number of roses vs orchids\n    change = diff_after - diff_before\n\n    #if the change is positive, there are more roses than orchids. If it's negative, there are more orchids than roses.\n    if change > 0:\n        return change, \"more roses than orchids\"\n    elif change < 0:\n        return abs(change), \"more orchids than roses\"\n    else:\n        return 0, \"equal number of roses and orchids\"", "mapping": {"c0": 5.0, "c1": 3.0, "c2": 12.0, "c3": 2.0}}
{"question": "The Ferris wheel in paradise park has some seats. Each seat can hold c0 people. If c1 people can ride the wheel at the same timeHow many seats does the Ferris wheel have?", "answer": [2.0], "response": "def FerrisWheelSeats(c0, c1):\n    #calculate the number of seats by dividing the number of people that can ride the wheel by the number of people each seat can hold\n    seats = c1 // c0\n\n    return seats", "mapping": {"c0": 9.0, "c1": 18.0}}
{"question": "Dave had some apps on his phone. After deleting c0 of them he had c1 left.How many apps did he have on his phone at the start?", "answer": [23.0], "response": "def starting_apps(c0, c1):\n    # Dave had c1 apps left after deleting c0 of them\n    # We can calculate the number of apps he had before deleting by adding c0 to c1\n    starting_apps = c0 + c1\n\n    return starting_apps", "mapping": {"c0": 18.0, "c1": 5.0}}
{"question": "There are c0 different movies and c1 different books in the ' crazy silly school ' series. If you read c2 of the books and watched c3 of the moviesHow many more books than movies are there in the ' crazy silly school ' series?", "answer": [1.0], "response": "def difference(c0, c1, c2, c3):\n    #calculate the number of books and movies left after reading/watching\n    books_left = c1 - c2\n    movies_left = c0 - c3\n\n    #calculate the difference between the number of books and movies left\n    difference = books_left - movies_left\n\n    return difference", "mapping": {"c0": 14.0, "c1": 15.0, "c2": 11.0, "c3": 40.0}}
{"question": "Randy has c0 blocks. He uses c1 blocks to build a tower and c2 blocks to build a house.How many more blocks did he use to build the house than he did to build the tower?", "answer": [3.0], "response": "def block_difference(c0, c1, c2):\n    #calculate the number of blocks used to build the tower\n    tower_blocks = c1\n\n    #calculate the number of blocks used to build the house\n    house_blocks = c2\n\n    #calculate the difference between the number of blocks used to build the house and the tower\n    difference = house_blocks - tower_blocks\n\n    return difference", "mapping": {"c0": 86.0, "c1": 79.0, "c2": 82.0}}
{"question": "With c0 dollars c1 packs of dvds can be bought.How much does each pack cost?", "answer": [14.0], "response": "def dvd_cost(c0, c1):\n    #calculate the cost per pack by dividing the total cost by the number of packs\n    cost_per_pack = c0/c1\n    return cost_per_pack", "mapping": {"c0": 28.0, "c1": 2.0}}
{"question": "Last week Fred had c0 dollars and Jason had c1 dollars. Jason delivered newspapers and now has c2 dollars. Fred washed cars over the weekend and now has c3 dollars.How much money did Jason earn by delivering newspapers?", "answer": [26.0], "response": "def JasonsEarnings(c0, c1, c2, c3):\n    #Jason had c1 dollars last week and now has c2 dollars\n    #So, he earned c2 - c1 dollars\n    jasons_earnings = c2 - c1\n\n    return jasons_earnings", "mapping": {"c0": 78.0, "c1": 31.0, "c2": 57.0, "c3": 90.0}}
{"question": "Josh had c0 marbles in his collection. He found c1 marbles while he lost c2 marbles.How many more marbles did he lose than those he found?", "answer": [14.0], "response": "def marbles_difference(c0, c1, c2):\n    #calculate the total number of marbles after finding and losing some\n    total_marbles = c0 + c1 - c2\n\n    #calculate the difference between the number of marbles lost and found\n    difference = c2 - c1\n\n    #calculate the final answer by subtracting the number of marbles found from the difference\n    answer = difference - c1\n\n    return answer", "mapping": {"c0": 15.0, "c1": 9.0, "c2": 23.0}}
{"question": "Jack received c0 emails in the morning and some more in the afternoon. If he received a total of c1 emails in the dayHow many emails did Jack receive in the afternoon?", "answer": [1.0], "response": "def afternoon_emails(c0, c1):\n    # Jack received c0 emails in the morning\n    morning_emails = c0\n\n    # Jack received a total of c1 emails in the day\n    total_emails = c1\n\n    # To find out how many emails Jack received in the afternoon, we need to subtract the number of morning emails from the total number of emails\n    afternoon_emails = total_emails - morning_emails\n\n    return afternoon_emails", "mapping": {"c0": 4.0, "c1": 5.0}}
{"question": "Luke gained c0 points in each round of a game. If he played c1 rounds of a trivia gameHow many points did he score in the game?", "answer": [22922.0], "response": "def calculate_points(c0, c1):\n    #calculate the total points by multiplying the points per round by the number of rounds played\n    total_points = c0 * c1\n    return total_points", "mapping": {"c0": 146.0, "c1": 157.0}}
{"question": "There were some roses in the vase. Jessica cut c0 more roses from her flower garden and put them in the vase. There are now c1 roses in the vase.How many roses were there in the vase at the beginning?", "answer": [7.0], "response": "def roses_in_vase(c0, c1):\n    # Jessica cut c0 more roses and put them in the vase\n    added_roses = c0\n\n    # There are now c1 roses in the vase\n    total_roses = c1\n\n    # The number of roses in the vase at the beginning can be calculated by subtracting the added roses from the total roses\n    initial_roses = total_roses - added_roses\n\n    return initial_roses", "mapping": {"c0": 16.0, "c1": 23.0}}
{"question": "The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped c0 inches. The frog jumped c1 inches farther than the grasshopper and the mouse jumped c2 inches lesser than the frog.How far did the frog jump?", "answer": [58.0], "response": "def jumping_contest(c0, c1, c2):\n    # The frog jumped c1 inches farther than the grasshopper\n    frog_jump = c0 + c1\n\n    # The mouse jumped c2 inches lesser than the frog\n    mouse_jump = frog_jump - c2\n\n    return frog_jump", "mapping": {"c0": 19.0, "c1": 39.0, "c2": 94.0}}
{"question": "Adam has c0 more apples than Jackie. Jackie has c1 oranges and c2 apples.How many apples does Adam have?", "answer": [16.0], "response": "def AdamApples(c0, c1, c2):\n    #Jackie has c1 oranges and c2 apples\n    JackieApples = c2\n\n    #Adam has c0 more apples than Jackie\n    AdamApples = JackieApples + c0\n\n    return AdamApples", "mapping": {"c0": 5.0, "c1": 89.0, "c2": 11.0}}
{"question": "After eating a hearty meal they went to see the Buckingham palace. There, Rachel learned that c0 visitors came to the Buckingham palace that day. If c1 people visited the Buckingham palace within the past c2 daysHow many visitors visited the Buckingham palace on the previous day?", "answer": [274.0], "response": "def previous_day_visitors(c0, c1, c2):\n    #calculate the average number of visitors per day\n    avg_visitors_per_day = c1 / c2\n\n    #calculate the number of visitors on the previous day\n    previous_day_visitors = (2 * c0) - (c2 * avg_visitors_per_day)\n\n    return previous_day_visitors", "mapping": {"c0": 132.0, "c1": 406.0, "c2": 327.0}}
{"question": "c0 campers went rowing and c1 campers went hiking in the morning. c2 campers went rowing in the afternoon.How many more campers went rowing in the morning than in the afternoon?", "answer": [3.0], "response": "def rowing_difference(c0, c1, c2):\n    #calculate the number of campers who went rowing in the morning\n    morning_rowers = c0 - c1\n    #calculate the number of campers who went rowing in the afternoon\n    afternoon_rowers = c2\n    #calculate the difference between the two\n    difference = morning_rowers - afternoon_rowers\n    return difference", "mapping": {"c0": 29.0, "c1": 66.0, "c2": 26.0}}
{"question": "Dave had c0 apps on his phone. After adding some he had c1 left.How many apps did he add?", "answer": [1.0], "response": "def app_added(c0, c1):\n    # Dave had c0 apps on his phone\n    initial_apps = c0\n\n    # After adding some apps, he had c1 left\n    final_apps = c1\n\n    # The number of apps he added can be calculated by subtracting the initial number of apps from the final number of apps\n    added_apps = final_apps - initial_apps\n\n    return added_apps", "mapping": {"c0": 17.0, "c1": 18.0}}
{"question": "There were c0 parents in the program and c1 pupils too.How many more pupils were present compared to parents in the program?", "answer": [347.0], "response": "def compare_parents_pupils(c0, c1):\n    #calculate the difference between the number of pupils and parents\n    difference = c1 - c0\n\n    return difference", "mapping": {"c0": 174.0, "c1": 521.0}}
{"question": "Paco ate c0 cookies and had c1 cookies left.How many cookies did he have in the beginning?", "answer": [54.0], "response": "def cookies_in_beginning(c0, c1):\n    #Paco ate c0 cookies and had c1 cookies left\n    #We can calculate the number of cookies he had in the beginning by adding the number of cookies he ate to the number of cookies he had left\n    cookies_in_beginning = c0 + c1\n\n    return cookies_in_beginning", "mapping": {"c0": 19.0, "c1": 35.0}}
{"question": "If each bag has c0 cookies and you had c1 cookies in totalHow many bags of cookies do you have?", "answer": [7.0], "response": "def Problem(c0, c1):\n    #each bag has c0 cookies\n    cookies_per_bag = c0\n\n    #you have c1 cookies in total\n    total_cookies = c1\n\n    #the number of bags can be calculated by dividing the total number of cookies by the number of cookies per bag\n    bags = total_cookies // cookies_per_bag\n\n    return bags", "mapping": {"c0": 3.0, "c1": 21.0}}
{"question": "The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped c0 inches. The grasshopper jumped c1 inches farther than the frog and the mouse jumped c2 inches lesser than the frog.How far did the mouse jump?", "answer": [8.0], "response": "def jumping_contest(c0, c1, c2):\n    # The grasshopper jumped c0 inches\n    grasshopper_jump = c0\n\n    # The grasshopper jumped c1 inches farther than the frog\n    frog_jump = grasshopper_jump - c1\n\n    # The mouse jumped c2 inches lesser than the frog\n    mouse_jump = frog_jump - c2\n\n    return mouse_jump", "mapping": {"c0": 39.0, "c1": 19.0, "c2": 12.0}}
{"question": "Being his favorite, he saved checking on the grapevines for his last stop. He was told by c0 of the pickers that they fill c1 drums of grapes in c2 days.How many drums of grapes would be filled per day?", "answer": [15.0], "response": "def grapevine_rate(c0, c1, c2):\n    # c1 drums of grapes are filled in c2 days\n    # so the rate of filling would be c1/c2 drums per day\n    rate = c1/c2\n    return rate", "mapping": {"c0": 94.0, "c1": 90.0, "c2": 6.0}}
{"question": "Katie had c0 new games and c1 old games. Her friends had c2 new games and c3 old games.How many new games do they have together?", "answer": [92.0], "response": "def total_new_games(c0, c1, c2, c3):\n    #calculate the total number of new games by adding Katie's and her friends' new games\n    total_new = c0 + c2\n\n    return total_new", "mapping": {"c0": 84.0, "c1": 19.0, "c2": 8.0, "c3": 69.0}}
{"question": "Being his favorite, he saved checking on the grapevines after c0 stops. He was told by c1 of the pickers that they fill c2 drums of grapes per day.How many drums of grapes would be filled in c3 days?", "answer": [6264.0], "response": "def grapevine(c0, c1, c2, c3):\n    #c0 stops have already passed\n    stops_passed = c0\n\n    #c1 pickers fill c2 drums of grapes per day\n    drums_per_day = c1 * c2\n\n    #calculate the total number of drums filled in c3 days\n    total_drums = drums_per_day * c3\n\n    return total_drums", "mapping": {"c0": 57.0, "c1": 252.0, "c2": 108.0, "c3": 58.0}}
{"question": "After eating a hearty meal they went to see the Buckingham palace. There, Rachel learned that c0 visitors came to the Buckingham palace on the previous day. If c1 people visited the Buckingham palace within the past c2 daysHow many visitors visited the Buckingham palace on that day?", "answer": [784.0], "response": "def visitors_on_day(c0, c1, c2):\n    #calculate the average number of visitors per day\n    avg_visitors_per_day = c1 / c2\n\n    #calculate the number of visitors on the specific day\n    visitors_on_day = (avg_visitors_per_day * c2) - c0\n\n    return visitors_on_day", "mapping": {"c0": 45.0, "c1": 829.0, "c2": 85.0}}
{"question": "Adam has c0 apples. Jackie has c1 apples.How many more apples does Jackie have than Adam?", "answer": [1.0], "response": "def apple_difference(c0, c1):\n    #calculate the difference between the number of apples Jackie has and the number Adam has\n    difference = c1 - c0\n    return difference", "mapping": {"c0": 9.0, "c1": 10.0}}
{"question": "There are c0 baskets of peaches. Each basket has c1 red peaches and some more green peaches. If there are a total of c2 peaches in all basketsHow many green peaches are in each basket?", "answer": [2.0], "response": "def Problem(c0, c1, c2):\n    #each basket has c1 red peaches\n    red_peaches = c1\n\n    #total number of peaches in all baskets is c2\n    total_peaches = c2\n\n    #subtract the number of red peaches from the total to get the number of green peaches\n    green_peaches = total_peaches - (c0 * red_peaches)\n\n    #divide the number of green peaches by the number of baskets to get the number of green peaches in each basket\n    green_peaches_per_basket = green_peaches / c0\n\n    return green_peaches_per_basket", "mapping": {"c0": 2.0, "c1": 4.0, "c2": 12.0}}
{"question": "A chef had c0 apples and c1 peaches. After making some pies, he had c2 apples left.How many apples did he use?", "answer": [1.0], "response": "def apples_used(c0, c1, c2):\n    #calculate the number of apples used by subtracting the final number of apples from the initial number of apples and peaches\n    apples_before = c0\n    apples_after = c2\n    apples_used = apples_before - apples_after\n\n    return apples_used", "mapping": {"c0": 40.0, "c1": 54.0, "c2": 39.0}}
{"question": "A mailman has to give c0 pieces of junk mail to each of the c1 blocks. If there are c2 houses on a blockHow many pieces of junk mail should he give each house?", "answer": [2.0], "response": "def mailman(c0, c1, c2):\n    # The mailman has to give c0 pieces of junk mail to each block\n    # There are c1 blocks\n    # So, the total number of pieces of junk mail is c0 * c1\n    total_mail = c0 * c1\n\n    # There are c2 houses on each block\n    # So, the mailman should give each house c0/c2 pieces of junk mail\n    mail_per_house = total_mail / (c1 * c2)\n\n    return mail_per_house", "mapping": {"c0": 38.0, "c1": 78.0, "c2": 19.0}}
{"question": "Mary is baking a cake. The recipe calls for c0 cups of flour c1 cups of sugar and c2 cups of salt. She already put in c3 cups of flour.How many more cups of flour than cups of sugar does she need to add now?", "answer": [1.0], "response": "def flour_to_sugar(c0, c1, c2, c3):\n    #calculate how much flour is still needed\n    flour_needed = c0 - c3\n\n    #calculate how much sugar is still needed\n    sugar_needed = c1\n\n    #calculate the difference between the amount of flour and sugar needed\n    difference = flour_needed - sugar_needed\n\n    return difference", "mapping": {"c0": 10.0, "c1": 2.0, "c2": 80.0, "c3": 7.0}}
{"question": "Julia played tag with c0 kids on monday and c1 kids on tuesday. She played cards with c2 kids on wednesday.How many kids did she play with altogether?", "answer": [38.0], "response": "def total_kids_played_with(c0, c1, c2):\n    # add up the number of kids Julia played with on each day\n    total_kids = c0 + c1 + c2\n    return total_kids", "mapping": {"c0": 13.0, "c1": 10.0, "c2": 15.0}}
{"question": "Jesse needs a carpet of size c0 square feet to cover her room. If her room is c1 feet longWhat is the width of her room?", "answer": [2.0], "response": "def room_width(c0, c1):\n    #calculate the width by dividing the total area by the length\n    width = c0 / c1\n    return width", "mapping": {"c0": 10.0, "c1": 5.0}}
{"question": "There are c0 skittles in Steven's skittles collection. Steven also has c1 erasers. If the skittles and erasers are organized into c2 groupsHow big is each group?", "answer": [57.0], "response": "def group_size(c0, c1, c2):\n    #total number of items in the collection\n    total_items = c0 + c1\n\n    #size of each group can be calculated by dividing the total number of items by the number of groups\n    group_size = total_items / c2\n\n    return group_size", "mapping": {"c0": 4502.0, "c1": 4276.0, "c2": 154.0}}
{"question": "A mailman has to give c0 pieces of junk mail to each house in each of the c1 blocks. If there are c2 houses in each blockHow many pieces of junk mail should he give in total?", "answer": [1088.0], "response": "def total_junk_mail(c0, c1, c2):\n    #the mailman has to give c0 pieces of junk mail to each house in each block\n    mail_per_house = c0\n\n    #there are c2 houses in each block\n    houses_per_block = c2\n\n    #there are c1 blocks in total\n    total_blocks = c1\n\n    #the total number of pieces of junk mail can be calculated by multiplying the number of houses per block, the number of blocks, and the number of pieces of mail per house\n    total_mail = mail_per_house * houses_per_block * total_blocks\n\n    return total_mail", "mapping": {"c0": 4.0, "c1": 16.0, "c2": 17.0}}
{"question": "A book has c0 chapters. The first chapter is c1 pages long the second chapter is c2 pages long and the third chapter is c3 pages long.How many more pages does the first chapter have than the third chapter?", "answer": [32.0], "response": "def chapter_page_difference(c0, c1, c2, c3):\n    #calculate the total number of pages in the book\n    total_pages = c1 + c2 + c3\n\n    #calculate the average number of pages per chapter\n    avg_pages_per_chapter = total_pages / c0\n\n    #calculate the number of pages in the first chapter\n    first_chapter_pages = c1\n\n    #calculate the number of pages in the third chapter\n    third_chapter_pages = c3\n\n    #calculate the difference in pages between the first and third chapters\n    page_difference = first_chapter_pages - third_chapter_pages\n\n    return page_difference", "mapping": {"c0": 3.0, "c1": 53.0, "c2": 75.0, "c3": 21.0}}
{"question": "Dave had c0 apps on his phone. He added c1 new apps. After deleting some he had c2 left.How many more apps did he add than he deleted?", "answer": [3.0], "response": "def app_difference(c0, c1, c2):\n    # Dave had c0 apps on his phone\n    initial_apps = c0\n\n    # He added c1 new apps\n    new_apps = c1\n\n    # After deleting some he had c2 left\n    remaining_apps = c2\n\n    # Calculate the number of apps Dave deleted\n    deleted_apps = initial_apps + new_apps - remaining_apps\n\n    # Calculate the difference between the number of new apps and deleted apps\n    difference = new_apps - deleted_apps\n\n    return difference", "mapping": {"c0": 21.0, "c1": 89.0, "c2": 24.0}}
{"question": "Bobby ate c0 pieces of candy. Then he ate c1 more. If he initially had c2 pieces of candyHow many pieces of candy does he still have left?", "answer": [4.0], "response": "def candy_left(c0, c1, c2):\n    # Bobby initially had c2 pieces of candy\n    initial_candy = c2\n\n    # Bobby ate c0 pieces of candy\n    candy_eaten = c0\n\n    # Bobby then ate c1 more pieces of candy\n    more_candy_eaten = c1\n\n    # The total number of candy eaten is the sum of c0 and c1\n    total_candy_eaten = candy_eaten + more_candy_eaten\n\n    # The number of candy left is the initial number of candy minus the total candy eaten\n    candy_left = initial_candy - total_candy_eaten\n\n    return candy_left", "mapping": {"c0": 17.0, "c1": 15.0, "c2": 36.0}}
{"question": "Winter is almost here and most animals are migrating to warmer countries. There are some bird families living near the mountain. c0 bird families flew away for winter while c1 bird families stayed behind.How many bird families were living near the mountain at the start?", "answer": [34.0], "response": "def bird_families(c0, c1):\n    #c0 bird families flew away for winter\n    #c1 bird families stayed behind\n    #the total number of bird families at the start can be calculated by adding the number of families that stayed behind and the number that flew away\n    total_families = c0 + c1\n\n    return total_families", "mapping": {"c0": 20.0, "c1": 14.0}}
{"question": "Frank was reading through some books. Each book had c0 pages and it took Frank c1 days to finish each book. If he takes c2 days to finish all booksHow many books did he read?", "answer": [41.0], "response": "def books_read(c0, c1, c2):\n    #calculate the total number of pages read\n    total_pages = c0 * (c2 // c1)\n\n    #calculate the number of books read by dividing the total pages by the number of pages per book\n    books_read = total_pages // c0\n\n    return books_read", "mapping": {"c0": 66.0, "c1": 12.0, "c2": 492.0}}
{"question": "David did c0 more push-ups but c1 less crunches than Zachary in gym class today. If Zachary did c2 push-ups and c3 crunchesHow many more push-ups than crunches did Zachary do?", "answer": [25.0], "response": "def GymClass(c0, c1, c2, c3):\n    #calculate the number of push-ups David did\n    david_pushups = c2 + c0\n\n    #calculate the number of crunches Zachary did\n    zachary_crunches = c3 - c1\n\n    #calculate the difference between the number of push-ups and crunches Zachary did\n    difference = david_pushups - zachary_crunches\n\n    return difference", "mapping": {"c0": 36.0, "c1": 33.0, "c2": 58.0, "c3": 33.0}}
{"question": "Rebecca wants to split a collection of eggs into groups of c0. Rebecca has c1 marbles and c2 eggs.How many more eggs does Rebecca have than marbles?", "answer": [7.0], "response": "def egg_marble_difference(c0, c1, c2):\n    #calculate the total number of eggs\n    total_eggs = c0 * c2\n\n    #calculate the difference between the number of eggs and marbles\n    difference = total_eggs - c1\n\n    return difference", "mapping": {"c0": 20.0, "c1": 5.0, "c2": 12.0}}
{"question": "Baker made c0 cakes. Then he made c1 more cakes. He sold c2 of them.How many more cakes did baker make than those he sold?", "answer": [127.0], "response": "def cake_difference(c0, c1, c2):\n    #calculate the total number of cakes made\n    total_cakes = c0 + c1\n    #calculate the difference between the total cakes made and the cakes sold\n    difference = total_cakes - c2\n    #return the difference\n    return difference", "mapping": {"c0": 81.0, "c1": 92.0, "c2": 46.0}}
{"question": "c0 red peaches and some more green peaches are in the basket. If there are a total of c1 peaches in the basketHow many green peaches are in the basket?", "answer": [5.0], "response": "def green_peaches(c0, c1):\n    #calculate the number of green peaches by subtracting the number of red peaches from the total number of peaches\n    green = c1 - c0\n    return green", "mapping": {"c0": 10.0, "c1": 15.0}}
{"question": "c0 campers went rowing in the morning. c1 campers went rowing in the afternoon.How many more campers went rowing in the morning than in the afternoon?", "answer": [23.0], "response": "def rowing_difference(c0, c1):\n    #calculate the difference between the number of campers rowing in the morning and afternoon\n    difference = c0 - c1\n    return difference", "mapping": {"c0": 62.0, "c1": 39.0}}
{"question": "In a school there are c0 girls and c1 boys. There are also c2 teachersHow many people are there in that school?", "answer": [1396.0], "response": "def school_population(c0, c1, c2):\n    #total number of people in the school is the sum of girls, boys, and teachers\n    total_population = c0 + c1 + c2\n    return total_population", "mapping": {"c0": 315.0, "c1": 309.0, "c2": 772.0}}
{"question": "In Haley's class some boys love to play marbles. If Haley has c0 marbles and she gave c1 marbles to each boyHow many boys did she give the marbles to?", "answer": [2.0], "response": "def marbles(c0, c1):\n    # Haley has c0 marbles\n    total_marbles = c0\n\n    # Each boy received c1 marbles\n    marbles_per_boy = c1\n\n    # The number of boys can be calculated by dividing the total number of marbles given by the number of marbles each boy received\n    num_boys = total_marbles // marbles_per_boy\n\n    return num_boys", "mapping": {"c0": 10.0, "c1": 5.0}}
{"question": "Lewis earns $ c0 every week during the c1 weeks of harvest. He also earns $ c2 per week for working overtime. If he works overtime every weekHow much money does he earn during harvest season?", "answer": [1054997.0], "response": "def harvest_earnings(c0, c1, c2):\n    #calculate regular earnings\n    regular_earnings = c0 * c1\n\n    #calculate overtime earnings\n    overtime_earnings = c2 * c1\n\n    #calculate total earnings\n    total_earnings = regular_earnings + overtime_earnings\n\n    return total_earnings", "mapping": {"c0": 28.0, "c1": 1091.0, "c2": 939.0}}
{"question": "Rachel had to complete c0 pages of math homework, c1 pages of reading homework and c2 more pages of biology homework.How many more pages of math homework than biology homework did she have?", "answer": [8.0], "response": "def math_biology_diff(c0, c1, c2):\n    #calculate the total number of pages of biology homework\n    bio_pages = c1 + c2\n\n    #calculate the difference between the number of math pages and biology pages\n    diff = c0 - bio_pages\n\n    return diff", "mapping": {"c0": 11.0, "c1": 2.0, "c2": 3.0}}
{"question": "Adam has c0 more apples than jackie. Adam has c1 apples.How many apples does Jackie have?", "answer": [6.0], "response": "def JackieApples(c0, c1):\n    #Adam has c0 more apples than Jackie\n    #So Jackie has c1 - c0 apples\n    jackie_apples = c1 - c0\n\n    return jackie_apples", "mapping": {"c0": 3.0, "c1": 9.0}}
{"question": "Rachel picked c0 ripe apples from her tree. Now the tree has c1 ripe apples and c2 unripe apples.How many ripe apples did the tree have to begin with?", "answer": [5.0], "response": "def ripe_apples(c0, c1, c2):\n    # Rachel picked c0 ripe apples from the tree\n    # Now the tree has c1 ripe apples and c2 unripe apples\n    # We can calculate the number of ripe apples the tree had to begin with by subtracting the number of ripe and unripe apples now from the number of ripe apples Rachel picked\n    ripe_before = c0 + c1 + c2 - c1 - c2\n    return ripe_before", "mapping": {"c0": 3.0, "c1": 2.0, "c2": 27.0}}
{"question": "Melissa scored c0 points in each game. She also got c1 bonus points in each game.How many points did she score in c2 games?", "answer": [15089.0], "response": "def total_points(c0, c1, c2):\n    # Melissa scores c0 points in each game\n    points_per_game = c0\n\n    # She also gets c1 bonus points in each game\n    bonus_points_per_game = c1\n\n    # She played c2 games in total\n    total_games = c2\n\n    # Calculate the total points she scored in c2 games\n    total_points = (points_per_game + bonus_points_per_game) * total_games\n\n    return total_points", "mapping": {"c0": 109.0, "c1": 82.0, "c2": 79.0}}
{"question": "Rachel had to complete c0 pages of reading homework, c1 pages of math homework and c2 more pages of biology homework.How many more pages of math homework than reading homework did she have?", "answer": [3.0], "response": "def homework_diff(c0, c1, c2):\n    #calculate the total number of pages of homework for each subject\n    reading_hw = c0\n    math_hw = c1\n    bio_hw = c1 + c2\n\n    #calculate the difference between the number of pages of math homework and reading homework\n    diff = math_hw - reading_hw\n\n    return diff", "mapping": {"c0": 4.0, "c1": 7.0, "c2": 19.0}}
{"question": "After resting they decided to go for a swim. The depth of the water is c0 times Dean's height. If Ron is c1 feet tall and Dean is c2 feet shorter than RonHow deep was the water?", "answer": [81.0], "response": "def water_depth(c0, c1, c2):\n    #calculate Dean's height\n    dean_height = c1 - c2\n\n    #calculate the depth of the water\n    water_depth = c0 * dean_height\n\n    return water_depth", "mapping": {"c0": 9.0, "c1": 15.0, "c2": 6.0}}
{"question": "In a school there are c0 girls and c1 boys. There are also c2 teachersHow many pupils are there in that school?", "answer": [626.0], "response": "def total_pupils(c0, c1, c2):\n    #total number of pupils is the sum of girls and boys\n    pupils = c0 + c1\n    #add the number of teachers to get the total number of pupils in the school\n    total = pupils + c2\n    return total", "mapping": {"c0": 308.0, "c1": 318.0, "c2": 36.0}}
{"question": "Friends of Katie had c0 games and she had c1 ds games.How many more games does Katie have than her friends?", "answer": [6.0], "response": "def game_difference(c0, c1):\n    # Katie had c1 games\n    katie_games = c1\n\n    # Friends had c0 games\n    friends_games = c0\n\n    # Calculate the difference in games\n    difference = katie_games - friends_games\n\n    return difference", "mapping": {"c0": 57.0, "c1": 63.0}}
{"question": "Luke scored c0 points after playing c1 rounds of a trivia game. If he gained the same number of points each roundHow many points did he score per round?", "answer": [42.0], "response": "def Problem(c0, c1):\n    #Luke scored c0 points after playing c1 rounds of a trivia game\n    points = c0\n\n    #He gained the same number of points each round\n    rounds = c1\n\n    #The number of points he scored per round can be calculated by dividing the total points by the number of rounds\n    points_per_round = points / rounds\n\n    return points_per_round", "mapping": {"c0": 84.0, "c1": 2.0}}
{"question": "Next on his checklist is wax to stick the feathers together and colors to paint them. He needs a total of c0 g of colors to paint them. He needs c1 g of wax more. If the feathers require a total of c2 g of waxHow many grams of wax does he already have?", "answer": [331.0], "response": "def calculate_wax(c0, c1, c2):\n    #calculate the total amount of wax needed\n    total_wax_needed = c1 + c2\n\n    #calculate the amount of wax already available\n    wax_available = total_wax_needed - c0\n\n    return wax_available", "mapping": {"c0": 57.0, "c1": 22.0, "c2": 353.0}}
{"question": "Paige was helping her mom plant flowers and together they planted c0 seeds. They put c1 seeds in each flower bed and only c2 seeds grew into flowers in each flower bed.How many flower beds did they have?", "answer": [3.0], "response": "def flower_beds(c0, c1, c2):\n    #calculate the total number of flowers that grew\n    total_flowers = c0 * c2\n    \n    #calculate the number of flower beds\n    flower_beds = total_flowers // c1\n    \n    return flower_beds", "mapping": {"c0": 36.0, "c1": 12.0, "c2": 58.0}}
{"question": "At the zoo, a cage had c0 snakes and c1 alligators. If c2 snakes and c3 alligators were hidingHow many alligators were not hiding?", "answer": [56.0], "response": "def zoo(c0, c1, c2, c3):\n    #total number of snakes and alligators in the cage\n    total_animals = c0 + c1\n\n    #number of animals hiding\n    hiding_animals = c2 + c3\n\n    #number of animals not hiding can be calculated by subtracting the number of hiding animals from the total number of animals\n    not_hiding_animals = total_animals - hiding_animals\n\n    #return the number of alligators not hiding\n    return c1 - c3", "mapping": {"c0": 3.0, "c1": 75.0, "c2": 82.0, "c3": 19.0}}
{"question": "Paige was helping her mom plant flowers and together they planted c0 seeds. They put c1 seeds in each flower bed and only c2 seeds grew into flowers in each flower bed.How many flowers did they grow?", "answer": [220.0], "response": "def flower_growth(c0, c1, c2):\n    # calculate the total number of flower beds\n    flower_beds = c0 // c1\n    \n    # calculate the total number of flowers grown\n    flowers_grown = flower_beds * c2\n    \n    return flowers_grown", "mapping": {"c0": 55.0, "c1": 15.0, "c2": 60.0}}
{"question": "Mary is baking a cake. The recipe calls for c0 cups of sugar and c1 cups of flour. She already put in c2 cups of sugar.How many more cups of sugar does she need to add?", "answer": [3.0], "response": "def sugar_needed(c0, c1, c2):\n    #calculate how much sugar is still needed by subtracting the amount already added from the total amount needed\n    sugar_remaining = c0 - c2\n    return sugar_remaining", "mapping": {"c0": 7.0, "c1": 10.0, "c2": 4.0}}
{"question": "The grasshopper and the frog had a jumping contest. The grasshopper jumped c0 inches. The grasshopper jumped c1 inches farther than the grasshopper.How far did the frog jump?", "answer": [11.0], "response": "def jumping_contest(c0, c1):\n    # The grasshopper jumped c0 inches\n    grasshopper_jump = c0\n\n    # The grasshopper jumped c1 inches farther than the frog\n    frog_jump = grasshopper_jump + c1\n\n    return frog_jump", "mapping": {"c0": 13.0, "c1": 2.0}}
