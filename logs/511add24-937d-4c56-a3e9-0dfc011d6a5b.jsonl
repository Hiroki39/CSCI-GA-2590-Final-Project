{"question": "Each pack of dvds costs c0 dollars. If there is a discount of c1 dollars on each packHow much do you have to pay to buy each pack?", "answer": [51.0], "response": "def Problem(c0, c1):\n    #each pack of dvds costs c0 dollars\n    original_price = c0\n\n    #there is a discount of c1 dollars on each pack\n    discount = c1\n\n    #the final price after discount can be calculated by subtracting the discount from the original price\n    final_price = original_price - discount\n\n    return final_price", "mapping": {"c0": 76.0, "c1": 25.0}}
{"question": "Dan had $ c0 left with him after he bought a candy bar. If he had $ c1 at the startHow much did the candy bar cost?", "answer": [1.0], "response": "Let's think about it step by step:\n\ndef Problem(c0, c1):\n    #Dan had c0 left after buying a candy bar\n    money_left = c0\n\n    #Dan had c1 at the start\n    money_start = c1\n\n    #The cost of the candy bar can be calculated by subtracting the money left from the money Dan had at the start\n    candy_cost = money_start - money_left\n\n    return candy_cost", "mapping": {"c0": 3.0, "c1": 4.0}}
{"question": "Paco had c0 salty cookies and c1 sweet cookies. He ate c2 sweet cookies and c3 salty cookies.How many salty cookies did Paco have left?", "answer": [17.0], "response": "def Problem(c0, c1, c2, c3):\n    #Paco had c0 salty cookies and c1 sweet cookies\n    salty_cookies = c0\n\n    #He ate c2 sweet cookies and c3 salty cookies\n    eaten_sweet = c2\n    eaten_salty = c3\n\n    #The number of salty cookies Paco has left can be calculated by subtracting the number of salty cookies he ate from the original number of salty cookies\n    remaining_salty = salty_cookies - eaten_salty\n\n    return remaining_salty", "mapping": {"c0": 26.0, "c1": 17.0, "c2": 14.0, "c3": 9.0}}
{"question": "c0 children were riding on the bus. At the bus stop some children got off the bus. Then there were c1 children left on the bus.How many children got off the bus at the bus stop?", "answer": [22.0], "response": "def Problem(c0, c1):\n    #there were originally c0 children on the bus\n    children_before = c0\n\n    #there are c1 children left on the bus after some got off\n    children_after = c1\n\n    #The number of children who got off the bus can be calculated by subtracting the number of children left on the bus from the original number of children\n    got_off = children_before - children_after\n\n    return got_off", "mapping": {"c0": 43.0, "c1": 21.0}}
{"question": "c0 children were riding on the bus. At the bus stop c1 children got on the bus while some got off the bus. Then there were c2 children altogether on the bus.How many more children got on the bus than those that got off?", "answer": [2.0], "response": "def Problem(c0, c1, c2):\n    #c0 children were originally on the bus\n    original = c0\n\n    #c1 children got on the bus while some got off\n    net_change = c1\n\n    #there are c2 children altogether on the bus now\n    final = c2\n\n    #the number of children that got off the bus can be calculated by subtracting the final number of children from the net change\n    got_off = net_change - final\n\n    #the number of children that got on the bus can be calculated by subtracting the original number of children from the final number of children\n    got_on = final - original\n\n    #the difference between the number of children that got on and off the bus can be calculated by subtracting the number of children that got off from the number of children that got on\n    difference = got_on - got_off\n\n    return difference", "mapping": {"c0": 28.0, "c1": 82.0, "c2": 30.0}}
